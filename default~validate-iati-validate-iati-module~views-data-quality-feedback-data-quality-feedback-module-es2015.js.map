{"version":3,"sources":["./src/app/validate-iati/validate-result/validate-result.component.ts","./src/app/validate-iati/validate-result/validate-result.component.html","./src/app/validate-iati/upload-urls/upload-urls.component.ts","./src/app/validate-iati/upload-urls/upload-urls.component.html","./src/app/validate-iati/validate/validate.component.ts","./src/app/validate-iati/validate/validate.component.html","./src/app/validate-iati/shared/file-upload.service.ts","./src/app/validate-iati/upload-file/upload-file.component.ts","./src/app/validate-iati/upload-file/upload-file.component.html","./src/app/validate-iati/shared/validated-iati.service.ts","./src/app/validate-iati/validate-iati.ts","./src/app/validate-iati/validate-iati.module.ts","./src/app/validate-iati/shared/messages.service.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAEzB;;;;;;;;IC4B/B,uEACE;IAAA,uDACF;IAAA,4DAAO;;;IADL,0DACF;IADE,wGACF;;;IAEE,uDACF;;;IADE,uGACF;;;IAMA,uEACE;IAAA,6EAAsD;IAAA,uDAAiC;IAAA,4DAAS;IAClG,4DAAO;;;;IADiD,0DAAiC;IAAjC,sGAAiC;;;IAGvF,uEAA8B;IAAA,uDAA0B;IAAA,4DAAO;;;IAAjC,0DAA0B;IAA1B,0FAA0B;;;IAAxD,0JAA+D;;;IAAxD,oFAAqB;;;;;IAnBtC,wEACE;IAAA,0EACE;IAAA,0EACE;IADe,8ZAAuD;IACtE,yEACE;IAAA,4IAEO;IACP,sOAEc;IAChB,4DAAM;IACN,yEACE;IAAA,uDACF;;IAAA,4DAAM;IACN,0EACE;IAAA,8IAEO;IACP,wOAEc;IAChB,4DAAM;IACN,2EAA8B;IAAA,iEAAI;IAAA,4DAAM;IAC1C,4DAAM;IACR,4DAAM;IACR,qEAAe;;;;;;IAvB8D,0DAAiD;IAAjD,kLAAiD;IAE/G,0DAAqC;IAArC,yGAAqC;IAQ5C,0DACF;IADE,gMACF;IAES,0DAAoC;IAApC,wGAAoC;;;IA5BrD,yEACE;IAAA,yEACE;IAAA,yEACE;IAAA,sEACF;IAAA,4DAAM;IACN,0EACE;IAAA,qEACF;IAAA,4DAAM;IACN,0EACE;IAAA,0EACF;IAAA,4DAAM;IACR,4DAAM;IAEN,+IAyBe;IACjB,4DAAM;;;IA1BsC,0DAAmB;IAAnB,4FAAmB;;;;IA8C7D,wEACE;IAAA,oEACE;IAAA,2LACF;IAAA,4DAAI;IACJ,0EACE;IAAA,2EACE;IAD0C,+UAA6B;IACvE,uEAMA;IAAA,6EAKE;IAAA,8EACF;IAAA,4DAAS;IACX,4DAAO;IACT,4DAAM;IACR,qEAAe;;;IAhBc,0DAAkB;IAAlB,kFAAkB;IAGvC,0DAAqB;IAArB,qFAAqB;IAOrB,0DAAyB;IAAzB,yFAAyB;;;;IAQjC,wEACE;IAAA,oEACE;IAAA,iGACF;IAAA,4DAAI;IACF,2EAA0B;IAAA,uDAAe;IAAA,4DAAO;IAChD,4EAIE;IAFA,wUAAqB;IAErB,+EACF;IAAA,4DAAS;IACb,qEAAe;;;IAPe,0DAAe;IAAf,mFAAe;;;;IAS7C,wEACE;IAAA,oEACE;IAAA,+GACF;IAAA,4DAAI;IACF,2EACE;IAD6C,0UAAwB;IACrE,uEAMA;IAAA,6EAKE;IAAA,iEACF;IAAA,4DAAS;IACT,4EAIE;IAFA,6UAA0B;IAE1B,mEACF;IAAA,4DAAS;IACX,4DAAO;IACP,4EAIE;IAFA,0UAAuB;IAEvB,oEACF;IAAA,4DAAS;IACb,qEAAe;;;IA3Bc,0DAAqB;IAArB,qFAAqB;IAG1C,0DAAwB;IAAxB,wFAAwB;IAOxB,0DAAgD;IAAhD,uHAAgD;;;AD3GrD,MAAM,uBAAuB;IAsBlC,YACmB,aAA6B,EAC7B,MAAc,EACd,oBAA0C,EAC1C,MAAkB,EAClB,EAAe;QAJf,kBAAa,GAAb,aAAa,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAQ;QACd,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAY;QAClB,OAAE,GAAF,EAAE,CAAa;QA1BlC,gBAAW,GAAG,EAAE,CAAC;QACjB,aAAQ,GAAG,EAAE,CAAC;QACd,eAAU,GAAG,EAAE,CAAC;QAChB,qBAAgB,GAAsB,EAAE,CAAC;QACzC,QAAG,GAAG,EAAE,CAAC;QACT,mBAAc,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;QACtC,WAAM,GAAG,kDAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAG1B,cAAS,GAA+B,OAAO,CAAC;QAEhD,aAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QACxE,YAAO,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,KAAK,EAAE,IAAI,CAAC,QAAQ;SACrB,CAAC,CAAC;QAEH,UAAK,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QACrE,SAAI,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC;QAUD,IAAI,CAAC,aAAa;aACf,MAAM;aACN,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChD,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,IAAI,CAAC,qBAAqB,EAAE,EAAE;gBAChC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;gBAC5B,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC;aACrD,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;gBACnC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;aAC1B;YACD,QAAQ;YACR,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC;QACxC,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAC7D,CAAC;IACN,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;YACjC,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;SAC1F;IACH,CAAC;IAED,WAAW,CAAC,SAA0B;QACpC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;IACrC,CAAC;IAED,YAAY,CAAC,SAA0B;QACrC,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC;IAC/B,CAAC;IAED,UAAU,CAAC,OAAO;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,qCAAqC,CAAC,CAAC,CAAC,GAAG,CAAC;IACjF,CAAC;IAED,QAAQ,CAAC,OAAwB,EAAE,EAAU;QAC3C,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;YAC7B,MAAM,gBAAgB,GAAqB;gBACzC,WAAW,EAAE;oBACX,WAAW,EAAE,IAAI;iBAClB;aACF,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC;SACtE;IACH,CAAC;IAED,mBAAmB,CAAC,CAAC;QACnB,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACnD,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,GAAG,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/D,OAAO,CAAC,EAAE,GAAG,KAAK,CAAC;QACnB,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;QACjC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;QACxB,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;QACzB,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;QAC5B,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC;QACpB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACnC,OAAO,CAAC,MAAM,EAAE,CAAC;QAEjB,IAAI;YACF,MAAM,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,GAAG,CAAC,CAAC;YAC/C,IAAI,UAAU,EAAE;gBACd,OAAO,IAAI,CAAC;aACb;SACF;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;SACrC;gBAAS;YACR,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACpC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,gBAAgB;QACd,uBAAuB;QACvB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;YACzB,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;SAClF;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;IAC1B,CAAC;IAED,WAAW;QACT,uBAAuB;QACvB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;YACpF,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;SAC1B;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE;YAClC,WAAW,EAAE;gBACX,cAAc,EAAE,IAAI,CAAC,QAAQ;aAC9B;SACF,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,SAAS,CAChE,GAAG,EAAE;YACH,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QAC3B,CAAC,CACF,CAAC;IACJ,CAAC;;8FAvKU,uBAAuB;uGAAvB,uBAAuB;QChBpC,yEACE;QAAA,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QAE3B,yEACE;QAAA,oEACE;QAAA,6FACA;QAAA,gEACA;QAAA,uEAA0C;QAAA,uDAAsD;QAAA,4DAAI;QACpG,4EAAmF;QAAtC,+IAAS,wBAAoB,MAAM,CAAC,IAAC;QAAC,4EAAgB;QAAA,4DAAS;QAC9G,4DAAI;QACJ,qEAAG;QAAA,0HAAoD;QAAA,4DAAI;QAC3D,qEAAG;QAAA,yJAAmF;QAAA,4DAAI;QAC5F,4DAAM;QAEN,qHAuCM;QAEN,0EACE;QAAA,qEACE;QAAA,sKACF;QAAA,4DAAI;QACJ,qEAAG;QAAA,qLAAyH;QAAA,4DAAI;QAChI,6EAIE;QAFA,gJAAS,kBAAc,IAAC;QAExB,4EACF;QAAA,4DAAS;QACX,4DAAM;QAEN,0EACE;QAAA,qEACE;QAAA,oSAEF;QAAA,4DAAI;QACJ,uIAqBe;QAEf,uIAWe;QAEf,wIA+Be;QACjB,4DAAM;QACR,4DAAM;;QAvIG,0DAAsC;QAAtC,2JAAsC;QAAC,0DAAsD;QAAtD,sIAAsD;QAO9F,0DAA6B;QAA7B,6FAA6B;QA2DlB,2DAA2B;QAA3B,2FAA2B;QAuB3B,0DAA2B;QAA3B,2FAA2B;QAa3B,0DAA0B;QAA1B,0FAA0B;;;;;;;;;;;;;;AC7G7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AAE3C;AAEI;;;;;;;ICKpC,uEAA+D;IAAA,uDAAiE;IAAA,4DAAI;;;IAArE,0DAAiE;IAAjE,gJAAiE;;;IAkB5H,wEACE;IAAA,sHACF;IAAA,qEAAe;;;IACf,wEACE;IAAA,oGACF;IAAA,qEAAe;;;IACf,wEACE;IAAA,6EAAiD;IACjD,6IACF;IAAA,qEAAe;;IAFA,0DAAqB;IAArB,8EAAqB;;;;IAbxC,yEAKE;IAAA,2EACE;IAAA,yIAEe;IACf,yIAEe;IACf,yIAGe;IACjB,qEAAe;IACjB,4DAAM;;;IAdJ,4KAAuD;IAEzC,0DAA0B;IAA1B,0FAA0B;IACvB,0DAAqB;IAArB,iFAAqB;IAGrB,0DAAuB;IAAvB,mFAAuB;;;;ADjBvC,MAAM,mBAAmB;IAc9B,YACmB,iBAAoC,EACpC,MAAc;QADd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QAfvB,kBAAa,GAAG,IAAI,0DAAY,EAAQ,CAAC;QACzC,UAAK,GAAG,IAAI,0DAAY,EAAQ,CAAC;QAI3C,SAAI,GAAG,EAAE,CAAC;QACV,kBAAa,GAAG,EAAE,CAAC;QACnB,aAAQ,GAAG,EAAE,CAAC;QACd,mBAAc,GAAG,EAAE,CAAC;QAEpB,eAAU,GAAa,CAAC,GAAG,CAAC,CAAC;QAC7B,kBAAa,GAA8C,OAAO,CAAC;IAK/D,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC;IACzF,CAAC;IAED,MAAM,CAAC,MAAM;QACX,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE;YAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,mDAAI,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAClB,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IAClC,CAAC;IAED,UAAU;QACR,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;QACnE,MAAM,WAAW,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5D,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtF,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;YACpD,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;YACjC,MAAM,WAAW,GAAG,KAAK,CAAC,EAAE;gBAC1B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBAC9B,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;YAC/B,CAAC,CAAC;YAEF,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAE/B,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC;iBACzD,SAAS,CACR,CAAC,QAAa,EAAE,EAAE;gBAChB,MAAM,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;gBAEvC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAS;qBAC/C,SAAS,CACR,GAAG,EAAE;oBACH,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;oBACrC,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;oBACxB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;gBACjC,CAAC,EACD,WAAW,CACZ,CAAC;YACN,CAAC,EACD,WAAW,CACZ,CAAC;SACL;IACH,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IAC1D,CAAC;IAEO,WAAW,CAAC,KAAK;QACvB,2BAA2B;QAC3B,OAAO,wcAAwc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9d,CAAC;IAEO,cAAc,CAAC,IAAc,EAAE,cAAsB;QAC3D,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO,+CAAE,CAAC,MAAa,CAAC,CAAC;SAC1B;QAED,OAAO,qDAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,GAAG,EAAE,cAAc,CAAC,CAAQ,CAAC,CAAC;IACtG,CAAC;;sFAzFU,mBAAmB;mGAAnB,mBAAmB;QCbhC,yEACE;QAAA,yEACE;QAAA,wEAAuB;QAAA,qKAA0G;QAAA,4DAAK;QACtI,2EAMA;QALE,kJAAU,kBAAc,IAAC;QAD3B,4DAMA;QAAA,2GAAoI;QACtI,4DAAM;QAEN,yEACE;QAAA,wEAAuB;QAAA,+FAAoC;QAAA,4DAAK;QAChE,4EAKE;QAFA,2IAAS,gBAAY,IAAC;QAEtB,mEACF;QAAA,4DAAS;QACT,iHAiBM;QACR,4DAAM;QAEN,0EACE;QAAA,yEAAuB;QAAA,+FAAmC;QAAA,4DAAK;QAC/D,6EAKE;QAHA,4IAAS,kBAAc,IAAC;QAGxB,sEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;;QAnDmB,uLAA4D;QACjE,0DAAuC;QAAvC,kKAAuC;QAMrD,0DAAsE;QAAtE,2IAAsE;QAErC,0DAA0B;QAA1B,0FAA0B;QAG7C,0DAAuC;QAAvC,kKAAuC;QAIrD,0DAA+B;QAA/B,4FAA+B;QAM9B,0DAA+B;QAA/B,+FAA+B;QAmBlB,0DAAuC;QAAvC,kKAAuC;QAKrD,0DAA+B;QAA/B,4FAA+B;;;;;;;;;;;;;;;;;;;;;;;;AC3CG;;;;;;;;ICFtC,yEACE;IAAA,uEAAiD;IAAA,sFAAiC;IAAA,4DAAI;IACxF,4DAAM;;;IADD,0DAA4C;IAA5C,oKAA4C;;ADQ5C,MAAM,iBAAiB;IAK5B,YAA6B,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAF3C,mBAAc,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;QAGpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC;IACzF,CAAC;IAEK,QAAQ;;QACd,CAAC;KAAA;IAED,aAAa,CAAC,IAAU;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,KAAK;QACH,IAAI,CAAC,IAAI,GAAG,mDAAI,CAAC,IAAI,CAAC;IACxB,CAAC;;kFAlBU,iBAAiB;iGAAjB,iBAAiB;QCV9B,yEACE;QAAA,6GAEM;QACN,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QAEnB,yEACE;QAAA,yEACE;QAAA,qFAIC;QAHC,wKAAiB,yBAAqB,IAAC,0FAC9B,WAAO,IADuB;QAGxC,4DAAkB;QACrB,4DAAM;QACN,yEAAuC;QAAA,6DAAE;QAAA,4DAAM;QAC/C,yEACE;QAAA,sFAIC;QAHC,yKAAiB,yBAAqB,IAAC,2FAC9B,WAAO,IADuB;QAGxC,4DAAkB;QACrB,4DAAM;QACR,4DAAM;QAtBR,4DACE;;QAA4B,0DAAoB;QAApB,oFAAoB;QAU1C,0DAAa;QAAb,0EAAa;QAQb,0DAAa;QAAb,0EAAa;;;;;;;;;;;;;;ACnBrB;AAAA;AAAA;AAAA;AAAA;AAA6E;AAGhC;;;AAGtC,MAAM,iBAAiB;IAM5B,YACmB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QANnC,gBAAW,GAAG,EAAE,CAAC;QACT,uBAAkB,GAAW,MAAM,CAAC,KAAK,CAAC,gBAAgB,GAAG,6BAA6B,CAAC;QAC3F,qBAAgB,GAAW,MAAM,CAAC,KAAK,CAAC,gBAAgB,GAAG,4BAA4B,CAAC;QACxF,wBAAmB,GAAW,MAAM,CAAC,KAAK,CAAC,gBAAgB,GAAG,sBAAsB,CAAC;IAIzF,CAAC;IAEL,gBAAgB,CAAC,cAAuB;QACtC,IAAI,CAAC,cAAc,EAAE;YACnB,kCAAkC;YAClC,MAAM,GAAG,GAAG,IAAI,gEAAW,CAAC,MAAM,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;YAEpE,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAChC,2DAAI,EAAE,EACN,4DAAK,CAAC,CAAC,CAAC,CACF,CAAC;SACV;aAAM;YACL,2BAA2B;YAC3B,MAAM,GAAG,GAAG,IAAI,gEAAW,CAAC,KAAK,EAAE,IAAI,CAAC,mBAAmB,GAAG,GAAG,GAAG,cAAc,CAAC,CAAC;YAEpF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAChC,2DAAI,EAAE,EACN,4DAAK,CAAC,CAAC,CAAC,CACF,CAAC;SACV;IACH,CAAC;IAED,UAAU,CAAC,IAAU,EAAE,cAAuB;QAC5C,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QAED,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,mBAAmB,IAAI,cAAc,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACnH,MAAM,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;QAClC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAE3C,MAAM,GAAG,GAAG,IAAI,gEAAW,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;QAErD,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAChC,2DAAI,EAAE,EACN,4DAAK,CAAC,CAAC,CAAC,CACF,CAAC;IACX,CAAC;IAED,cAAc,CAAC,OAAe,EAAE,cAAuB;QACrD,MAAM,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,mBAAmB,IAAI,cAAc,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAEhH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,EACH,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,EAChC;YACE,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB,CAAC,2DAA2D;aAC/F;YACD,YAAY,EAAE,MAAM;SACrB,CACF,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;;kFAhEU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB;;;;;;;;;;;;;ACL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AAE3C;AAEI;;;;;;;;ICChC,wEACE;IAAA,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,wFACF;;;IAHF,6EACE;IAAA,sHAEI;IACN,4DAAU;;;IAHY,0DAAgB;IAAhB,yFAAgB;;;;IAMlC,wEACE;IAAA,4EACE;IAAA,mEACF;IAAA,4DAAQ;IACR,4EAQF;IALI,kWAAgC;IAHlC,4DAQF;IAAA,qEAAe;;;IAHX,0DAAqE;IAArE,mJAAqE;;;;IAKvE,4EAKE;IAHA,mVAAsB;IAGtB,kEACF;IAAA,4DAAS;;;IAHP,+FAA+B;;;IAnBvC,wEACE;IAAA,8EACE;IAAA,iJAYe;IACf,2NAQc;IAChB,4DAAU;IACZ,qEAAe;;;;IAvBI,0DAA6B;IAA7B,8FAA6B;;;;IA6BlD,4EAME;IAHA,+TAAsB;IAGtB,mEACF;IAAA,4DAAS;;;IAHP,+FAA+B;;;IAW7B,wEACE;IAAA,sHACF;IAAA,qEAAe;;;IACf,wEACE;IAAA,oGACF;IAAA,qEAAe;;;IACf,wEACE;IAAA,6EAAiD;IACjD,6IACF;IAAA,qEAAe;;IAFA,0DAAqB;IAArB,8EAAqB;;;;IAbxC,0EAKE;IAAA,4EACE;IAAA,yIAEe;IACf,yIAEe;IACf,yIAGe;IACjB,qEAAe;IACjB,4DAAM;;;IAdJ,4KAAuD;IAEzC,0DAA0B;IAA1B,0FAA0B;IACvB,0DAAqB;IAArB,iFAAqB;IAGrB,0DAAuB;IAAvB,mFAAuB;;;;AD5CvC,MAAM,mBAAmB;IAe9B,YACmB,MAAkB,EAClB,MAAc,EACd,iBAAoC;QAFpC,WAAM,GAAN,MAAM,CAAY;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;QAjB7C,kBAAa,GAAG,IAAI,0DAAY,EAAQ,CAAC;QACzC,UAAK,GAAG,IAAI,0DAAY,EAAQ,CAAC;QAI3C,kBAAa,GAAW,EAAE,CAAC;QAC3B,gBAAW,GAAG,EAAE,CAAC;QACjB,mBAAc,GAAG,EAAE,CAAC;QACpB,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAA8C,OAAO,CAAC;QACnE,aAAQ,GAAG,EAAE,CAAC;QAEd,eAAU,GAAG,CAAC,GAAG,CAAC,CAAC;IAMf,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC;IACzF,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,mDAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,UAAU;QACR,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC7D,MAAM,WAAW,GAAG,KAAK,CAAC,EAAE;YAC1B,yDAAyD;YACzD,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;QAC/B,CAAC,CAAC;QAEF,IAAI,KAAK,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAE/B,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC;iBACzD,SAAS,CACR,CAAC,QAA2B,EAAE,EAAE;gBAC9B,MAAM,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;gBAExC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC;qBACvC,SAAS,CACR,GAAG,EAAE;oBACH,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;oBACrC,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;oBACxB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;gBACjC,CAAC,EACD,WAAW,CACZ,CAAC;YACN,CAAC,EACD,WAAW,CACZ,CAAC;SACL;IACH,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,UAAU;QACR,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAEO,cAAc,CAAC,KAAa,EAAE,cAAsB;QAC1D,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACjB,OAAO,+CAAE,CAAC,MAAa,CAAC,CAAC;SAC1B;QAED,OAAO,qDAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,EAAE,cAAc,CAAC,CAAQ,CAAC,CAAC;IACrG,CAAC;;sFAlFU,mBAAmB;mGAAnB,mBAAmB;QCfhC,qEAAI;QAAA,iHAAsD;QAAA,4DAAK;QAC/D,yEACE;QAAA,yEACE;QAAA,wEAAuB;QAAA,0IAA+E;QAAA,4DAAK;QAC3G,yEACE;QAAA,uHAIU;QACV,iIAyBe;QACjB,4DAAM;QACR,4DAAM;QAEN,yEACE;QAAA,yEAAuB;QAAA,0FAA8B;QAAA,4DAAK;QAC1D,uHAOS;QAET,iHAiBM;QACR,4DAAM;QAEN,0EAIE;QAAA,yEAAuB;QAAA,+FAAmC;QAAA,4DAAK;QAC/D,6EAKE;QAHA,4IAAS,kBAAc,IAAC;QAGxB,sEACF;QAAA,4DAAS;QACX,4DAAM;QAER,4DAAM;;QAnFD,0DAA2D;QAA3D,sLAA2D;QAC5C,0DAAuC;QAAvC,kKAAuC;QAG3C,0DAA0B;QAA1B,0FAA0B;QAKrB,0DAAwB;QAAxB,wFAAwB;QA6BzB,0DAAuC;QAAvC,kKAAuC;QAGpD,0DAAwB;QAAxB,wFAAwB;QASxB,0DAA+B;QAA/B,+FAA+B;QAqBlC,0DAAuC;QAAvC,kKAAuC;QAMrC,0DAA+B;QAA/B,4FAA+B;;;;;;;;;;;;;;AC5ErC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACW;;;;AAO1C,MAAM,oBAAoB;IAG/B,YACU,MAAkB,EAClB,IAAgB;QADhB,WAAM,GAAN,MAAM,CAAY;QAClB,SAAI,GAAJ,IAAI,CAAY;QAJlB,sBAAiB,GAAW,MAAM,CAAC,KAAK,CAAC,gBAAgB,GAAG,oBAAoB,CAAC;QA+CjF,uBAAkB,GAAG,CAAC,EAAU,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,gBAAgB,wBAAwB,EAAE,EAAE,CAAC;IA1CtG,CAAC;IAEL,cAAc,CAAC,WAAmB;QAChC,MAAM,GAAG,GAAW,IAAI,CAAC,iBAAiB,GAAG,kCAAkC,GAAG,WAAW,CAAC;QAE9F,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,CAAC;aACvC,IAAI,CACH,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,EACnD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC,CACnD,CAAC;IACb,CAAC;IAED,kBAAkB,CAAC,UAAkB;QACnC,MAAM,GAAG,GAAW,IAAI,CAAC,iBAAiB,GAAG,GAAG,GAAG,UAAU,CAAC;QAC9D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,CAAC;aAC3B,IAAI,CACH,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,EACnD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC,CACnD,CAAC;IACb,CAAC;IAED,oBAAoB;IACpB,eAAe,CAAC,WAAmB;QACjC,MAAM,GAAG,GAAW,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAC5B,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC,CAC3D,CAAC;IAEJ,CAAC;IAED,SAAS,CAAC,EAAU,EAAE,KAAa;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE;YAClD,KAAK;SACN,CAAC,CAAC,IAAI,CACL,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CACrD,CAAC;IACJ,CAAC;IAKD;;;;;;OAMG;IACK,WAAW,CAAI,SAAS,GAAG,WAAW,EAAE,MAAU;QACxD,OAAO,CAAC,KAAU,EAAiB,EAAE;YAEnC,yCAAyC;YACzC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAEzB,8DAA8D;YAC9D,qDAAqD;YAErD,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;;wFArEU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB;;;;;;;;;;;;;ACVjC;AAAA;AAAA,IAAY,IAIX;AAJD,WAAY,IAAI;IACd,uBAAe;IACf,qBAAa;IACb,qBAAa;AACf,CAAC,EAJW,IAAI,KAAJ,IAAI,QAIf;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACS;AAED;AAEE;AACQ;AACL;AACW;AACG;AACA;AACY;AACpB;;;AAGlE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+EAAiB,EAAE;IAC1C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,kGAAuB,EAAE;CACpD,CAAC;AAsBK,MAAM,kBAAkB;;kGAAlB,kBAAkB;+JAAlB,kBAAkB,mBANlB;QACT,6EAAiB;QACjB,wEAAe;QACf,mFAAoB;KACrB,YAhBQ;YACP,4DAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,qEAAgB;YAChB,kEAAY;SACb;oIAaU,kBAAkB,mBAX3B,+EAAiB;QACjB,sFAAmB;QACnB,kGAAuB;QACvB,sFAAmB,aATnB,4DAAY,gEAEZ,qEAAgB;QAChB,kEAAY;;;;;;;;;;;;;ACzBhB;AAAA;AAAA;AAAA;AAA+B;;AAKxB,MAAM,eAAe;IAI1B;QAHA,aAAQ,GAAG,IAAI,4CAAO,EAAa,CAAC;QACpC,kBAAa,GAAc,EAAE,CAAC;IAEd,CAAC;IAEjB,GAAG,CAAC,OAAgB;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,KAAK;QACH,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;IACjD,CAAC;;8EAdU,eAAe;kGAAf,eAAe,WAAf,eAAe","file":"default~validate-iati-validate-iati-module~views-data-quality-feedback-data-quality-feedback-module-es2015.js","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { Subscription, timer } from 'rxjs';\n\nimport { LogService } from '../../core/logging/log.service';\nimport { IatiTestDataset } from './../shared/iati-testdataset';\nimport { ValidatedIatiService } from './../shared/validated-iati.service';\n\n\n\n@Component({\n  selector: 'app-validate-result',\n  templateUrl: './validate-result.component.html',\n  styleUrls: ['./validate-result.component.scss']\n})\nexport class ValidateResultComponent implements OnDestroy {\n  workspaceId = '';\n  uploadId = '';\n  currentUrl = '';\n  iatiDatasetDatas: IatiTestDataset[] = [];\n  md5 = '';\n  environmentUrl = window.__env.baseUrl;\n  source = timer(100, 2000);\n  subscribeTimer: Subscription;\n  interval: any;\n  emailMode: 'saved' | 'edit' | 'draft' = 'draft';\n\n  newEmail = this.fb.control('', [Validators.required, Validators.email]);\n  newForm: FormGroup = this.fb.group({\n    email: this.newEmail,\n  });\n\n  email = this.fb.control('', [Validators.required, Validators.email]);\n  form: FormGroup = this.fb.group({\n    email: this.email,\n  });\n\n  constructor(\n    private readonly activateRoute: ActivatedRoute,\n    private readonly router: Router,\n    private readonly validatedIatiService: ValidatedIatiService,\n    private readonly logger: LogService,\n    private readonly fb: FormBuilder\n  ) {\n\n    this.activateRoute\n      .params\n      .subscribe(params => {\n        this.uploadId = params['id'];\n      });\n\n    this.subscribeTimer = this.source.subscribe(val => {\n      this.loadData();\n\n      if (this.allDataHasJsonUpdated()) {\n        logger.debug('unsubscribe');\n        this.subscribeTimer.unsubscribe();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscribeTimer.unsubscribe();\n  }\n\n  loadData() {\n    this.validatedIatiService.getTmpWorkspace(this.uploadId)\n      .subscribe(\n        data => {\n          if (!this.email.value && data.email) {\n            this.email.setValue(data.email);\n            this.emailMode = 'saved';\n          }\n          // this;\n          this.iatiDatasetDatas = data.datasets;\n        },\n        error => this.logger.error('Faild to load iati data', error)\n      );\n  }\n\n  allDataHasJsonUpdated(): boolean {\n    if (!this.iatiDatasetDatas.length) {\n      return false;\n    } else {\n      return this.iatiDatasetDatas.every(iatiDatasetData => this.jsonUpdated(iatiDatasetData));\n    }\n  }\n\n  jsonUpdated(inDataset: IatiTestDataset): boolean {\n    return !!inDataset['json-updated'];\n  }\n\n  hasSourceUrl(inDataset: IatiTestDataset): boolean {\n    return !!inDataset.sourceUrl;\n  }\n\n  reportType(dataset): string {\n    return this.jsonUpdated(dataset) ? 'Validation finished (click to view)' : '-';\n  }\n\n  rowClick(dataset: IatiTestDataset, id: string) {\n    if (this.jsonUpdated(dataset)) {\n      const navigationExtras: NavigationExtras = {\n        queryParams: {\n          isTestfiles: true,\n        }\n      };\n\n      this.router.navigate(['view', 'dqf', 'files', id], navigationExtras);\n    }\n  }\n\n  copyTextToClipboard(_) {\n    const txtArea = document.createElement('textarea');\n    const url = this.environmentUrl + '/validate/' + this.uploadId;\n    txtArea.id = 'txt';\n    txtArea.style.position = 'fixed';\n    txtArea.style.top = '0';\n    txtArea.style.left = '0';\n    txtArea.style.opacity = '0';\n    txtArea.value = url;\n    document.body.appendChild(txtArea);\n    txtArea.select();\n\n    try {\n      const successful = document.execCommand('copy');\n      console.log('Copying text command was ' + url);\n      if (successful) {\n        return true;\n      }\n    } catch (err) {\n      console.log('Oops, unable to copy');\n    } finally {\n      document.body.removeChild(txtArea);\n    }\n    return false;\n  }\n\n  saveEmailAddress() {\n    // TODO: added api call\n    if (this.form.valid) {\n      this.emailMode = 'saved';\n      this.validatedIatiService.sendEmail(this.uploadId, this.email.value).subscribe();\n    }\n  }\n\n  editEmail() {\n    this.newEmail.setValue(this.email.value);\n    this.emailMode = 'edit';\n  }\n\n  updateEmail() {\n    // TODO: added api call\n    if (this.newForm.valid) {\n      this.email.setValue(this.newEmail.value);\n      this.validatedIatiService.sendEmail(this.uploadId, this.newEmail.value).subscribe();\n      this.newEmail.reset();\n      this.emailMode = 'saved';\n    }\n  }\n\n  returnViewMode() {\n    this.newEmail.reset();\n    this.emailMode = 'saved';\n  }\n\n  addMoreFiles() {\n    this.router.navigate(['/validate'], {\n      queryParams: {\n        tmpWorkspaceId: this.uploadId,\n      }\n    });\n  }\n\n  removeEmail() {\n    this.validatedIatiService.sendEmail(this.uploadId, null).subscribe(\n      () => {\n        this.newEmail.reset();\n        this.email.reset();\n        this.emailMode = 'draft';\n      }\n    );\n  }\n}\n","<div class=\"container result-validation\">\n  <h1>Validation results</h1>\n\n  <div class=\"content-block\">\n    <p>\n      Your personal workspace is here:\n      <br>\n      <a [routerLink]=\"['/validate', uploadId]\">{{environmentUrl}}/iati-feedback/validate/{{uploadId}}</a>\n      <button class=\"btn btn-outline-primary ml-2\" (click)=\"copyTextToClipboard('text')\">Copy the address</button>\n    </p>\n    <p>This is where you can see your ‘Validation Results’.</p>\n    <p>You can ‘Copy the address’ of your personal workplace and access the results later.</p>\n  </div>\n\n  <div *ngIf=\"iatiDatasetDatas.length\" class=\"files\">\n    <div class=\"row heading\">\n      <div class=\"col-12 col-md\">\n        File name\n      </div>\n      <div class=\"col-12 col-md d-none d-md-block\">\n        Uploaded\n      </div>\n      <div class=\"col-12 col-md d-none d-md-block\">\n        Report status\n      </div>\n    </div>\n\n    <ng-container *ngFor=\"let iatiDatasetData of iatiDatasetDatas\">\n      <div class=\"wrapper\">\n        <div class=\"row\" (click)=\"rowClick(iatiDatasetData, iatiDatasetData.id)\" [ngClass]=\"{'dqf': jsonUpdated(iatiDatasetData)}\"  >\n          <div class=\"col-12 col-md\">\n            <span *ngIf=\"hasSourceUrl(iatiDatasetData); else elseBlock2\" >\n              {{ iatiDatasetData.sourceUrl }}\n            </span>\n            <ng-template #elseBlock2>\n              {{ iatiDatasetData.filename }}\n            </ng-template>\n          </div>\n          <div class=\"col-12 col-md\">\n            {{ iatiDatasetData.uploaded | date:'yyyy-MM-dd HH:mm (z)' }}\n          </div>\n          <div class=\"col-12 col-md\">\n            <span *ngIf=\"jsonUpdated(iatiDatasetData); else elseBlock\" >\n              <button type=\"button\" class=\"btn btn-link dqf-button\">{{ reportType(iatiDatasetData) }}</button>\n            </span>\n            <ng-template #elseBlock>\n              <span *ngIf=\"iatiDatasetData\">{{iatiDatasetData.status}}</span>\n            </ng-template>\n          </div>\n          <div class=\"col-12 d-md-none\"><hr></div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n\n  <div class=\"content-block\">\n    <p>\n      If you want to validate more files, you have the option to do so by clicking “Add more files”.\n    </p>\n    <p>Please note that your personal workspace and the files will be deleted 72 hours after uploading and processing all files.</p>\n    <button\n      class=\"btn btn-success iati-button border-radius-none\"\n      (click)=\"addMoreFiles()\"\n    >\n      Add more files\n    </button>\n  </div>\n\n  <div class=\"content-block\">\n    <p>\n      If you have added multiple files and are processing a large amount of data, this can take some time.\n      You can choose the option below for the validator to send you a notification via email once all the validation reports are ready.\n    </p>\n    <ng-container *ngIf=\"emailMode === 'draft'\">\n      <p>\n        Enter your email below. Your email will not be shared with anyone and will be removed when your personal workspace is deleted.\n      </p>\n      <div class=\"row\">\n        <form class=\"email-form\" [formGroup]=\"form\" (submit)=\"saveEmailAddress()\">\n          <input\n            type=\"email\"\n            [formControl]=\"email\"\n            class=\"urls-input\"\n            placeholder=\"your email address\"\n          />\n          <button\n            class=\"btn btn-success iati-button border-radius-none\"\n            type=\"submit\"\n            [disabled]=\"form.invalid\"\n          >\n            Add email address\n          </button>\n        </form>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"emailMode === 'saved'\">\n      <p>\n        Send a notification to this address:\n      </p>\n        <span class=\"saved-email\">{{email.value}}</span>\n        <button\n          class=\"btn btn-success iati-button border-radius-none\"\n          (click)=\"editEmail()\"\n        >\n          Edit email address\n        </button>\n    </ng-container>\n\n    <ng-container *ngIf=\"emailMode === 'edit'\">\n      <p>\n        Enter your email address to receive a notification\n      </p>\n        <form class=\"email-form\" [formGroup]=\"newForm\" (submit)=\"updateEmail()\">\n          <input\n            type=\"email\"\n            [formControl]=\"newEmail\"\n            class=\"urls-input\"\n            placeholder=\"your email address\"\n          />\n          <button\n            class=\"btn btn-success iati-button border-radius-none\"\n            type=\"submit\"\n            [disabled]=\"newForm.invalid || !newForm.touched\"\n          >\n            Save\n          </button>\n          <button\n            class=\"btn btn-success iati-button border-radius-none\"\n            (click)=\"returnViewMode()\"\n          >\n            Cancel\n          </button>\n        </form>\n        <button\n          class=\"btn btn-success iati-button border-radius-none\"\n          (click)=\"removeEmail()\"\n        >\n          Remove\n        </button>\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { forkJoin, of } from 'rxjs';\n\nimport { Mode } from '../validate-iati';\nimport { FileUploadService } from './../shared/file-upload.service';\n\n\n@Component({\n  selector: 'app-upload-urls',\n  templateUrl: './upload-urls.component.html',\n  styleUrls: ['./upload-urls.component.scss']\n})\nexport class UploadUrlsComponent implements OnInit {\n  @Output() setActiveMode = new EventEmitter<Mode>();\n  @Output() clear = new EventEmitter<void>();\n\n  @Input() mode: Mode;\n\n  urls = '';\n  incorrectUrls = '';\n  fileName = '';\n  tmpWorkspaceId = '';\n\n  activeStep: string[] = ['1'];\n  requestStatus: 'pending' | 'draft' | 'success' | 'error' = 'draft';\n\n  constructor(\n    private readonly fileUploadService: FileUploadService,\n    private readonly router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.tmpWorkspaceId = this.router.parseUrl(this.router.url).queryParams.tmpWorkspaceId;\n  }\n\n  setUrl($event): void {\n    if ($event.target.value.length) {\n      this.setActiveMode.emit(Mode.urls);\n      this.activeStep.push('2');\n    } else {\n      this.incorrectUrls = '';\n      this.clear.emit();\n      this.activeStep = ['1'];\n    }\n\n    this.urls = $event.target.value;\n  }\n\n  fetchFiles() {\n    const serializedUrls = this.urls.split('|').map(url => url.trim());\n    const correctUrls = serializedUrls.filter(this.validateUrl);\n    this.incorrectUrls = serializedUrls.filter(url => !this.validateUrl(url)).join(' | ');\n\n    if (correctUrls.length && !this.incorrectUrls.length) {\n      const urls = correctUrls.slice();\n      const handleError = error => {\n        console.log('error: ', error);\n        this.requestStatus = 'error';\n      };\n\n      this.requestStatus = 'pending';\n\n      this.fileUploadService.checkWorkspaceId(this.tmpWorkspaceId)\n        .subscribe(\n          (response: any) => {\n            const tmpWorkspaceId = response.body.id;\n\n            (this.parallelUpload(urls, tmpWorkspaceId) as any)\n              .subscribe(\n                () => {\n                  this.tmpWorkspaceId = tmpWorkspaceId;\n                  this.activeStep = ['3'];\n                  this.requestStatus = 'success';\n                },\n                handleError\n              );\n          },\n          handleError\n        );\n    }\n  }\n\n  isActiveStep(step: string): boolean {\n    return this.activeStep.includes(step);\n  }\n\n  validateFile() {\n    this.router.navigate(['validate', this.tmpWorkspaceId]);\n  }\n\n  private validateUrl(value) {\n    // eslint-disable-next-line\n    return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n  }\n\n  private parallelUpload(urls: string[], tmpWorkspaceId: string) {\n    if (!urls.length) {\n      return of('skip' as any);\n    }\n\n    return forkJoin(urls.map(url => this.fileUploadService.fetchFileByUrl(url, tmpWorkspaceId)) as any);\n  }\n}\n","<div class=\"urls-upload\" [ngClass]=\"{'disable': mode !== 'both' && mode === 'local'}\">\n  <div class=\"step\" [ngClass]=\"{'next': isActiveStep('1')}\">\n    <h5 class=\"step-title\">Step 1: Add a web address (URL) of your IATI XMLfile. You can add multiple files by seperating them with |</h5>\n    <input\n      (change)=\"setUrl($event)\"\n      class=\"urls-input\"\n      placeholder=\"enter web address\"\n      [disabled]=\"!isActiveStep('1') || mode !== 'both' && mode === 'local'\"\n    />\n    <p class=\"incorrect-urls-warning\" *ngIf=\"incorrectUrls.length\">You have one or more incorrect web addresses: \"{{incorrectUrls}}\"</p>\n  </div>\n\n  <div class=\"step\" [ngClass]=\"{'next': isActiveStep('2')}\">\n    <h5 class=\"step-title\">Step 2: Fetch the files from the web</h5>\n    <button\n      class=\"btn btn-success iati-button border-radius-none\"\n      [disabled]=\"!isActiveStep('2')\"\n      (click)=\"fetchFiles()\"\n    >\n      Fetch\n    </button>\n    <div\n      *ngIf=\"requestStatus !== 'draft'\"\n      class=\"alert alert-info message\"\n      [ngClass]=\"{'alert-danger': requestStatus === 'error'}\"\n    >\n      <ng-container [ngSwitch]=\"requestStatus\">\n        <ng-container *ngSwitchCase=\"'error'\">\n          File(s) uploading failed. Check your files and try again.\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'success'\">\n          File(s) have been uploaded successfully\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <app-spinner [backColor]=\"'white'\"></app-spinner>\n          Your files are uploading now. Large files could uploading more than few minutes.\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n\n  <div class=\"step\" [ngClass]=\"{'next': isActiveStep('3')}\">\n    <h5 class=\"step-title\">Step 3: Start validating your files</h5>\n    <button\n      class=\"btn btn-success iati-button border-radius-none\"\n      (click)=\"validateFile()\"\n      [disabled]=\"!isActiveStep('3')\"\n    >\n      Validate\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Mode } from '../validate-iati';\n\n@Component({\n  selector: 'app-validate',\n  templateUrl: './validate.component.html',\n  styleUrls: ['./validate.component.scss']\n})\nexport class ValidateComponent implements OnInit {\n  mode: Mode;\n  tmpWorkspaceId: string;\n  environmentUrl = window.__env.baseUrl;\n\n  constructor(private readonly router: Router) {\n    this.tmpWorkspaceId = this.router.parseUrl(this.router.url).queryParams.tmpWorkspaceId;\n  }\n\n  async ngOnInit() {\n  }\n\n  setActiveMode(mode: Mode) {\n    this.mode = mode;\n  }\n\n  clear() {\n    this.mode = Mode.both;\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"content-block\" *ngIf=\"tmpWorkspaceId\">\n    <a [routerLink]=\"['/validate', tmpWorkspaceId]\" >&lt;&lt; Return to your workspace</a>\n  </div>\n  <h1>Check data</h1>\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <app-upload-file\n        (setActiveMode)=\"setActiveMode($event)\"\n        (clear)=\"clear()\"\n        [mode]=\"mode\"\n      ></app-upload-file>\n    </div>\n    <div class=\"\" style=\"margin-top: 5em;\">OR</div>\n    <div class=\"col\">\n      <app-upload-urls\n        (setActiveMode)=\"setActiveMode($event)\"\n        (clear)=\"clear()\"\n        [mode]=\"mode\"\n      ></app-upload-urls>\n    </div>\n  </div>\n","import { HttpClient, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { last, retry } from 'rxjs/operators';\n\n@Injectable()\nexport class FileUploadService {\n  workspaceId = '';\n  private urlApiFileUpUpload: string = window.__env.apiDataworkBench + '/iati-testfiles/file/source';\n  private urlApiUrlsUpload: string = window.__env.apiDataworkBench + '/iati-testfiles/url/source';\n  private urlApiTestWorkspace: string = window.__env.apiDataworkBench + '/iati-testworkspaces';\n\n  constructor(\n    private readonly http: HttpClient,\n  ) { }\n\n  checkWorkspaceId(tmpWorkspaceId?: string): Observable<HttpResponse<any>> {\n    if (!tmpWorkspaceId) {\n      // create a new iati-testworkspace\n      const req = new HttpRequest('POST', this.urlApiTestWorkspace, '{}');\n\n      return this.http.request(req).pipe(\n        last(),\n        retry(3)\n      ) as any;\n    } else {\n      // check existing workspace\n      const req = new HttpRequest('GET', this.urlApiTestWorkspace + '/' + tmpWorkspaceId);\n\n      return this.http.request(req).pipe(\n        last(),\n        retry(3)\n      ) as any;\n    }\n  }\n\n  uploadFile(file: File, tmpWorkspaceId?: string): Observable<HttpResponse<any>> | null {\n    if (!file) {\n      return null;\n    }\n\n    const url = tmpWorkspaceId ? `${this.urlApiTestWorkspace}/${tmpWorkspaceId}/file/source` : this.urlApiFileUpUpload;\n    const uploadData = new FormData();\n    uploadData.append('file', file, file.name);\n\n    const req = new HttpRequest('POST', url, uploadData);\n\n    return this.http.request(req).pipe(\n      last(),\n      retry(3)\n    ) as any;\n  }\n\n  fetchFileByUrl(fileUrl: string, tmpWorkspaceId?: string) {\n    const url = tmpWorkspaceId ? `${this.urlApiTestWorkspace}/${tmpWorkspaceId}/url/source` : this.urlApiUrlsUpload;\n\n    return this.http.post<any>(\n      url,\n      JSON.stringify({ url: fileUrl }),\n      {\n        headers: {\n          'Content-Type': 'application/json' // eslint-disable-line @typescript-eslint/naming-convention\n        },\n        responseType: 'json'\n      }\n    );\n  }\n\n  setWorkspaceId(id: string) {\n    this.workspaceId = id;\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { forkJoin, of } from 'rxjs';\n\nimport { Mode } from '../validate-iati';\nimport { LogService } from './../../core/logging/log.service';\nimport { FileUploadService } from './../shared/file-upload.service';\n\n\n@Component({\n  selector: 'app-upload-file',\n  templateUrl: './upload-file.component.html',\n  styleUrls: ['./upload-file.component.scss']\n})\nexport class UploadFileComponent implements OnInit {\n  @Output() setActiveMode = new EventEmitter<Mode>();\n  @Output() clear = new EventEmitter<void>();\n\n  @Input() mode: Mode;\n\n  selectedFiles: File[] = [];\n  workspaceId = '';\n  tmpWorkspaceId = '';\n  fileUploaded = false;\n  requestStatus: 'pending' | 'draft' | 'success' | 'error' = 'draft';\n  fetchUrl = '';\n\n  activeStep = ['1'];\n\n  constructor(\n    private readonly logger: LogService,\n    private readonly router: Router,\n    private readonly fileUploadService: FileUploadService,\n  ) { }\n\n  ngOnInit() {\n    this.tmpWorkspaceId = this.router.parseUrl(this.router.url).queryParams.tmpWorkspaceId;\n  }\n\n  onFileChanged(event) {\n    this.requestStatus = 'draft';\n    this.setActiveMode.emit(Mode.local);\n    this.selectedFiles = event.target.files;\n    this.activeStep.push('2');\n  }\n\n  uploadFile(): void {\n    const files = Array.prototype.slice.call(this.selectedFiles);\n    const handleError = error => {\n      // this.logger.debug('Error message component: ', error);\n      this.requestStatus = 'error';\n    };\n\n    if (files.length) {\n      this.requestStatus = 'pending';\n\n      this.fileUploadService.checkWorkspaceId(this.tmpWorkspaceId)\n        .subscribe(\n          (response: HttpResponse<any>) => {\n            const tmpWorkspaceId = response.body.id;\n\n            this.parallelUpload(files, tmpWorkspaceId)\n              .subscribe(\n                () => {\n                  this.tmpWorkspaceId = tmpWorkspaceId;\n                  this.activeStep = ['3'];\n                  this.requestStatus = 'success';\n                },\n                handleError\n              );\n          },\n          handleError\n        );\n    }\n  }\n\n  validateFile() {\n    this.router.navigate(['validate', this.tmpWorkspaceId]);\n  }\n\n  clearFiles() {\n    this.clear.emit();\n    this.selectedFiles = [];\n    this.activeStep = ['1'];\n  }\n\n  isActiveStep(step: string): boolean {\n    return this.activeStep.includes(step);\n  }\n\n  private parallelUpload(files: File[], tmpWorkspaceId: string) {\n    if (!files.length) {\n      return of('skip' as any);\n    }\n\n    return forkJoin(files.map(file => this.fileUploadService.uploadFile(file, tmpWorkspaceId)) as any);\n  }\n}\n","<h4>Upload your IATI file and receive validation feedback.</h4>\n<div [ngClass]=\"{'disable': mode !== 'both' && mode === 'urls'}\">\n  <div class=\"step\" [ngClass]=\"{'next': isActiveStep('1')}\">\n    <h5 class=\"step-title\">Step 1: Select your IATI files. You can select multiple files at the same time.</h5>\n    <div class=\"row\">\n      <section *ngIf=\"selectedFiles.length\" class=\"col selected-files\" >\n        <p *ngFor=\"let file of selectedFiles\" class=\"file-name-p\">\n          {{file.name}}\n        </p>\n      </section>\n      <ng-container *ngIf=\"!isActiveStep('3')\">\n        <section class=\"col\">\n          <ng-container *ngIf=\"!selectedFiles.length; else clearState\">\n            <label class=\"btn btn-success iati-button border-radius-none iati-file-label\" for=\"file-upload\">\n              Browse\n            </label>\n            <input\n              id=\"file-upload\"\n              type=\"file\"\n              (change)=\"onFileChanged($event)\"\n              accept=\".xml\"\n              [disabled]=\"!isActiveStep('1') || mode !== 'both' && mode === 'urls'\"\n              multiple\n            >\n          </ng-container>\n          <ng-template #clearState>\n            <button\n              class=\"btn btn-success iati-button border-radius-none\"\n              (click)=\"clearFiles()\"\n              [disabled]=\"!isActiveStep('1')\"\n            >\n              Clear\n            </button>\n          </ng-template>\n        </section>\n      </ng-container>\n    </div>\n  </div>\n\n  <div class=\"step\" [ngClass]=\"{'next': isActiveStep('2')}\">\n    <h5 class=\"step-title\">Step 2: Upload your IATI files</h5>\n    <button\n      *ngIf=\"!isActiveStep('3')\"\n      class=\"btn btn-success iati-button border-radius-none\"\n      (click)=\"uploadFile()\"\n      [disabled]=\"!isActiveStep('2')\"\n    >\n      Upload\n    </button>\n\n    <div\n      *ngIf=\"requestStatus !== 'draft'\"\n      class=\"alert alert-info message\"\n      [ngClass]=\"{'alert-danger': requestStatus === 'error'}\"\n    >\n      <ng-container [ngSwitch]=\"requestStatus\">\n        <ng-container *ngSwitchCase=\"'error'\">\n          File(s) uploading failed. Check your files and try again.\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'success'\">\n          File(s) have been uploaded successfully\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <app-spinner [backColor]=\"'white'\"></app-spinner>\n          Your files are uploading now. Large files could uploading more than few minutes.\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n\n  <div\n    class=\"step\"\n    [ngClass]=\"{'next': isActiveStep('3')}\"\n  >\n    <h5 class=\"step-title\">Step 3: Start validating your files</h5>\n    <button\n      class=\"btn btn-success iati-button border-radius-none\"\n      (click)=\"validateFile()\"\n      [disabled]=\"!isActiveStep('3')\"\n    >\n      Validate\n    </button>\n  </div>\n\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { LogService } from '../../core/logging/log.service';\nimport { IatiTestDataset } from './iati-testdataset';\n\n\n@Injectable()\nexport class ValidatedIatiService {\n  private urlApiIatiDataset: string = window.__env.apiDataworkBench + '/iati-testdatasets';\n\n  constructor(\n    private logger: LogService,\n    private http: HttpClient\n  ) { }\n\n  getIatiDataset(workspaceId: string): Observable<IatiTestDataset[]> {\n    const url: string = this.urlApiIatiDataset + '/?filter[where][tmpworkspaceId]=' + workspaceId;\n\n    this.logger.debug(url);\n\n    return this.http.get<IatiTestDataset>(url)\n      .pipe(\n        tap(_ => this.logger.debug(`fetched iati dataset`)),\n        catchError(this.handleError('getIatiDataset', undefined))\n      ) as any;\n  }\n\n  getIatiDatasetById(inUploadId: string): Observable<IatiTestDataset> {\n    const url: string = this.urlApiIatiDataset + '/' + inUploadId;\n    return this.http.get<any>(url)\n      .pipe(\n        tap(_ => this.logger.debug(`fetched iati dataset`)),\n        catchError(this.handleError('getIatiDataset', undefined))\n      ) as any;\n  }\n\n  // TODO: replace any\n  getTmpWorkspace(workspaceId: string): any {\n    const url: string = this.urlApiTmpWorkspace(workspaceId);\n\n    return this.http.get(url).pipe(\n      catchError(this.handleError('getTmpWorkspace', undefined))\n    );\n\n  }\n\n  sendEmail(id: string, email: string) {\n    return this.http.patch(this.urlApiTmpWorkspace(id), {\n      email\n    }).pipe(\n      catchError(this.handleError('sendEmail', undefined))\n    );\n  }\n\n\n  private urlApiTmpWorkspace = (id: string) => `${window.__env.apiDataworkBench}/iati-testworkspaces/${id}`;\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging\n      this.logger.error(error);\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","export enum Mode { // eslint-disable-line no-shadow\n  local = 'local',\n  urls = 'urls',\n  both = 'both'\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SharedModule } from './../shared/shared.module';\nimport { FileUploadService } from './shared/file-upload.service';\nimport { MessagesService } from './shared/messages.service';\nimport { ValidatedIatiService } from './shared/validated-iati.service';\nimport { UploadFileComponent } from './upload-file/upload-file.component';\nimport { UploadUrlsComponent } from './upload-urls/upload-urls.component';\nimport { ValidateResultComponent } from './validate-result/validate-result.component';\nimport { ValidateComponent } from './validate/validate.component';\n\n\nconst routes: Routes = [\n  { path: '', component: ValidateComponent },\n  { path: ':id', component: ValidateResultComponent },\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    HttpClientModule,\n    SharedModule\n  ],\n  declarations: [\n    ValidateComponent,\n    UploadFileComponent,\n    ValidateResultComponent,\n    UploadUrlsComponent,\n  ],\n  providers: [\n    FileUploadService,\n    MessagesService,\n    ValidatedIatiService\n  ]\n})\nexport class ValidateIatiModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Message } from './message';\n\n\n@Injectable()\nexport class MessagesService {\n  messages = new Subject<Message[]>();\n  messagesLocal: Message[] = [];\n\n  constructor() { }\n\n  add(message: Message) {\n    this.messagesLocal.push(message);\n    this.messages.next(this.messagesLocal.slice());\n  }\n\n  clear() {\n    this.messagesLocal = [];\n    this.messages.next(this.messagesLocal.slice());\n  }\n\n}\n"],"sourceRoot":"webpack:///"}