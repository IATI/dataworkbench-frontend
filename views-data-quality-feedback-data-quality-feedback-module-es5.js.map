{"version":3,"sources":["webpack:///src/app/views/data-quality-feedback/feedback-item/feedback-item.component.html","webpack:///src/app/views/data-quality-feedback/feedback-item/feedback-item.component.ts","webpack:///src/app/views/data-quality-feedback/filter-severity-item/filter-severity-item.component.ts","webpack:///src/app/views/data-quality-feedback/filter-severity-item/filter-severity-item.component.html","webpack:///src/app/views/data-quality-feedback/iati-info/iati-info.component.html","webpack:///src/app/views/data-quality-feedback/iati-info/iati-info.component.ts","webpack:///src/app/views/data-quality-feedback/shared/checkbox/checkbox.component.ts","webpack:///src/app/views/data-quality-feedback/shared/checkbox/checkbox.component.html","webpack:///src/app/views/data-quality-feedback/filter-type-severity/filter-type-severity.component.ts","webpack:///src/app/views/data-quality-feedback/filter-type-severity/filter-type-severity.component.html","webpack:///src/app/views/data-quality-feedback/main-report-info/main-report-info.component.ts","webpack:///src/app/views/data-quality-feedback/main-report-info/main-report-info.component.html","webpack:///src/app/views/data-quality-feedback/main/main.component.html","webpack:///src/app/views/data-quality-feedback/main/main.component.ts","webpack:///src/app/views/data-quality-feedback/single-feedback/single-feedback.component.html","webpack:///src/app/views/data-quality-feedback/single-feedback/single-feedback.component.ts","webpack:///src/app/views/data-quality-feedback/feedback-group/feedback-group.component.html","webpack:///src/app/views/data-quality-feedback/feedback-group/feedback-group.component.ts","webpack:///src/app/views/data-quality-feedback/filter-type/filter-type.component.ts","webpack:///src/app/views/data-quality-feedback/filter-type/filter-type.component.html","webpack:///src/app/views/data-quality-feedback/filter-source/filter-source.component.ts","webpack:///src/app/views/data-quality-feedback/filter-source/filter-source.component.html","webpack:///src/app/views/data-quality-feedback/filter-category/filter-category.component.ts","webpack:///src/app/views/data-quality-feedback/filter-category/filter-category.component.html","webpack:///src/app/views/data-quality-feedback/data-quality-feedback.module.ts","webpack:///src/app/views/data-quality-feedback/filter-severity/filter-severity.component.ts","webpack:///src/app/views/data-quality-feedback/filter-severity/filter-severity.component.html","webpack:///src/app/views/data-quality-feedback/shared/data-quality-feedback.service.ts","webpack:///src/app/views/data-quality-feedback/filter-type-message/filter-type-message.component.ts","webpack:///src/app/views/data-quality-feedback/filter-type-message/filter-type-message.component.html","webpack:///src/app/views/data-quality-feedback/multi-feedback/multi-feedback.component.ts","webpack:///src/app/views/data-quality-feedback/multi-feedback/multi-feedback.component.html"],"names":["FeedbackItemComponent","sortData","feedback","messages","sort","compareSeverity","a","b","getSeverity","message","rulesets","some","x","severity","FilterSeverityItemComponent","selectedChanged","isCollapsed","types","every","show","emit","forEach","selectionChanged","length","count","collapse","IatiInfoComponent","CheckboxComponent","checked","checkedChange","name","checkedChanged","FilterTypeSeverityComponent","type","MainReportInfoComponent","dataQualityFeedbackService","logger","id","reportInfo","organisationName","fileName","organisationSlug","loadData","getReportInfo","subscribe","data","MainComponent","validatedIatiService","organisationService","activateRoute","loader","location","dataset","isLoading","isTestfiles","tmpWorkspaceId","activityData","activities","companyFeedbackData","companyFeedback","severities","sources","categories","filetype","filterSeverity","rs","sev","slug","filterSource","ruleset","s","src","filterCategory","c","category","filterTypeMessage","t","m","loaderSubscription","loaderState","state","getSeverities","getSources","paramsSubscription","params","qParamsSubscription","queryParams","qParams","getIatiDatasetById","iatiTestDataSet","theFileId","fileid","split","shift","filename","tmpworkspaceId","unsubscribe","getTestFilesDataQualityFeedbackById","setData","error","hide","iatiDataSet","getDataQualityFeedback","md5","undefined","organisations","loadCategories","loadTypeMessages","filterActivities","uniqueCat","act","fb","u","push","label","element","order","inCompanyFeedback","mes","newType","text","getfeedbackSeverity","find","filtered","JSON","parse","stringify","filterCompanyFeedback","filter","setSeverityCount","setSourceCount","setCategoryCount","setTypeMessageCount","filteredFeedback","getIssueCount","r","context","getSourceCount","cat","getCategoryCount","getTypeMessageCount","typeId","back","SingleFeedbackComponent","feedbackData","title","item","items","FeedbackGroupComponent","publisher","activity","dqfs","encodeURIComponent","override","overrideGuidanceLink","identifier","newLineFound","indexOf","substring","code","overrides","$event","stopPropagation","FilterTypeComponent","y","FilterSourceComponent","console","log","FilterCategoryComponent","routes","path","component","redirectTo","pathMatch","DataQualityFeedbackModule","forChild","FilterSeverityComponent","DataQualityFeedbackService","http","urlApiIatiFile","window","__env","apiDataworkBench","urlApiIatiTestFile","urlApiIatiDataSet","urlApiOrganisation","url","get","pipe","handleError","inId","urlPublisher","datas","description","operation","result","FilterTypeMessageComponent","typeMessage","MultiFeedbackComponent","groups","toggleCollapse"],"mappings":"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","file":"views-data-quality-feedback-data-quality-feedback-module-es5.js","sourcesContent":["<div class=\"feedback\">\n  <div class=\"category-label\">{{feedback.label}}</div>\n  <ul class=\"feedback-list\">\n    <li *ngFor=\"let mes of feedback.messages\" class=\"message {{getfeedbackColor(mes)}}\"   >\n      <span class=\"message-text\" >{{mes.text}}</span>\n      <span class=\"message-id d-inline float-right\">\n        {{mes.id}}\n        <span *ngFor=\"let ruleset of mes.rulesets\">\n          <a [hidden]=\"ruleset.src==null\" href=\"{{ruleset.src}}\" target=\"_blank\" title=\"Open guidance in a new window\">(see guidance)</a>\n        </span>\n      </span>\n      <ul [hidden]=\"mes.context.length===1 && mes.context[0].text===''\">\n        <li *ngFor=\"let con of mes.context\" class=\"context\">{{con.text}}</li>\n      </ul>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Feedback, Message } from '../shared/feedback';\n\n@Component({\n  selector: 'app-feedback-item',\n  templateUrl: './feedback-item.component.html',\n  styleUrls: ['./feedback-item.component.scss']\n})\nexport class FeedbackItemComponent implements OnInit {\n  @Input() feedback: Feedback;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.sortData();\n  }\n\n  sortData = () =>  {\n    // Sort the messages based on severity\n    this.feedback.messages.sort(this.compareSeverity);\n  };\n\n  compareSeverity = (a: Message, b: Message) => this.getSeverity(a) - this.getSeverity(b);\n\n  getSeverity = (message: Message) => {\n    if (message.rulesets.some(x => x.severity === 'critical')) {\n      return 1;\n    } else if (message.rulesets.some(x => x.severity === 'danger')) {\n      return 2;\n    } else if (message.rulesets.some(x => x.severity === 'warning')) {\n      return 2;\n    } else if (message.rulesets.some(x => x.severity === 'info')) {\n      return 3;\n    } else if (message.rulesets.some(x => x.severity === 'success')) {\n      return 4;\n    } else {\n      return 9;\n    }\n  };\n\n  getfeedbackColor(message: Message): string {\n    if (message.rulesets.some(x => x.severity === 'danger')) {\n      return 'error';\n    } else if (message.rulesets.some(x => x.severity === 'critical')) {\n      return 'critical';\n    } else if (message.rulesets.some(x => x.severity === 'warning')) {\n      return 'warning';\n    } else if (message.rulesets.some(x => x.severity === 'info')) {\n      return 'improvement';\n    } else if (message.rulesets.some(x => x.severity === 'success')) {\n      return 'notification';\n    } else {\n      return 'other';\n    }\n\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Severity } from '../shared/severity';\n\n@Component({\n  selector: 'app-filter-severity-item',\n  templateUrl: './filter-severity-item.component.html',\n  styleUrls: ['./filter-severity-item.component.scss']\n})\nexport class FilterSeverityItemComponent implements OnInit {\n  @Input() severity: Severity;\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  isCollapsed = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    // this.severity.types.sort( (a, b) =>  b.count - a.count );\n  }\n\n  collapse() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n  allSelected(): boolean {\n    return this.severity.types.every(x => x.show === true);\n  }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.severity.types.forEach(x => x.show = true);\n    this.selectionChanged();\n  }\n\n  unSelectAll(): void {\n    this.severity.types.forEach(x => x.show = false);\n    this.selectionChanged();\n  }\n\n  totalTypes(): number {\n    return this.severity.types.length;\n  }\n\n  totalTypesSelected(): number {\n    let count = 0;\n\n    this.severity.types.forEach(x => {\n      if (x.show === true) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n\n}\n","<li class=\"list-group-item\" [className]=\"'list-group-item ' + severity.id\" [ngClass]=\"{'hidden': severity.types.length===0}\">\n  <div class=\"severity-heading row\">\n    <div class=\"col title-col\" (click)=\"collapse()\">\n      <span ngClass=\"{'unselected':!severity.show}\"> {{ severity.name }}: {{ severity.types.length }} types</span>\n      <span *ngIf=\"!allSelected()\" class=\"badge badge-light text-danger float-right messages-selected-count\"> ({{ totalTypesSelected() }} of {{ totalTypes() }} messages selected.) </span>\n      <!-- <span class=\"select\">\n        <app-checkbox [(checked)]=\"severity.show\" [name]=\"'filterSev' + severity.name\" (checkedChange)=\"selectionChanged()\"></app-checkbox>\n      </span> -->\n    </div>\n\n    <div class=\"col-auto collapse-col\">\n        <app-checkbox [(checked)]=\"severity.show\" [name]=\"'filterSrc' + severity.name\" (checkedChange)=\"selectionChanged()\"></app-checkbox>\n      <button type=\"button\" class=\"btn btn-outline-light collapser\" (click)=\"collapse()\">\n        <span *ngIf=\"!isCollapsed\"><img src=\"assets/icons/arrow_down_24_white.svg\" alt=\"icon arrow down\"></span>\n        <span *ngIf=\"isCollapsed\"><img src=\"assets/icons/arrow_up_24_white.svg\" alt=\"icon arrow up\"></span>\n      </button>\n    </div>\n  </div>\n</li>\n\n\n<div class=\"type-messages\" [ngbCollapse]=\"isCollapsed\">\n  <li *ngIf=\"severity.types.length!==0\" class=\"list-group-item filter-row\">\n    {{ severity.description }}\n    <span *ngIf=\"allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"unSelectAll()\">Unselect all</button></span>\n    <span *ngIf=\"!allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"selectAll()\">Select all</button></span>\n  </li>\n  <app-filter-type-message *ngFor=\"let mes of severity.types\" [typeMessage]=\"mes\" (selectedChanged)=\"selectionChanged()\"></app-filter-type-message>\n</div>\n","<h3>{{data.filename}}</h3>\n<p>\n <span *ngIf=\"data.schemaVersion\" title=\"IATI-Rules version: {{data.schemaVersion}}\"></span>\n <span *ngIf=\"data.iatiVersion\">IATI version: {{data.iatiVersion}}</span>\n <span *ngIf=\"data.filetype\"> | Type: {{data.filetype}}</span>\n <span *ngIf=\"data.feedbackUpdated\"> | updated: {{data.feedbackUpdated}}</span>\n</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Dqfs } from '../shared/feedback';\n\n@Component({\n  selector: 'app-iati-info',\n  templateUrl: './iati-info.component.html',\n  styleUrls: ['./iati-info.component.scss']\n})\nexport class IatiInfoComponent implements OnInit {\n@Input() data: Dqfs;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent implements OnInit {\n  @Input() checked = false;\n  @Output() checkedChange: EventEmitter<boolean> = new EventEmitter();\n  // unique name is necessary for the input control\n  @Input() name = '';\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  checkedChanged() {\n    this.checkedChange.emit(this.checked);\n  }\n\n}\n","<div class=\"custom-control custom-checkbox d-inline\">\n  <input [(ngModel)]=\"checked\" (change)=\"checkedChanged()\" type=\"checkbox\" class=\"custom-control-input\" [attr.id]=\"name\" [attr.name]=\"name\">\n  <label class=\"custom-control-label\" [attr.for]=\"name\"><ng-content></ng-content></label>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { TypeMessage } from './../shared/type-message';\nimport { TypeSeverity } from './../shared/type-severity';\n\n@Component({\n  selector: 'app-filter-type-severity',\n  templateUrl: './filter-type-severity.component.html',\n  styleUrls: ['./filter-type-severity.component.scss']\n})\nexport class FilterTypeSeverityComponent implements OnInit {\n  @Input() type: TypeSeverity;\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  isCollapsed = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.type.types.sort( (a, b) =>  b.count - a.count );\n  }\n\n  collapse() {\n    this.isCollapsed = ! this.isCollapsed;\n  }\n\n  allSelected(): boolean {\n    return this.type.types.every(x => x.show === true);\n }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.type.types.forEach(x => x.show = true);\n    this.selectionChanged();\n  }\n}\n","<li class=\"list-group-item\" [className]=\"'list-group-item ' + type.severity\" [ngClass]=\"{'hidden': type.types.length===0}\">\n  <div class=\"type-heading row\">\n    <div class=\"col title-col\" (click)=\"collapse()\">\n      <span class=\"severity-count\">{{type.count}}</span>\n      <span [ngClass]=\"{'unselected': !type.show}\">{{ type.severity }}</span>\n    </div>\n    <div class=\"col-auto collapse-col\">\n      <button type=\"button\" class=\"btn btn-outline-light collapser\" (click)=\"collapse()\">\n        <span *ngIf=\"!isCollapsed\">-</span>\n        <span *ngIf=\"isCollapsed\">+</span>\n      </button>\n    </div>\n  </div>\n</li>\n\n<div class=\"type-messages\" [ngbCollapse]=\"isCollapsed\">\n  <app-filter-type-message *ngFor=\"let mes of type.types\" [typeMessage]=\"mes\" (selectedChanged)=\"selectionChanged()\"></app-filter-type-message>\n</div>\n","import { ReportInfo } from './../shared/report-info';\nimport { Component, OnInit, Input } from '@angular/core';\n\nimport { LogService } from './../../../core/logging/log.service';\nimport { DataQualityFeedbackService } from './../shared/data-quality-feedback.service';\n\n@Component({\n  selector: 'app-main-report-info',\n  templateUrl: './main-report-info.component.html',\n  styleUrls: ['./main-report-info.component.scss']\n})\nexport class MainReportInfoComponent implements OnInit {\n  @Input() id = '';\n  reportInfo: ReportInfo  = {organisationName: '', fileName: '', organisationSlug: '' };\n\n  constructor(private dataQualityFeedbackService: DataQualityFeedbackService,\n              private logger: LogService) { }\n\n  ngOnInit() {\n    this.loadData(this.id);\n  }\n\n  loadData(id: string) {\n    this.dataQualityFeedbackService.getReportInfo(id).subscribe(\n      data => {\n        this.reportInfo = data;\n      }\n    );\n  }\n\n}\n","<h3><a [routerLink]=\"['/organisation', reportInfo.organisationSlug]\" >{{reportInfo.organisationName}}</a>  - {{reportInfo.fileName}} </h3>\n","<div class=\"container-fluid\">\n  <div class=\"content-block\" *ngIf=\"tmpWorkspaceId\">\n    <a [routerLink]=\"['/validate', tmpWorkspaceId]\" >&lt;&lt; Return to your workspace</a>\n  </div>\n  <div class=\"row alert alert-light\">\n    <div class=\"col\">\n      <h1>File validation report</h1>\n      <app-main-report-info *ngIf=\"dataset\" [id]=\"dataset.id\"></app-main-report-info>\n      <app-iati-info [data]=\"data\"></app-iati-info>\n    </div>\n  </div>\n\n  <div *ngIf=\"isLoading\" class=\"alert alert-info\" role=\"alert\">\n    <app-spinner [backColor]=\"'white'\"></app-spinner>\n    <span class=\"loading-text\">Loading report...</span>\n  </div>\n  <div *ngIf=\"activityData===undefined && companyFeedbackData===undefined && !isLoading \" class=\"alert alert-warning\"\n    role=\"alert\">\n    <h2>No data found.</h2>\n    <p>It looks like the url is not valid.</p>\n    <ul>\n      <li (click)=\"goBack()\">\n        <button type=\"button\" class=\"btn btn-link\">Go back to the previous page.</button>\n      </li>\n      <li>\n        <button routerLink=\"\\\" type=\"button\" class=\"btn btn-link\">Go to the home page.</button>\n      </li>\n    </ul>\n  </div>\n\n  <div *ngIf=\"(activityData!==undefined || companyFeedbackData!==undefined) && !isLoading\" class=\"row\">\n    <div class=\"col-md-4 filters\">\n      <h4>Filters</h4>\n      <app-filter-severity [severities]=\"severities\" (selectedChanged)=\"severitySelectedChanged()\">\n      </app-filter-severity>\n      <!-- <app-filter-source [sources]=\"sources\" (selectedChanged)=\"sourceSelectedChanged()\"></app-filter-source> -->\n      <app-filter-category [categories]=\"categories\" (selectedChanged)=\"categorySelectedChanged()\">\n      </app-filter-category>\n    </div>\n    <div class=\"col-md-8 results\">\n      <h4>Feedback</h4>\n      <div *ngIf=\"companyFeedback\">\n        <!-- Determine which components to display -->\n        <div *ngIf=\"filetype==='iati-activities'\">\n          <app-single-feedback [feedbackData]=\"companyFeedback\" [title]=\"'Activity file feedback'\" [item]=\"'activity'\" [items]=\"'activities'\"></app-single-feedback>\n          <app-multi-feedback [activityData]=\"activities\" [title]=\"'Feedback per activity'\" [item]=\"'activity'\" [items]=\"'activities'\" [dqfs]=\"data\"></app-multi-feedback>\n        </div>\n\n      </div>\n      <div *ngIf=\"filetype==='iati-organisations'\">\n        <app-single-feedback [feedbackData]=\"companyFeedback\" [title]=\"'Organisation file feedback'\" [item]=\"'organisation'\" [items]=\"'organisations'\" ></app-single-feedback>\n        <app-multi-feedback [activityData]=\"activities\" [title]=\"'Organisation feedback'\" [item]=\"'organisation'\" [items]=\"'organisations'\" [dqfs]=\"data\"></app-multi-feedback>\n      </div>\n      <div *ngIf=\"filetype==='not-iati'\">\n        <app-single-feedback [feedbackData]=\"companyFeedbackData\" [title]=\"'Not an IATI file'\"></app-single-feedback>\n      </div>\n\n\n    </div>\n  </div>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { LoaderService } from '../../../core/loader/loader.service';\nimport { OrganisationService } from '../../../organisation/shared/organisation.service';\nimport { ValidatedIatiService } from '../../../validate-iati/shared/validated-iati.service';\nimport { Activity, Dqfs, Feedback, Message, Ruleset } from '../shared/feedback';\nimport { Severity } from '../shared/severity';\nimport { LoaderState } from './../../../core/loader/loader';\nimport { LogService } from './../../../core/logging/log.service';\nimport { Category } from './../shared/category';\nimport { DataQualityFeedbackService } from './../shared/data-quality-feedback.service';\nimport { Source } from './../shared/source';\n\n\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit, OnDestroy {\n  dataset = null;\n  isLoading = false;\n  data: Dqfs = {} as Dqfs;\n  fileName = '';\n  isTestfiles = false;\n  tmpWorkspaceId = '';\n  activityData: Activity[] = [];\n  activities: Activity[] = [];\n  companyFeedbackData: Feedback[] = [];\n  companyFeedback: Feedback[] = [];\n  severities: Severity[] = [];\n  sources: Source[] = [];\n  categories: Category[] = [];\n  public dqfs: Dqfs | undefined;\n  public filetype = '';\n  private loaderSubscription: Subscription | undefined;\n  private paramsSubscription: Subscription | undefined;\n  private qParamsSubscription: Subscription | undefined;\n\n  constructor(private dataQualityFeedbackService: DataQualityFeedbackService,\n    private validatedIatiService: ValidatedIatiService,\n    private organisationService: OrganisationService,\n    private logger: LogService,\n    private activateRoute: ActivatedRoute,\n    private loader: LoaderService,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n    this.loaderSubscription = this.loader.loaderState\n      .subscribe((state: LoaderState) => {\n        this.isLoading = state.show;\n      });\n    this.severities = this.dataQualityFeedbackService.getSeverities();\n    this.sources = this.dataQualityFeedbackService.getSources();\n\n    this.paramsSubscription = this.activateRoute\n      .params\n      .subscribe(params => {\n        this.qParamsSubscription = this.activateRoute.queryParams.subscribe(\n          qParams => {\n            this.isTestfiles = qParams.isTestfiles;\n\n            if (qParams.isTestfiles) {\n              this.validatedIatiService.getIatiDatasetById(params['id']).subscribe(iatiTestDataSet => {\n\n                const theFileId = iatiTestDataSet.fileid.split('.').shift();\n                this.fileName = iatiTestDataSet.filename;\n                this.tmpWorkspaceId = iatiTestDataSet.tmpworkspaceId;\n                this.loadData(theFileId as string, qParams.isTestfiles);\n              });\n            } else {\n              this.loadData(params['id'], qParams.isTestfiles);\n            }\n          }\n        );\n      });\n  }\n\n  ngOnDestroy() {\n    this.loaderSubscription?.unsubscribe();\n    if (this.paramsSubscription) {\n      this.paramsSubscription.unsubscribe();\n\n    }\n    if (this.qParamsSubscription) {\n      this.qParamsSubscription.unsubscribe();\n\n    }\n  }\n\n  loadData(id: string, isTestfiles: boolean) {\n    this.loader.show();\n\n    if (isTestfiles) {\n      this.dataQualityFeedbackService.getTestFilesDataQualityFeedbackById(id).subscribe(data => {\n            this.dataset = data as any;\n            if (this.dataset) {\n              (this.dataset as any)['filename'] = this.fileName;\n            }\n            this.setData(data);\n          },\n          error => {\n            this.logger.error('Error loadActivityData', error);\n            this.loader.hide();\n    });\n    } else {\n      this.organisationService.getIatiDatasetById(id).subscribe(iatiDataSet => {\n        if (iatiDataSet && iatiDataSet.length) {\n          this.dataset = iatiDataSet[0];\n          this.dataQualityFeedbackService.getDataQualityFeedback(iatiDataSet[0].md5).subscribe(\n            data => {\n              this.setData(data);\n            },\n            error => {\n              this.logger.error('Error loadActivityData', error);\n              this.loader.hide();\n            }\n          );\n        } else {\n          // FIXME: check if there's a better handle for a \"no dataset\" situation\n          this.activityData = undefined;\n          this.companyFeedbackData = undefined;\n          this.loader.hide();\n\n        }\n      });\n    }\n  }\n\n  setData(data: any) {\n    this.data = data;\n    this.fileName = this.dataset.filename;\n    if (data.feedback) {\n      this.companyFeedbackData = data.feedback;\n    }\n\n    this.filetype = data.filetype;\n    if (data.filetype === 'iati-activities') {\n      if (data.activities) {\n        this.activityData = data.activities;\n      }\n    }\n\n    if (data.filetype === 'iati-organisations') {\n      if (data.organisations) {\n        this.activityData = data.organisations;\n      }\n    }\n\n    if (this.activityData === undefined && this.companyFeedbackData === undefined) {\n      this.loader.hide();\n      return;\n    }\n    this.loadCategories();\n    this.loadTypeMessages(this.activityData, this.companyFeedbackData);\n    this.filterActivities();\n\n    this.loader.hide();\n  }\n\n  loadCategories() {\n\n    const uniqueCat: { id: string; name: string }[] = [];\n\n    this.activityData.forEach(act => {\n      act.feedback.forEach(fb => {\n        if (uniqueCat.some(u => u.id === fb.category)) {\n          // nothing\n        } else {\n          uniqueCat.push({ id: fb.category, name: fb.label });\n        }\n      });\n    });\n\n    this.companyFeedbackData.forEach(element => {\n      if (uniqueCat.some(u => u.id === element.category)) {\n        // nothing\n      } else {\n        uniqueCat.push({ id: element.category, name: element.label });\n      }\n    });\n\n\n\n    uniqueCat.forEach(u => {\n      this.categories.push({ id: u.id, name: u.name, count: null, order: 0, show: true });\n    });\n  }\n\n  loadTypeMessages(activities: Activity[], inCompanyFeedback: Feedback[]) {\n    const types: { sev: string; id: string; text: string }[] = [];\n    // Get unique messages, with the highest level of severity\n    activities.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages.forEach(mes => {\n          if (!types.some(t => t.id === mes.id)) {\n            const newType: { sev: string; id: string; text: string } = { sev: '', id: '', text: '' };\n            newType.sev = this.getfeedbackSeverity(mes);\n            newType.id = mes.id;\n            newType.text = mes.text;\n            types.push(newType);\n          }\n        });\n      });\n    });\n\n    inCompanyFeedback.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (!types.some(t => t.id === mes.id)) {\n          const newType: { sev: string; id: string; text: string } = { sev: '', id: '', text: '' };\n          newType.sev = this.getfeedbackSeverity(mes);\n          newType.id = mes.id;\n          newType.text = mes.text;\n          types.push(newType);\n        }\n      });\n    });\n\n    // push the messages in the severity it belongs to\n    types.forEach(t => {\n      const sev = this.severities.find(s => s.id === t.sev);\n      if (sev !== undefined) {\n        sev.types.push({ id: t.id, text: t.text, show: true });\n      }\n\n    });\n\n  }\n\n  filterActivities() {\n    this.loader.show();\n    let filtered = JSON.parse(JSON.stringify(this.activityData));\n\n    this.filterCompanyFeedback();\n\n    // Filter feedback category\n    filtered.forEach(act => {\n      act.feedback = act.feedback.filter(this.filterCategory);\n    });\n\n    // Filter messages that are not selected in source\n    filtered.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages.forEach(mes => {\n          mes.rulesets = mes.rulesets.filter(this.filterSource);\n        });\n      });\n    });\n\n    // Filter type messages selected\n    filtered.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages = fb.messages.filter(this.filterTypeMessage);\n      });\n    });\n\n    // Filter messages with severity selected\n    filtered.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages = fb.messages.filter(this.filterSeverity);\n      });\n    });\n\n    // Filter feedback whitout messages\n    filtered.forEach(act => {\n      act.feedback = act.feedback.filter(fb => fb.messages.length > 0);\n    });\n\n    // Filter activities without feedback\n    filtered = filtered.filter(act => act.feedback.length > 0);\n\n    this.activities = filtered;\n    // set count on filter items\n    this.setSeverityCount();\n    this.setSourceCount();\n    this.setCategoryCount();\n    // this.loadTypeMessages(this.activities);\n    this.setTypeMessageCount();\n    this.loader.hide();\n  }\n\n  filterCompanyFeedback() {\n    let filteredFeedback = JSON.parse(JSON.stringify(this.companyFeedbackData));\n\n    // Filter feedback category\n    filteredFeedback = filteredFeedback.filter(this.filterCategory);\n\n    // Filter messages that are not selected in source\n    filteredFeedback.forEach(fb => {\n      fb.messages.forEach(mes => {\n        mes.rulesets = mes.rulesets.filter(this.filterSource);\n      });\n    });\n\n    // Filter type messages selected\n    filteredFeedback.forEach(fb => {\n      fb.messages = fb.messages.filter(this.filterTypeMessage);\n    });\n\n    // Filter messages with severity selected\n    filteredFeedback.forEach(fb => {\n      fb.messages = fb.messages.filter(this.filterSeverity);\n    });\n\n    // Filter feedback without messages\n    filteredFeedback = filteredFeedback.filter(fb => fb.messages.length > 0);\n\n    // Filter activities without feedback\n    this.companyFeedback = filteredFeedback;\n  }\n\n  filterSeverity = (message: Message) =>\n    message.rulesets.some(rs => this.severities.some(sev => sev.show === true && sev.slug === rs.severity));\n\n  filterSource = (ruleset: Ruleset) => this.sources.some(s => s.show === true && s.slug === ruleset.src);\n\n  filterCategory = (feedback: Feedback) => this.categories.some(c => c.show === true && c.id === feedback.category);\n\n  filterTypeMessage = (message: Message) =>\n    // return this.typeMessages.some(t => t.types.some(m => m.show === true && m.id === message.id ) );\n    this.severities.some(t => t.types.some(m => m.show === true && m.id === message.id))\n  ;\n\n  // Set the count of messages to the severity\n  setSeverityCount() {\n    this.severities.forEach(sev => {\n      sev.count = sev.show ? this.getIssueCount(sev.slug) : null;\n    });\n  }\n\n  getIssueCount(severity): number {\n    let count = 0;\n    this.activities.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages.forEach(mes => {\n          if (mes.rulesets.some(r => r.severity === severity)) {\n            count += mes.context.length;\n          }\n        });\n      });\n    });\n\n    this.companyFeedbackData.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (mes.rulesets.some(r => r.severity === severity)) {\n          count += mes.context.length;\n        }\n      });\n    });\n    return count;\n  }\n\n  // Set the count of messages to the sources\n  setSourceCount() {\n    this.sources.forEach(src => {\n      src.count = src.show ? this.getSourceCount(src.slug) : null;\n    });\n  }\n\n  getSourceCount(type): number {\n    let count = 0;\n    this.activities.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages.forEach(mes => {\n          if (mes.rulesets.some(r => r.src === type)) {\n            count += mes.context.length;\n          }\n        });\n      });\n    });\n    this.companyFeedbackData.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (mes.rulesets.some(r => r.src === type)) {\n          count += mes.context.length;\n        }\n      });\n    });\n    return count;\n  }\n\n  setCategoryCount() {\n    this.categories.forEach(cat => {\n      cat.count = cat.show ? this.getCategoryCount(cat.id) : null;\n    });\n  }\n\n  getCategoryCount(id: string): number {\n    let count = 0;\n    this.activities.forEach(act => {\n      act.feedback.forEach(fb => {\n        if (fb.category === id) {\n          fb.messages.forEach(mes => {\n            count += mes.context.length;\n          });\n        }\n      });\n    });\n\n    this.companyFeedbackData.forEach(fb => {\n      if (fb.category === id) {\n        fb.messages.forEach(mes => {\n          count += mes.context.length;\n        });\n      }\n    });\n    return count;\n  }\n\n  // Set the count of the type-messages and sort types by count desc\n  setTypeMessageCount() {\n    this.severities.forEach(t => {\n      t.types.forEach(m => {\n        m.count = m.show ? this.getTypeMessageCount(m.id) : null;\n      });\n    });\n    // Sort Type messages inside severity. Type with more messages on top\n    this.severities.forEach(s => {\n      s.types.sort((a, b) => b.count - a.count);\n    });\n  }\n\n  getTypeMessageCount(typeId: string): number {\n    let count = 0;\n    this.activities.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages.forEach(mes => {\n          if (mes.id === typeId) {\n            count += mes.context.length;\n          }\n        });\n      });\n    });\n\n    this.companyFeedbackData.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (mes.id === typeId) {\n          count += mes.context.length;\n        }\n      });\n    });\n    return count;\n  }\n\n  severitySelectedChanged() {\n    this.filterActivities();\n  }\n\n  sourceSelectedChanged() {\n    this.filterActivities();\n  }\n\n  categorySelectedChanged() {\n    this.filterActivities();\n  }\n\n  typesSelectedChanged() {\n    this.filterActivities();\n  }\n\n  getfeedbackSeverity(message: Message): string {\n    if (message.rulesets.some(x => x.severity === 'danger')) {\n      return 'error';\n    } else if (message.rulesets.some(x => x.severity === 'critical')) {\n      return 'critical';\n    } else if (message.rulesets.some(x => x.severity === 'warning')) {\n      return 'warning';\n    } else if (message.rulesets.some(x => x.severity === 'info')) {\n      return 'improvement';\n    } else if (message.rulesets.some(x => x.severity === 'success')) {\n      return 'notification';\n    } else {\n      return 'other';\n    }\n\n  }\n\n  // addCountContextFunctions() {\n  //   this.dqfs.activities.forEach( act => {\n  //     act.feedback.forEach(fb => {\n\n  //       fb.countContext = function () {\n  //         let count = 0;\n  //         fb.messages.forEach( mes => {\n  //           count += mes.countContext();\n  //         });\n  //         return count;\n  //        } ;\n\n  //       fb.messages.forEach(mes => {\n  //         mes.countContext = function () { return mes.context.length; };\n  //       });\n  //     });\n  //   });\n  // }\n\n  goBack() {\n    this.location.back();\n  }\n\n\n}\n","<div class=\"xml-feedback\">\n\n<div class=\"feedback-heading row\">\n        <div class=\"col title-col\" (click)=\"collapse()\">\n          <h5 class=\"feedback-single-title title d-inline\" >{{title}}</h5>\n          <div class=\"d-inline float-right\" *ngIf=\"feedbackData.length>0\">\n            <!-- <span class=\"identifier-link\"><a href=\"{{getLinkDportal(activity.publisher, cleanIdentifier(activity.identifier))}}\" target=\"_blank\" >{{ cleanIdentifier(activity.identifier)}}</a></span> -->\n            <span class=\"badge badge-critical\" *ngIf=\"getIssueCount('critical')>0\">{{getIssueCount('critical')}}</span>\n            <span class=\"badge badge-danger\" *ngIf=\"getIssueCount('danger')>0\">{{getIssueCount('danger')}}</span>\n            <span class=\"badge badge-warning\" *ngIf=\"getIssueCount('warning')>0\">{{getIssueCount('warning')}}</span>\n            <span class=\"badge badge-info\" *ngIf=\"getIssueCount('info')>0\">{{getIssueCount('info')}}</span>\n            <span class=\"badge badge-success\" *ngIf=\"getIssueCount('success')>0\">{{getIssueCount('success')}}</span>\n          </div>\n        </div>\n        <div class=\"col-auto collapse-col\" (click)=\"collapse()\">\n            <button type=\"button\" class=\"btn btn-outline-secondary collapser\" >\n              <span *ngIf=\"!isCollapsed\"><img src=\"assets/icons/arrow_down_24.svg\" alt=\"icon arrow down\"></span>\n              <span *ngIf=\"isCollapsed\" > <img src=\"assets/icons/arrow_up_24.svg\" alt=\"icon arrow up\"> </span>\n            </button>\n        </div>\n    \n      </div>\n      <div class=\"feedback-items\" [ngbCollapse]=\"isCollapsed\" *ngIf=\"feedbackData.length>0;else noFeedbackData\">\n        <app-feedback-item *ngFor=\"let fb of feedbackData\" [feedback]=\"fb\"></app-feedback-item>\n      </div>\n      </div>\n\n      <ng-template #noFeedbackData>\n        <p>There is no {{item}} file feedback to display</p>\n      </ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Feedback, Dqfs } from '../shared/feedback';\n\n@Component({\n  selector: 'app-single-feedback',\n  templateUrl: './single-feedback.component.html',\n  styleUrls: ['./single-feedback.component.scss']\n})\nexport class SingleFeedbackComponent implements OnInit {\n  @Input() feedbackData: Feedback[] = [];\n  @Input() title = '';\n  @Input() item = 'activity';\n  @Input() items = 'activities';\n  public isCollapsed = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getIssueCount(type: string): number {\n    let count = 0;\n\n    this.feedbackData.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (mes.rulesets.some(r => r.severity === type)) {\n          count += mes.context.length;\n        }\n      });\n    });\n    return count;\n  }\n\n  collapse() {\n    this.isCollapsed = ! this.isCollapsed;\n  }\n}\n","<div class=\"feedback-group\">\n  <div class=\"feedback-heading row\">\n    <div class=\"col title-col\" (click)=\"collapse()\">\n      <div class=\"title-col__title-label\">{{item | titlecase}} title</div>\n      <h5 class=\"feedback-group-title title d-inline\" >{{ activity.title }}</h5>\n      <div class=\"d-inline float-right\">\n        <span class=\"identifier-link\"><a href=\"{{getLinkDportal(activity.publisher, cleanIdentifier(activity.identifier))}}\"\n          title=\"Open this {{item}} in d-portal\" \n          target=\"_blank\" (click)=\"$event.stopPropagation()\">{{ cleanIdentifier(activity.identifier)}}</a></span>\n        <span class=\"badge badge-critical\" *ngIf=\"getIssueCount('critical')>0\">{{getIssueCount('critical')}}</span>\n        <span class=\"badge badge-danger\" *ngIf=\"getIssueCount('danger')>0\">{{getIssueCount('danger')}}</span>\n        <span class=\"badge badge-warning\" *ngIf=\"getIssueCount('warning')>0\">{{getIssueCount('warning')}}</span>\n        <span class=\"badge badge-info\" *ngIf=\"getIssueCount('info')>0\">{{getIssueCount('info')}}</span>\n        <span class=\"badge badge-success\" *ngIf=\"getIssueCount('success')>0\">{{getIssueCount('success')}}</span>\n      </div>\n    </div>\n    <div class=\"col-auto collapse-col\" (click)=\"collapse()\">\n        <button type=\"button\" class=\"btn btn-outline-secondary collapser\" >\n          <span *ngIf=\"!isCollapsed\"><img src=\"assets/icons/arrow_down_24.svg\" alt=\"icon arrow down\"></span>\n          <span *ngIf=\"isCollapsed\" > <img src=\"assets/icons/arrow_up_24.svg\" alt=\"icon arrow up\"> </span>\n        </button>\n    </div>\n\n  </div>\n  <div class=\"feedback-items\" [ngbCollapse]=\"isCollapsed\">\n    <app-feedback-item *ngFor=\"let fb of activity.feedback\" [feedback]=\"fb\" ></app-feedback-item>\n  </div>  \n</div>\n\n\n\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { LogService } from './../../../core/logging/log.service';\nimport { Dqfs, Activity } from './../shared/feedback';\n\n@Component({\n  selector: 'app-feedback-group',\n  templateUrl: './feedback-group.component.html',\n  styleUrls: ['./feedback-group.component.scss']\n})\nexport class FeedbackGroupComponent implements OnInit {\n  @Input() activity: Activity;\n  @Input() item: 'activity' | 'organisation';\n  @Input() items: 'activities' | 'organisations';\n  @Input() dqfs: Dqfs;\n\n  public isCollapsed = false;\n\n  constructor(private logger: LogService) { }\n\n  ngOnInit() {\n  }\n\n  collapse() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n  getLinkDportal(publisher: string, activity: string) {\n    if (this.dqfs && this.dqfs.filetype === 'iati-organisations') {\n      return `http://d-portal.org/ctrack.html?publisher=${encodeURIComponent(publisher)}`;\n    } else {\n      return `http://d-portal.org/ctrack.html?publisher=${encodeURIComponent(publisher)}#view=act&aid=${encodeURIComponent(activity)}`;\n    }\n  }\n\n  getIssueCount(type): number {\n    let count = 0;\n\n    this.activity.feedback.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (mes.rulesets.some(r => r.severity === type)) {\n          const override = this.overrideGuidanceLink(mes.id);\n\n          if (override != null) {\n            mes.rulesets.forEach(ruleset => {\n              ruleset['href'] = override;\n            });\n          }\n\n          count += mes.context.length;\n        }\n      });\n    });\n    return count;\n  }\n\n  // clean identiefier that contain new line breaks.\n  // Delete the part from and after the line break.\n  cleanIdentifier(identifier: string): string {\n    const newLineFound = identifier.indexOf('\\n');\n    if (newLineFound >= 0) {\n      return identifier.substring(0, newLineFound);\n    } else {\n      return identifier;\n    }\n  }\n\n  // This is a hack to overcome the guidance links being hardcoded into the repos\n  // and then baked into the thousands of reports. Done properly in V2\n  overrideGuidanceLink(code) {\n    const overrides = {\n      '102.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '103.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '106.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-classifications/',\n      '11.1.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '11.1.3': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '11.1.4': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '11.1.5': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '11.2.1': 'https://iatistandard.org/en/guidance/standard-guidance/financial-transactions/',\n      '11.2.2': 'https://iatistandard.org/en/guidance/standard-guidance/financial-transactions/',\n      '11.3.1': 'https://iatistandard.org/en/guidance/standard-guidance/organisation-budgets-spend/',\n      '12.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '12.1.2': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '12.3.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '12.3.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '12.4.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '2.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '2.1.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '2.1.4': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '2.2.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '3.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.1.2': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.1.4': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.4.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.4.2': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.4.4': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.6.2': 'https://iatistandard.org/en/guidance/standard-guidance/financial-transactions/',\n      '3.7.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.7.2': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '6.1.5': 'https://iatistandard.org/en/guidance/standard-guidance/related-documents/',\n      '6.10.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-participants/',\n      '6.11.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '6.13.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-classifications/',\n      '6.14.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-classifications/',\n      '6.2.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '6.2.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '6.6.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '6.7.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '7.5.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-budgets/',\n      '7.5.3': 'https://iatistandard.org/en/guidance/standard-guidance/activity-budgets/',\n      '8.6.3': 'https://iatistandard.org/en/guidance/standard-guidance/organisation-budgets-spend/'\n    };\n\n    if (code in overrides) {\n      return overrides[code];\n    }\n\n    return null;\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { TypeMessage } from './../shared/type-message';\nimport { TypeSeverity } from './../shared/type-severity';\n\n\n@Component({\n  selector: 'app-filter-type',\n  templateUrl: './filter-type.component.html',\n  styleUrls: ['./filter-type.component.scss']\n})\nexport class FilterTypeComponent implements OnInit {\n  @Input() types: TypeSeverity[] = [];\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  allSelected(): boolean {\n    return this.types.every(x => x.types.every(y => y.show === true) );\n }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.types.forEach(x => x.types.forEach(t => t.show = true ));\n    this.selectionChanged();\n  }\n}\n","<div class=\"filter\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item caption\">\n      <div class=\"title\">Types</div>\n      <span *ngIf=\"allSelected()\" class=\"show-label\">Show/hide</span>\n      <span *ngIf=\"!allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"selectAll()\">Select all</button></span>\n    </li>\n    <app-filter-type-severity *ngFor=\"let item of types\" [type]=\"item\" (selectedChanged)=\"selectionChanged()\"  ></app-filter-type-severity>\n  </ul>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Source } from './../shared/source';\n\n@Component({\n  selector: 'app-filter-source',\n  templateUrl: './filter-source.component.html',\n  styleUrls: ['./filter-source.component.scss']\n})\nexport class FilterSourceComponent implements OnInit {\n  @Input() sources: Source[] = [];\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.sources);\n  }\n\n  allSelected(): boolean {\n    return this.sources.every(x => x.show === true);\n }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.sources.forEach(x => x.show = true);\n    this.selectionChanged();\n  }\n\n}\n","<div class=\"filter\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item caption\">\n      <div class=\"title\">Guidelines</div>\n      <span *ngIf=\"!allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"selectAll()\">Select all</button></span>\n    </li>\n    <li *ngFor=\"let cat of sources\" class=\"list-group-item\">\n      <span class=\"severity-count\">{{cat.count}}</span>\n      <span [ngClass]=\"{'unselected': !cat.show }\">{{ cat.name }}</span>\n      <span class=\"select\">\n        <app-checkbox [(checked)]=\"cat.show\" [name]=\"'filterSrc' + cat.name\" (checkedChange)=\"selectionChanged()\"></app-checkbox>\n      </span>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Category } from './../shared/category';\n\n@Component({\n  selector: 'app-filter-category',\n  templateUrl: './filter-category.component.html',\n  styleUrls: ['./filter-category.component.scss']\n})\nexport class FilterCategoryComponent implements OnInit {\n  @Input() categories: Category[] = [];\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  allSelected(): boolean {\n    return this.categories.every(x => x.show === true);\n }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.categories.forEach(x => x.show = true);\n    this.selectionChanged();\n  }\n\n}\n","<div class=\"filter\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item caption\">\n      <div class=\"title\">View by category</div>\n      <span *ngIf=\"!allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"selectAll()\">Select all</button></span>\n    </li>\n    <li *ngFor=\"let cat of categories\" class=\"list-group-item\">\n      <span class=\"severity-count\">{{cat.count}} x</span>\n      <span [ngClass]=\"{'unselected': !cat.show}\">{{ cat.name }}</span>\n      <span class=\"select\">\n        <app-checkbox [(checked)]=\"cat.show\" [name]=\"'filterCat' + cat.name\" (checkedChange)=\"selectionChanged()\"></app-checkbox>\n      </span>\n    </li>\n  </ul>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { GtagModule } from 'angular-gtag';\n\n\nimport { DataQualityFeedbackService } from './shared/data-quality-feedback.service';\nimport { MainComponent } from './main/main.component';\nimport { FilterSeverityComponent } from './filter-severity/filter-severity.component';\nimport { FilterSourceComponent } from './filter-source/filter-source.component';\nimport { FilterTypeComponent } from './filter-type/filter-type.component';\nimport { FeedbackGroupComponent } from './feedback-group/feedback-group.component';\nimport { FeedbackItemComponent } from './feedback-item/feedback-item.component';\nimport { CheckboxComponent } from './shared/checkbox/checkbox.component';\nimport { FilterCategoryComponent } from './filter-category/filter-category.component';\nimport { FilterTypeMessageComponent } from './filter-type-message/filter-type-message.component';\nimport { FilterTypeSeverityComponent } from './filter-type-severity/filter-type-severity.component';\nimport { FilterSeverityItemComponent } from './filter-severity-item/filter-severity-item.component';\nimport { MainReportInfoComponent } from './main-report-info/main-report-info.component';\nimport { SharedModule } from './../../shared/shared.module';\nimport { SingleFeedbackComponent } from './single-feedback/single-feedback.component';\nimport { IatiInfoComponent } from './iati-info/iati-info.component';\nimport { ValidateIatiModule } from '../../validate-iati/validate-iati.module';\nimport { MultiFeedbackComponent } from './multi-feedback/multi-feedback.component';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n  { path: 'files/:id', component: MainComponent },\n  { path: '', redirectTo: '/404dqf' , pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    NgbModule,\n    SharedModule,\n    ValidateIatiModule,\n    GtagModule\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: [\n    MainComponent,\n    // AboutComponent,\n    FilterSeverityComponent,\n    FilterSourceComponent,\n    FilterTypeComponent,\n    FeedbackGroupComponent,\n    FeedbackItemComponent,\n    MultiFeedbackComponent,\n    CheckboxComponent,\n    FilterCategoryComponent,\n    FilterTypeMessageComponent,\n    FilterTypeSeverityComponent,\n    FilterSeverityItemComponent,\n    MainReportInfoComponent,\n    SingleFeedbackComponent,\n    IatiInfoComponent],\n    providers: [DataQualityFeedbackService]\n})\nexport class DataQualityFeedbackModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Severity } from '../shared/severity';\n\n@Component({\n  selector: 'app-filter-severity',\n  templateUrl: './filter-severity.component.html',\n  styleUrls: ['./filter-severity.component.scss']\n})\nexport class FilterSeverityComponent implements OnInit {\n  @Input() severities: Severity[] = [];\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  allSelected(): boolean {\n    return this.severities.every(x => x.show === true);\n  }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.severities.forEach(x => x.show = true);\n    this.selectionChanged();\n  }\n\n}\n","<div class=\"filter\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item caption\">\n      <div class=\"title\">View by message type</div>\n      <span  class=\"show-label text-muted\">Click to show or hide individual message types.</span>\n      <!-- <span *ngIf=\"allSelected()\" class=\"show-label\">Show/hide</span>\n      <span *ngIf=\"!allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"selectAll()\">Select all</button></span> -->\n    </li>\n    <app-filter-severity-item *ngFor=\"let sev of severities\" [severity]=\"sev\" (selectedChanged)=\"selectionChanged()\"></app-filter-severity-item>\n  </ul>\n</div>\n","import { Organisation } from './../../../shared/organisation';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { LogService } from '../../../core/logging/log.service';\nimport { Source } from './source';\nimport { Severity } from './severity';\nimport { Dqfs } from './feedback';\nimport { IatiDataset } from './../../../organisation/shared/iati-dataset';\nimport { ReportInfo } from './report-info';\n\n\n@Injectable()\nexport class DataQualityFeedbackService {\n  private urlApiIatiFile: string = window.__env.apiDataworkBench + '/iati-files';\n  private urlApiIatiTestFile: string = window.__env.apiDataworkBench + '/iati-testfiles';\n  private urlApiIatiDataSet: string = window.__env.apiDataworkBench + '/iati-datasets';\n  private urlApiOrganisation: string = window.__env.apiDataworkBench + '/iati-publishers';\n\n  constructor(private http: HttpClient,\n    private logger: LogService) { }\n\n  getDataQualityFeedback(md5: string): Observable<Dqfs> {\n    const url: string = this.urlApiIatiFile + '/file/json/' + md5 + '.json';\n    //   /iati-files/{container}/download/{file}\n    return this.http.get<any>(url)\n      .pipe(\n        // tap(_ => this.log(`fetched iati file`)),\n        catchError(this.handleError('getIatiFile', undefined) as any)\n      );\n  }\n\n  getTestFilesDataQualityFeedbackById(inId: string): Observable<Dqfs> {\n    const url: string = this.urlApiIatiTestFile + '/file/json/' + inId + '.json';\n    //   /iati-testfiles/{container}/download/{file}\n    return this.http.get<any>(url)\n      .pipe(\n        // tap(_ => this.log(`fetched iati file`)),\n        catchError(this.handleError('getIatiFile', undefined) as any)\n      );\n  }\n\n  getReportInfo(id: string): Observable<ReportInfo> {\n    const reportInfo: ReportInfo = { organisationName: '', fileName: '', organisationSlug: '' };\n\n    const url: string = this.urlApiIatiDataSet + '/findOne/' + '?filter[where][id]=' + id;\n    this.http.get<IatiDataset>(url)\n      .subscribe(\n        (data: any) => {\n          reportInfo.fileName = data.filename;\n          reportInfo.organisationSlug = data.publisher;\n          const urlPublisher: string = this.urlApiOrganisation + '/findOne/' + '?filter[where][slug]=' + data.publisher;\n          this.http.get<Organisation>(urlPublisher)\n            .subscribe(\n              (datas: any) => {\n                reportInfo.organisationName = datas.name;\n                return of(reportInfo);\n              }\n            );\n        }\n      );\n    return of(reportInfo);\n  }\n\n  getSeverities(): Severity[] {\n    return [\n      {\n        id: 'critical',\n        slug: 'critical',\n        name: 'Critical',\n        description: 'Files with critical errors will not be processed by the datastore',\n        count: null,\n        order: 1,\n        show: true,\n        types: []\n      },\n      {\n        id: 'error',\n        slug: 'danger',\n        name: 'Errors',\n        description: 'Errors make it hard or impossible to use the data.',\n        count: null,\n        order: 2,\n        show: true,\n        types: []\n      },\n      {\n        id: 'warning',\n        slug: 'warning',\n        name: 'Warnings',\n        description: 'Warnings indicate where the data can be more valuable.',\n        count: null,\n        order: 3,\n        show: true,\n        types: []\n      },\n      {\n        id: 'improvement',\n        slug: 'info',\n        name: 'Improvements',\n        description: 'Improvements can make the data more useful.',\n        count: null,\n        order: 4,\n        show: true,\n        types: []\n      },\n      {\n        id: 'notification',\n        slug: 'success',\n        name: 'Notifications',\n        description: 'Notifications are for your information.',\n        count: null,\n        order: 5,\n        show: true,\n        types: []\n      },\n    ];\n  }\n\n  getSources(): Source[] {\n    return [\n      { id: 'iati', slug: 'iati', name: 'IATI Standard', count: null, order: 1, show: true },\n      {\n        id: 'minbuza',\n        slug: 'minbuza',\n        name: 'Netherlands: Ministry of Foreign Affairs additional rules',\n        count: null,\n        order: 2,\n        show: true\n      },\n      {\n        id: 'dfid',\n        slug: 'dfid',\n        name: 'UK: Department for International Development (DFID) additional rules',\n        count: null,\n        order: 3,\n        show: true\n      },\n      { id: 'practice', slug: 'practice', name: 'Common practice', count: null, order: 4, show: true },\n      { id: 'iati-doc', slug: 'iati-doc', name: 'IATI Standard (additional)', count: null, order: 5, show: true },\n    ];\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging\n      this.logger.error(error);\n      // console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nimport { TypeMessage } from './../shared/type-message';\nimport { TypeSeverity } from './../shared/type-severity';\n\n@Component({\n  selector: 'app-filter-type-message',\n  templateUrl: './filter-type-message.component.html',\n  styleUrls: ['./filter-type-message.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilterTypeMessageComponent implements OnInit {\n  @Input() typeMessage: TypeMessage;\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  selectionChanged() {\n    console.log('typeMessage: ', this.typeMessage);\n    this.selectedChanged.emit('');\n  }\n\n}\n","<li *ngIf=\"typeMessage\" class=\"list-group-item\">\n  <span class=\"severity-count\">{{typeMessage.count}} x</span>\n  <span [ngClass]=\"{'unselected': !typeMessage?.show}\">{{ typeMessage.text}}</span>\n  <span class=\"select\">\n    <app-checkbox [(checked)]=\"typeMessage.show\" [name]=\"'filterTypeMsg' + typeMessage.text + typeMessage.id\" (checkedChange)=\"selectionChanged()\"></app-checkbox>\n  </span>\n</li>\n","import { Component, Input, QueryList, ViewChildren } from '@angular/core';\nimport { FeedbackGroupComponent } from '../feedback-group/feedback-group.component';\nimport { Activity, Dqfs } from '../shared/feedback';\n\n\n@Component({\n  selector: 'app-multi-feedback',\n  templateUrl: './multi-feedback.component.html',\n  styleUrls: ['./multi-feedback.component.scss']\n})\nexport class MultiFeedbackComponent {\n  @Input() activityData: Activity[] = [];\n  @Input() title = '';\n  @Input() item: 'activity' | 'organisation' = 'activity';\n  @Input() items: 'activities' | 'organisations' = 'activities';\n  @Input() dqfs: Dqfs | undefined; // TODO: verify undefined type\n  @ViewChildren(FeedbackGroupComponent) groups: QueryList<FeedbackGroupComponent> | undefined; // TODO: verify undefined type\n  isCollapsed = false;\n\n  constructor() { }\n\n  toggleCollapse() {\n    this.isCollapsed = !this.isCollapsed;\n    this.groups?.forEach(x => x.isCollapsed = this.isCollapsed);\n  }\n}\n","<div class=\"feedback\">\n    <h5 class=\"title feedback-title\">\n        {{title}}\n        <span class=\"toggle-collapse\">\n            <button type=\"button\" class=\"btn btn-link\" (click)=\"toggleCollapse()\">\n                Collapse/expand all {{items}}\n            </button>\n        </span>\n    </h5>\n    <div *ngIf=\"activityData.length>0; else noActivityData\">\n        <app-feedback-group *ngFor=\"let act of activityData\" [activity]=\"act\" [item]=\"item\" [items]=\"items\" [dqfs]=\"dqfs\"></app-feedback-group>\n    </div>\n</div>\n\n<ng-template #noActivityData>\n    <p>There is no feedback to display</p>\n</ng-template>\n"]}