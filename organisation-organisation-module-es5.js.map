{"version":3,"sources":["webpack:///src/app/organisation/document-list/document-list.component.html","webpack:///src/app/organisation/document-list/document-list.component.ts","webpack:///src/app/organisation/document-list-item/document-list-item.component.html","webpack:///src/app/organisation/document-list-item/document-list-item.component.ts","webpack:///src/app/organisation/organisation.module.ts","webpack:///src/app/organisation/organisation/organisation.component.html","webpack:///src/app/organisation/organisation/organisation.component.ts"],"names":["DocumentListComponent","compareSeverity","a","b","getSeverity","document","error","warning","summary","validation","valid","documents","sort","DocumentListItemComponent","router","url","split","pop","hasValidation","navigate","id","console","log","routes","path","component","redirectTo","pathMatch","OrganisationModule","forChild","OrganisationComponent","organisationService","activateRoute","name","params","subscribe","loadOrganisation","getOrganisationAndDocuments","data","organisationData","undefined","image_url"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACI;;AAAG;;AAAe;;AACpB;;;;;;AAqBI;;;;;;AAA2D;;;;;;AAnB/D;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACF;;AAEF;;;;;;AAHiD;;AAAA;;;;UCftCA,qB;AAGX,yCAAc;AAAA;;AAAA;;AAOd,eAAAC,eAAA,GAAkB,UAACC,CAAD,EAAcC,CAAd;AAAA,mBAA8B,KAAI,CAACC,WAAL,CAAiBF,CAAjB,IAAsB,KAAI,CAACE,WAAL,CAAiBD,CAAjB,CAApD;AAAA,WAAlB;;AAEA,eAAAC,WAAA,GAAc,UAACC,QAAD,EAAwB;AACpC,gBAAIC,KAAK,GAAG,CAAC,CAAb;AACA,gBAAIC,OAAO,GAAG,CAAC,CAAf;;AACA,gBAAI,aAAaF,QAAb,IAAyBA,QAAQ,CAACG,OAAT,KAAqB,IAAlD,EAAwD;AAAA,sCAChCH,QAAQ,CAACG,OADuB;AACnDF,mBADmD,qBACnDA,KADmD;AAC5CC,qBAD4C,qBAC5CA,OAD4C;AAEvD;;AALmC,gBAM7BE,UAN6B,GAMRJ,QANQ,CAM7BI,UAN6B;AAAA,gBAMjBC,KANiB,GAMRL,QANQ,CAMjBK,KANiB;;AAQpC,gBAAID,UAAU,KAAK,IAAnB,EAAyB;AACvB,qBAAO,CAAP;AACD,aAFD,MAEO,IAAIC,KAAK,KAAK,IAAV,IAAkBJ,KAAK,KAAK,CAA5B,IAAiCC,OAAO,KAAK,CAAjD,EAAoD;AACzD,qBAAO,CAAP;AACD,aAFM,MAEA,IAAIG,KAAK,KAAK,IAAV,IAAkBJ,KAAK,KAAK,CAAhC,EAAmC;AACxC,qBAAO,CAAP;AACD,aAFM,MAEA,IAAII,KAAK,KAAK,IAAd,EAAoB;AACzB,qBAAO,CAAP;AACD,aAFM,MAEA,IAAIA,KAAK,KAAK,KAAd,EAAqB;AAC1B,qBAAO,CAAP;AACD,aAFM,MAEA;AACL,qBAAO,CAAP;AACD;AACF,WArBD;AATiB;;;;qCAEN;AACT;AACA,iBAAKC,SAAL,CAAeC,IAAf,CAAoB,KAAKX,eAAzB;AACD;;;;;;;yBARUD,qB;AAAqB,O;;;cAArBA,qB;AAAqB,0C;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,0R;AAAA;AAAA;ADRlC;;AAIE;;;;AAJI;;AAIE;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEUF;;AAAkC;;;;AAEhC;;;;;;AAFgC;;AAAA;;;;;;AAKlC;;AAAkC;;;;AAEhC;;;;;;AAFgC;;AAAA;;;;;;AAKlC;;AACE;;;;AAIF;;;;;;AAJE;;AAAA;;;;;;;;;;;;;;;;;;AAzBR;;AACE;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAOA;;AACE;;AACF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAMF;;AACA;;AACE;;AACF;;AACA;;AAA8B;;AAAM;;AACtC;;AACF;;;;;;AAhCI;;AAAA;;AAOE;;AAAA;;AAGO;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;UCfAa,yB;AAIX,2CAAoBC,MAApB,EAAoC;AAAA;;AAAhB,eAAAA,MAAA,GAAAA,MAAA;AAAmB;;;;qCAE/B,CACP;;;qCACO;AACN,gBAAI,SAAS,KAAKT,QAAlB,EAA4B;AAC1B,qBAAO,KAAKA,QAAL,CAAcU,GAAd,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,EAAP;AACD,aAFD,MAEO;AACL,qBAAO,uBAAP;AACD;AACF;;;0CAEY;AACX,gBAAI,KAAKZ,QAAL,CAAcI,UAAlB,EAA8B;AAC5B,qBAAO,IAAP;AACD,aAFD,MAEO;AACL,qBAAO,KAAP;AACD;AACF;;;uCAES;AACR,gBAAIH,KAAK,GAAG,CAAC,CAAb;AACA,gBAAIC,OAAO,GAAG,CAAC,CAAf;;AACA,gBAAI,aAAa,KAAKF,QAAlB,IAA8B,KAAKA,QAAL,CAAcG,OAAd,KAA0B,IAA5D,EAAkE;AAAA,0CAC1C,KAAKH,QAAL,CAAcG,OAD4B;AAC7DF,mBAD6D,yBAC7DA,KAD6D;AACtDC,qBADsD,yBACtDA,OADsD;AAEjE;;AALO,iCAMoB,KAAKF,QANzB;AAAA,gBAMDI,UANC,kBAMDA,UANC;AAAA,gBAMWC,KANX,kBAMWA,KANX;;AAQR,gBAAID,UAAU,KAAK,IAAnB,EAAyB;AACvB,qBAAO,QAAP;AACD,aAFD,MAEO,IAAIC,KAAK,KAAK,IAAV,IAAkBJ,KAAK,KAAK,CAA5B,IAAiCC,OAAO,KAAK,CAAjD,EAAoD;AACzD,qBAAO,SAAP;AACD,aAFM,MAEA,IAAIG,KAAK,KAAK,IAAV,IAAkBJ,KAAK,KAAK,CAAhC,EAAmC;AACxC,qBAAO,SAAP;AACD,aAFM,MAEA,IAAII,KAAK,KAAK,IAAd,EAAoB;AACzB,qBAAO,OAAP;AACD,aAFM,MAEA,IAAIA,KAAK,KAAK,KAAd,EAAqB;AAC1B,qBAAO,UAAP;AACD,aAFM,MAEA;AACL,qBAAO,QAAP;AACD;AACF;;;oCAEM;AACL,gBAAI,KAAKL,QAAL,CAAcI,UAAd,IAA4B,KAAKJ,QAAL,CAAcK,KAA9C,EAAqD;AACnD,qBAAO,IAAP;AACD,aAFD,MAEO,IAAI,KAAKL,QAAL,CAAcI,UAAd,IAA6B,KAAKJ,QAAL,CAAcK,KAAd,KAAwB,KAAzD,EAAiE;AACtE,qBAAO,KAAP;AACD,aAFM,MAEA;AACL,qBAAO,IAAP;AACD;AACF;;;uCAES;AACR,gBAAI,KAAKQ,aAAL,EAAJ,EAA0B;AACxB,qBAAO,wCAAP;AACD,aAFD,MAEO;AACL,qBAAO,GAAP;AACD;AACF;;;qCAEU;AACT,gBAAI,KAAKA,aAAL,EAAJ,EAA0B;AACxB;AACA,mBAAKJ,MAAL,CAAYK,QAAZ,CAAqB,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,KAAKd,QAAL,CAAce,EAAvC,CAArB;AACAC,qBAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,KAAKjB,QAAL,CAAce,EAA5D;AACD;AACF;;;;;;;yBAvEUP,yB,EAAyB,uH;AAAA,O;;;cAAzBA,yB;AAAyB,+C;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,sK;AAAA;AAAA;ADTtC;;;;AAAM;;;;;;;;;;;;;;;;;;;;;;AECN;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,UAAMU,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OADqB,EAErB;AAAED,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE;AAA5B,OAFqB,EAGrB;AAAED,YAAI,EAAE,EAAR;AAAYE,kBAAU,EAAE,SAAxB;AAAmCC,iBAAS,EAAE;AAA9C,OAHqB,CAAvB;;UAyBaC,kB;;;;;cAAAA;;;;2BAAAA,kB;AAAkB,S;AAAA,mBAVlB,CACT,gFADS,EAET,gGAFS,C;AAGV,kBAXQ,CACP,4DADO,EAEP,6DAAaC,QAAb,CAAsBN,MAAtB,CAFO,EAGP,0DAHO,CAWR,EALC,4DAKD;;;;4HAOUK,kB,EAAkB;AAAA,yBAL3B,0FAK2B,EAJ3B,4FAI2B,EAH3B,0GAG2B;AAHF,oBAdzB,4DAcyB,EAdb,4DAca,EAZzB,0DAYyB,CAGE;AAfhB,oBAGX,4DAHW;AAegB,S;AAZf,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBZ;;AACE;;AACF;;;;;;AADgF;;AAAA;;AAAxE;;;;;;;;;;;;AAER;;AACE;;AAAI;;AAAW;;AACf;;AAAG;;AAAmC;;AACxC;;;;;;AAHiB;;AAEZ;;AAAA;;;;;;AAYG;;;;;;AAAuD;;;;UCZtDE,qB;AAKX,uCAAoBC,mBAApB,EACUC,aADV,EACyC;AAAA;;AAAA;;AADrB,eAAAD,mBAAA,GAAAA,mBAAA;AACV,eAAAC,aAAA,GAAAA,aAAA;AAHV,eAAAC,IAAA,GAAO,EAAP;AAIE,eAAKD,aAAL,CACGE,MADH,CAEGC,SAFH,CAEa,UAAAD,MAAM,EAAI;AACnB,kBAAI,CAACD,IAAL,GAAYC,MAAM,CAAC,MAAD,CAAlB;AACD,WAJH;AAKD;;;;qCAEgB;;;;;;AACf,2BAAKE,gBAAL,CAAsB,KAAKH,IAA3B;;;;;;;;;AACD;;;2CAEgBA,I,EAAc;AAAA;;AAC7B,iBAAKF,mBAAL,CAAyBM,2BAAzB,CAAqDJ,IAArD,EACGE,SADH,CAEI,UAAAG,IAAI,EAAI;AACN,oBAAI,CAACC,gBAAL,GAAwBD,IAAxB;AACD,aAJL,EAKI,UAAAhC,KAAK;AAAA,qBAAI,MAAI,CAACA,KAAL,GAAaA,KAAjB;AAAA,aALT;AAOD;;;yCAEW;AACV,gBAAI,KAAKiC,gBAAL,KAA0BC,SAA9B,EAAyC;AACvC,kBAAI,eAAe,KAAKD,gBAAxB,EAA0C;AACxC,uBAAQ,KAAKA,gBAAL,CAAsBE,SAAtB,KAAoC,EAA5C;AACD;AACF;;AAED,mBAAO,KAAP;AACD;;;wCAEa,CACb;;;;;;;yBAvCUX,qB,EAAqB,iJ,EAAA,+H;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA,iB;AAAA,e;AAAA,ya;AAAA;AAAA;ADXlC;;AACE;;AACE;;AAAI;;AAA6B;;AACnC;;AAEA;;AACE;;AAGA;;AAKF;;AAEA;;AACE;;AACI;;AACI;;AACJ;;AACA;;AAAyB;;AACrB;;AAAqB;;AAAG;;AAAyC;;AAAI;;AACrE;;AACJ;;AACF;;AACJ;;AAEF;;;;AA1BQ;;AAAA;;AAIE;;AAAA;;AAGqD;;AAAA;;AAc/B;;AAAA","file":"organisation-organisation-module-es5.js","sourcesContent":["<div *ngIf=\"documents === undefined\">\n    <p>No files found.</p>\n  </div>\n  \n  <div *ngIf=\"documents !== undefined\" class=\"result-validation-table\">\n    <div class=\"documents\">\n      <div class=\"row heading\">\n        <div class=\"col-12 col-md\">\n          File name\n        </div>\n        <div class=\"col-12 col-md d-none d-md-block\">\n          Identified in Registry\n        </div>\n        <div class=\"col-12 col-md d-none d-md-block\">\n          Downloaded\n        </div>\n        <div class=\"col-12 col-md d-none d-md-block\">\n          Validated\n        </div>\n        <div class=\"col-12 col-md d-none d-md-block\">\n          Entered in Datastore\n        </div>\n      </div>\n      <app-document-list-item *ngFor=\"let document of documents\" [document]=\"document\"></app-document-list-item>\n    </div>\n  \n  </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Document } from '../../shared/document';\n\n@Component({\n  selector: 'app-document-list',\n  templateUrl: './document-list.component.html',\n  styleUrls: ['./document-list.component.scss']\n})\nexport class DocumentListComponent implements OnInit {\n  @Input() documents: Document[];\n\n  constructor() { }\n\n  ngOnInit() {\n    // Sort the documents based on severity\n    this.documents.sort(this.compareSeverity);\n  }\n\n  compareSeverity = (a: Document, b: Document) => this.getSeverity(a) - this.getSeverity(b);\n\n  getSeverity = (document: Document) => {\n    let error = -1;\n    let warning = -1;\n    if ('summary' in document && document.summary !== null) {\n      ({ error, warning } = document.summary);\n    }\n    const {validation, valid} = document;\n\n    if (validation === null) {\n      return 2;\n    } else if (valid === true && error === 0 && warning === 0) {\n      return 5;\n    } else if (valid === true && error === 0) {\n      return 4;\n    } else if (valid === true) {\n      return 3;\n    } else if (valid === false) {\n      return 1;\n    } else {\n      return 2;\n    }\n  };\n}\n","<div *ngIf=\"document\" class=\"wrapper\">\n  <div\n    class=\"row\"\n    (click)=\"rowClick()\"\n    [ngClass]=\"{'file-success': fileStatus() === 'success', \n                'file-warning': fileStatus() === 'warning',\n                'file-error': fileStatus() === 'error',\n                'file-critical': fileStatus() === 'critical',\n                'no-validation': fileStatus() === 'normal'}\"\n  >\n    <div class=\"col-12 col-md\">\n      {{ fileName() }}\n    </div>\n    <div class=\"col-12 col-md\">\n      <span *ngIf=\"document.first_seen\">{{\n        document.first_seen | date: \"yyyy-MM-dd HH:mm (z)\"\n      }}</span>\n    </div>\n    <div class=\"col-12 col-md\">\n      <span *ngIf=\"document.downloaded\">{{\n        document.downloaded | date: \"yyyy-MM-dd HH:mm (z)\"\n      }}</span>\n    </div>\n    <div class=\"col-12 col-md\">\n      <span *ngIf=\"document.validation_created\">\n        {{\n          (document ? document.validation_created : \"\")\n            | date: \"yyyy-MM-dd HH:mm (z)\"\n        }}\n      </span>\n    </div>\n    <div class=\"col-12 col-md\">\n      Datastore Entered Date\n    </div>\n    <div class=\"col-12 d-md-none\"><hr /></div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Document } from '../../shared/document';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-document-list-item',\n  templateUrl: './document-list-item.component.html',\n  styleUrls: ['./document-list-item.component.scss']\n})\nexport class DocumentListItemComponent implements OnInit {\n  @Input()\n  document!: Document;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  fileName(): string {\n    if ('url' in this.document) {\n      return this.document.url.split('/').pop();\n    } else {\n      return 'No filename available';\n    }\n  }\n\n  hasValidation(): boolean {\n    if (this.document.validation) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  fileStatus(): string {\n    let error = -1;\n    let warning = -1;\n    if ('summary' in this.document && this.document.summary !== null) {\n      ({ error, warning } = this.document.summary);\n    }\n    const {validation, valid} = this.document;\n\n    if (validation === null) {\n      return 'normal';\n    } else if (valid === true && error === 0 && warning === 0) {\n      return 'success';\n    } else if (valid === true && error === 0) {\n      return 'warning';\n    } else if (valid === true) {\n      return 'error';\n    } else if (valid === false) {\n      return 'critical';\n    } else {\n      return 'normal';\n    }\n  }\n\n  isValid(): boolean {\n    if (this.document.validation && this.document.valid) {\n      return true;\n    } else if (this.document.validation && (this.document.valid === false)) {\n      return false;\n    } else {\n      return null;\n    }\n  }\n\n  reportType(): string {\n    if (this.hasValidation()) {\n      return 'File Validation report (click to view)';\n    } else {\n      return '-';\n    }\n  }\n\n  rowClick() {\n    if (this.hasValidation()) {\n      // this.router.navigate(['view', 'dqf', 'files', this.iatiDatasetData.id]);\n      this.router.navigate(['view', 'dqf', 'files', this.document.id]);\n      console.log('Validation Report Link Clicked', this.document.id);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrganisationComponent } from './organisation/organisation.component';\nimport { OrganisationService } from './shared/organisation.service';\nimport { OrganisationsService } from '../organisations/shared/organisations.service';\nimport { DocumentListComponent } from './document-list/document-list.component';\nimport { DocumentListItemComponent } from './document-list-item/document-list-item.component';\n\nconst routes: Routes = [\n  { path: '', component: OrganisationComponent },\n  { path: ':name', component: OrganisationComponent },\n  { path: '', redirectTo: '/404dqf', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    OrganisationService,\n    OrganisationsService\n  ],\n  declarations: [\n    OrganisationComponent,\n    DocumentListComponent,\n    DocumentListItemComponent\n  ]\n})\nexport class OrganisationModule { }\n","<div class=\"container\">\n  <div class=\"organisation-name\">\n    <h1>{{ organisationData?.title }}</h1>\n  </div>\n\n  <div class=\"row about-organisation\">\n    <div *ngIf=\"hasValidLogo()\" class=\"col-md-3 h-100\">\n      <img  [src]=\"organisationData?.image_url\" class=\"organisation-logo img-fluid\" alt=\"{{organisationData?.name}}\">\n    </div>\n    <div class=\"col\" [ngClass]=\"{'col-md-9': hasValidLogo()}\" *ngIf=\"organisationData?.description\">\n      <h3>Description</h3>\n      <p>{{ organisationData?.description }}</p>\n    </div>\n\n  </div>\n\n  <div class=\"workspaces\">\n    <div class=\"mycard\">  \n        <div class=\"mycard-title\">\n            Public data\n        </div>\n        <div class=\"mycard-body\"><p>\n            <p class=\"card-text\"><b>IATI files published in the IATI Registry</b></p>\n            <app-document-list *ngIf=\"organisationData?.documents\" [documents]='organisationData?.documents'></app-document-list>\n        </div>\n      </div>\n  </div>\n\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { OrganisationService } from './../shared/organisation.service';\nimport { Organisation } from '../../shared/organisation';\n\n@Component({\n  selector: 'app-organisation',\n  templateUrl: './organisation.component.html',\n  styleUrls: ['./organisation.component.scss']\n})\nexport class OrganisationComponent implements OnInit, OnDestroy {\n  organisationData: Organisation;\n  error: any;\n  name = '';\n\n  constructor(private organisationService: OrganisationService,\n    private activateRoute: ActivatedRoute) {\n    this.activateRoute\n      .params\n      .subscribe(params => {\n        this.name = params['name'];\n      });\n  }\n\n  async ngOnInit() {\n    this.loadOrganisation(this.name);\n  }\n\n  loadOrganisation(name: string) {\n    this.organisationService.getOrganisationAndDocuments(name)\n      .subscribe(\n        data => {\n          this.organisationData = data;\n        },\n        error => this.error = error\n      );\n  }\n\n  hasValidLogo(): boolean {\n    if (this.organisationData !== undefined) {\n      if ('image_url' in this.organisationData) {\n        return (this.organisationData.image_url !== '');\n      }\n    }\n\n    return false;\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n"]}