{"version":3,"sources":["./src/app/views/data-quality-feedback/feedback-item/feedback-item.component.html","./src/app/views/data-quality-feedback/feedback-item/feedback-item.component.ts","./src/app/views/data-quality-feedback/filter-severity-item/filter-severity-item.component.ts","./src/app/views/data-quality-feedback/filter-severity-item/filter-severity-item.component.html","./src/app/views/data-quality-feedback/iati-info/iati-info.component.html","./src/app/views/data-quality-feedback/iati-info/iati-info.component.ts","./src/app/views/data-quality-feedback/shared/checkbox/checkbox.component.ts","./src/app/views/data-quality-feedback/shared/checkbox/checkbox.component.html","./src/app/views/data-quality-feedback/filter-type-severity/filter-type-severity.component.ts","./src/app/views/data-quality-feedback/filter-type-severity/filter-type-severity.component.html","./src/app/views/data-quality-feedback/main-report-info/main-report-info.component.html","./src/app/views/data-quality-feedback/main-report-info/main-report-info.component.ts","./src/app/views/data-quality-feedback/main/main.component.html","./src/app/views/data-quality-feedback/main/main.component.ts","./src/app/views/data-quality-feedback/single-feedback/single-feedback.component.html","./src/app/views/data-quality-feedback/single-feedback/single-feedback.component.ts","./src/app/views/data-quality-feedback/feedback-group/feedback-group.component.html","./src/app/views/data-quality-feedback/feedback-group/feedback-group.component.ts","./src/app/views/data-quality-feedback/filter-type/filter-type.component.ts","./src/app/views/data-quality-feedback/filter-type/filter-type.component.html","./src/app/views/data-quality-feedback/filter-source/filter-source.component.ts","./src/app/views/data-quality-feedback/filter-source/filter-source.component.html","./src/app/views/data-quality-feedback/filter-category/filter-category.component.ts","./src/app/views/data-quality-feedback/filter-category/filter-category.component.html","./src/app/views/data-quality-feedback/data-quality-feedback.module.ts","./src/app/views/data-quality-feedback/filter-severity/filter-severity.component.ts","./src/app/views/data-quality-feedback/filter-severity/filter-severity.component.html","./src/app/views/data-quality-feedback/shared/data-quality-feedback.service.ts","./src/app/views/data-quality-feedback/filter-type-message/filter-type-message.component.ts","./src/app/views/data-quality-feedback/filter-type-message/filter-type-message.component.html","./src/app/views/data-quality-feedback/multi-feedback/multi-feedback.component.ts","./src/app/views/data-quality-feedback/multi-feedback/multi-feedback.component.html"],"names":[],"mappings":"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","file":"views-data-quality-feedback-data-quality-feedback-module-es2015.js","sourcesContent":["<div class=\"feedback\">\n  <div class=\"category-label\">{{feedback.label}}</div>\n  <ul class=\"feedback-list\">\n    <li *ngFor=\"let mes of feedback.messages\" class=\"message {{getfeedbackColor(mes)}}\"   >\n      <span class=\"message-text\" >{{mes.text}}</span>\n      <span class=\"message-id d-inline float-right\">\n        {{mes.id}}\n        <span *ngFor=\"let ruleset of mes.rulesets\">\n          <a [hidden]=\"ruleset.src==null\" href=\"{{ruleset.src}}\" target=\"_blank\" title=\"Open guidance in a new window\">(see guidance)</a>\n        </span>\n      </span>\n      <ul [hidden]=\"mes.context.length===1 && mes.context[0].text===''\">\n        <li *ngFor=\"let con of mes.context\" class=\"context\">{{con.text}}</li>\n      </ul>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Feedback, Message } from '../shared/feedback';\n\n@Component({\n  selector: 'app-feedback-item',\n  templateUrl: './feedback-item.component.html',\n  styleUrls: ['./feedback-item.component.scss']\n})\nexport class FeedbackItemComponent implements OnInit {\n  @Input() feedback: Feedback;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.sortData();\n  }\n\n  sortData = () =>  {\n    // Sort the messages based on severity\n    this.feedback.messages.sort(this.compareSeverity);\n  };\n\n  compareSeverity = (a: Message, b: Message) => this.getSeverity(a) - this.getSeverity(b);\n\n  getSeverity = (message: Message) => {\n    if (message.rulesets.some(x => x.severity === 'critical')) {\n      return 1;\n    } else if (message.rulesets.some(x => x.severity === 'danger')) {\n      return 2;\n    } else if (message.rulesets.some(x => x.severity === 'warning')) {\n      return 2;\n    } else if (message.rulesets.some(x => x.severity === 'info')) {\n      return 3;\n    } else if (message.rulesets.some(x => x.severity === 'success')) {\n      return 4;\n    } else {\n      return 9;\n    }\n  };\n\n  getfeedbackColor(message: Message): string {\n    if (message.rulesets.some(x => x.severity === 'danger')) {\n      return 'error';\n    } else if (message.rulesets.some(x => x.severity === 'critical')) {\n      return 'critical';\n    } else if (message.rulesets.some(x => x.severity === 'warning')) {\n      return 'warning';\n    } else if (message.rulesets.some(x => x.severity === 'info')) {\n      return 'improvement';\n    } else if (message.rulesets.some(x => x.severity === 'success')) {\n      return 'notification';\n    } else {\n      return 'other';\n    }\n\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Severity } from '../shared/severity';\n\n@Component({\n  selector: 'app-filter-severity-item',\n  templateUrl: './filter-severity-item.component.html',\n  styleUrls: ['./filter-severity-item.component.scss']\n})\nexport class FilterSeverityItemComponent implements OnInit {\n  @Input() severity: Severity;\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  isCollapsed = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    // this.severity.types.sort( (a, b) =>  b.count - a.count );\n  }\n\n  collapse() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n  allSelected(): boolean {\n    return this.severity.types.every(x => x.show === true);\n  }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.severity.types.forEach(x => x.show = true);\n    this.selectionChanged();\n  }\n\n  unSelectAll(): void {\n    this.severity.types.forEach(x => x.show = false);\n    this.selectionChanged();\n  }\n\n  totalTypes(): number {\n    return this.severity.types.length;\n  }\n\n  totalTypesSelected(): number {\n    let count = 0;\n\n    this.severity.types.forEach(x => {\n      if (x.show === true) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n\n}\n","<li class=\"list-group-item\" [className]=\"'list-group-item ' + severity.id\" [ngClass]=\"{'hidden': severity.types.length===0}\">\n  <div class=\"severity-heading row\">\n    <div class=\"col title-col\" (click)=\"collapse()\">\n      <span ngClass=\"{'unselected':!severity.show}\"> {{ severity.name }}: {{ severity.types.length }} types</span>\n      <span *ngIf=\"!allSelected()\" class=\"badge badge-light text-danger float-right messages-selected-count\"> ({{ totalTypesSelected() }} of {{ totalTypes() }} messages selected.) </span>\n      <!-- <span class=\"select\">\n        <app-checkbox [(checked)]=\"severity.show\" [name]=\"'filterSev' + severity.name\" (checkedChange)=\"selectionChanged()\"></app-checkbox>\n      </span> -->\n    </div>\n\n    <div class=\"col-auto collapse-col\">\n        <app-checkbox [(checked)]=\"severity.show\" [name]=\"'filterSrc' + severity.name\" (checkedChange)=\"selectionChanged()\"></app-checkbox>\n      <button type=\"button\" class=\"btn btn-outline-light collapser\" (click)=\"collapse()\">\n        <span *ngIf=\"!isCollapsed\"><img src=\"assets/icons/arrow_down_24_white.svg\" alt=\"icon arrow down\"></span>\n        <span *ngIf=\"isCollapsed\"><img src=\"assets/icons/arrow_up_24_white.svg\" alt=\"icon arrow up\"></span>\n      </button>\n    </div>\n  </div>\n</li>\n\n\n<div class=\"type-messages\" [ngbCollapse]=\"isCollapsed\">\n  <li *ngIf=\"severity.types.length!==0\" class=\"list-group-item filter-row\">\n    {{ severity.description }}\n    <span *ngIf=\"allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"unSelectAll()\">Unselect all</button></span>\n    <span *ngIf=\"!allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"selectAll()\">Select all</button></span>\n  </li>\n  <app-filter-type-message *ngFor=\"let mes of severity.types\" [typeMessage]=\"mes\" (selectedChanged)=\"selectionChanged()\"></app-filter-type-message>\n</div>\n","<p>\n  <span *ngIf=\"validationReport.report.iatiVersion\"\n    >IATI version: {{ validationReport.report.iatiVersion }}</span\n  >\n  <span *ngIf=\"validationReport.report.fileType\">\n    | Type: {{ validationReport.report.fileType }}</span\n  >\n  <span *ngIf=\"documentInfo.validation_created\">\n    | Report Generated:\n    {{ documentInfo.validation_created | date: \"yyyy-MM-dd HH:mm (z)\" }}</span\n  >\n</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Dqfs } from '../shared/feedback';\n\n@Component({\n  selector: 'app-iati-info',\n  templateUrl: './iati-info.component.html',\n  styleUrls: ['./iati-info.component.scss']\n})\nexport class IatiInfoComponent implements OnInit {\n  @Input() validationReport = {} as any;\n  @Input() documentInfo = {} as any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  fileName(): string {\n    if ('url' in this.documentInfo) {\n      return this.documentInfo.url.split('/').pop();\n    } else {\n      return 'No filename available';\n    }\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent implements OnInit {\n  @Input() checked = false;\n  @Output() checkedChange: EventEmitter<boolean> = new EventEmitter();\n  // unique name is necessary for the input control\n  @Input() name = '';\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  checkedChanged() {\n    this.checkedChange.emit(this.checked);\n  }\n\n}\n","<div class=\"custom-control custom-checkbox d-inline\">\n  <input [(ngModel)]=\"checked\" (change)=\"checkedChanged()\" type=\"checkbox\" class=\"custom-control-input\" [attr.id]=\"name\" [attr.name]=\"name\">\n  <label class=\"custom-control-label\" [attr.for]=\"name\"><ng-content></ng-content></label>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { TypeMessage } from './../shared/type-message';\nimport { TypeSeverity } from './../shared/type-severity';\n\n@Component({\n  selector: 'app-filter-type-severity',\n  templateUrl: './filter-type-severity.component.html',\n  styleUrls: ['./filter-type-severity.component.scss']\n})\nexport class FilterTypeSeverityComponent implements OnInit {\n  @Input() type: TypeSeverity;\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  isCollapsed = true;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.type.types.sort( (a, b) =>  b.count - a.count );\n  }\n\n  collapse() {\n    this.isCollapsed = ! this.isCollapsed;\n  }\n\n  allSelected(): boolean {\n    return this.type.types.every(x => x.show === true);\n }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.type.types.forEach(x => x.show = true);\n    this.selectionChanged();\n  }\n}\n","<li class=\"list-group-item\" [className]=\"'list-group-item ' + type.severity\" [ngClass]=\"{'hidden': type.types.length===0}\">\n  <div class=\"type-heading row\">\n    <div class=\"col title-col\" (click)=\"collapse()\">\n      <span class=\"severity-count\">{{type.count}}</span>\n      <span [ngClass]=\"{'unselected': !type.show}\">{{ type.severity }}</span>\n    </div>\n    <div class=\"col-auto collapse-col\">\n      <button type=\"button\" class=\"btn btn-outline-light collapser\" (click)=\"collapse()\">\n        <span *ngIf=\"!isCollapsed\">-</span>\n        <span *ngIf=\"isCollapsed\">+</span>\n      </button>\n    </div>\n  </div>\n</li>\n\n<div class=\"type-messages\" [ngbCollapse]=\"isCollapsed\">\n  <app-filter-type-message *ngFor=\"let mes of type.types\" [typeMessage]=\"mes\" (selectedChanged)=\"selectionChanged()\"></app-filter-type-message>\n</div>\n","<h3><a [routerLink]=\"['/organisation', organisationInfo.name]\" >{{ organisationInfo.title }}</a> - <a *ngIf=\"documentInfo.url\" href=\"{{ documentInfo.url }}\">{{ fileName() }}</a></h3>\n","import { ReportInfo } from './../shared/report-info';\nimport { Component, OnInit, Input } from '@angular/core';\n\nimport { LogService } from './../../../core/logging/log.service';\nimport { DataQualityFeedbackService } from './../shared/data-quality-feedback.service';\n\n@Component({\n  selector: 'app-main-report-info',\n  templateUrl: './main-report-info.component.html',\n  styleUrls: ['./main-report-info.component.scss']\n})\nexport class MainReportInfoComponent implements OnInit {\n  @Input() documentInfo = {} as any;\n  @Input() organisationInfo = {} as any;\n\n  constructor(private logger: LogService) { }\n\n  ngOnInit() {\n  }\n\n  fileName(): string {\n    if ('url' in this.documentInfo) {\n      return this.documentInfo.url.split('/').pop();\n    } else {\n      return 'No filename available';\n    }\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"content-block\" *ngIf=\"tmpWorkspaceId\">\n    <a [routerLink]=\"['/validate', tmpWorkspaceId]\" >&lt;&lt; Return to your workspace</a>\n  </div>\n  <div class=\"row alert alert-light\">\n    <div class=\"col\">\n      <h1>File validation report</h1>\n      <app-main-report-info *ngIf=\"documentInfo && organisationInfo\" [documentInfo]=\"documentInfo\" [organisationInfo]=\"organisationInfo\"></app-main-report-info>\n      <app-iati-info *ngIf=\"documentInfo && validationReport\" [documentInfo]=\"documentInfo\" [validationReport]=\"validationReport\"></app-iati-info>\n    </div>\n  </div>\n\n  <div *ngIf=\"isLoading\" class=\"alert alert-info\" role=\"alert\">\n    <app-spinner [backColor]=\"'white'\"></app-spinner>\n    <span class=\"loading-text\">Loading report...</span>\n  </div>\n  <div *ngIf=\"activityData===undefined && companyFeedbackData===undefined && !isLoading \" class=\"alert alert-warning\"\n    role=\"alert\">\n    <h2>No data found.</h2>\n    <p>It looks like the url is not valid.</p>\n    <ul>\n      <li (click)=\"goBack()\">\n        <button type=\"button\" class=\"btn btn-link\">Go back to the previous page.</button>\n      </li>\n      <li>\n        <button routerLink=\"\\\" type=\"button\" class=\"btn btn-link\">Go to the home page.</button>\n      </li>\n    </ul>\n  </div>\n\n  <div *ngIf=\"(activityData!==undefined || companyFeedbackData!==undefined) && !isLoading\" class=\"row\">\n    <div class=\"col-md-4 filters\">\n      <h4>Filters</h4>\n      <app-filter-severity [severities]=\"severities\" (selectedChanged)=\"severitySelectedChanged()\">\n      </app-filter-severity>\n      <!-- <app-filter-source [sources]=\"sources\" (selectedChanged)=\"sourceSelectedChanged()\"></app-filter-source> -->\n      <app-filter-category [categories]=\"categories\" (selectedChanged)=\"categorySelectedChanged()\">\n      </app-filter-category>\n    </div>\n    <div class=\"col-md-8 results\">\n      <h4>Feedback</h4>\n      <div *ngIf=\"companyFeedback\">\n        <!-- Determine which components to display -->\n        <div *ngIf=\"filetype==='iati-activities'\">\n          <app-single-feedback [feedbackData]=\"companyFeedback\" [title]=\"'Activity file feedback'\" [item]=\"'activity'\" [items]=\"'activities'\"></app-single-feedback>\n          <app-multi-feedback [activityData]=\"activities\" [title]=\"'Feedback per activity'\" [item]=\"'activity'\" [items]=\"'activities'\" [dqfs]=\"data\"></app-multi-feedback>\n        </div>\n\n      </div>\n      <div *ngIf=\"filetype==='iati-organisations'\">\n        <app-single-feedback [feedbackData]=\"companyFeedback\" [title]=\"'Organisation file feedback'\" [item]=\"'organisation'\" [items]=\"'organisations'\" ></app-single-feedback>\n        <app-multi-feedback [activityData]=\"activities\" [title]=\"'Organisation feedback'\" [item]=\"'organisation'\" [items]=\"'organisations'\" [dqfs]=\"data\"></app-multi-feedback>\n      </div>\n      <div *ngIf=\"filetype==='not-iati'\">\n        <app-single-feedback [feedbackData]=\"companyFeedbackData\" [title]=\"'Not an IATI file'\"></app-single-feedback>\n      </div>\n\n\n    </div>\n  </div>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { LoaderService } from '../../../core/loader/loader.service';\nimport { OrganisationService } from '../../../organisation/shared/organisation.service';\nimport { ValidatedIatiService } from '../../../validate-iati/shared/validated-iati.service';\nimport { Activity, Dqfs, Feedback, Message, Ruleset } from '../shared/feedback';\nimport { Document } from 'src/app/shared/document';\nimport { Severity } from '../shared/severity';\nimport { LoaderState } from './../../../core/loader/loader';\nimport { LogService } from './../../../core/logging/log.service';\nimport { Category } from './../shared/category';\nimport { DataQualityFeedbackService } from './../shared/data-quality-feedback.service';\nimport { Source } from './../shared/source';\nimport { Organisation } from 'src/app/shared/organisation';\n\n\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit, OnDestroy {\n  dataset = null;\n  isLoading = false;\n  data: Dqfs = {} as Dqfs;\n  fileName = '';\n  isTestfiles = false;\n  tmpWorkspaceId = '';\n  activityData: Activity[] = [];\n  activities: Activity[] = [];\n  companyFeedbackData: Feedback[] = [];\n  companyFeedback: Feedback[] = [];\n  severities: Severity[] = [];\n  sources: Source[] = [];\n  categories: Category[] = [];\n\n  documentInfo: Document;\n  organisationInfo: Organisation;\n  validationReport: any;\n\n  public dqfs: Dqfs | undefined;\n  public filetype = '';\n  private loaderSubscription: Subscription | undefined;\n  private paramsSubscription: Subscription | undefined;\n  private qParamsSubscription: Subscription | undefined;\n\n  constructor(private dataQualityFeedbackService: DataQualityFeedbackService,\n    private validatedIatiService: ValidatedIatiService,\n    private organisationService: OrganisationService,\n    private logger: LogService,\n    private activateRoute: ActivatedRoute,\n    private loader: LoaderService,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n    this.loaderSubscription = this.loader.loaderState\n      .subscribe((state: LoaderState) => {\n        this.isLoading = state.show;\n      });\n    this.severities = this.dataQualityFeedbackService.getSeverities();\n    this.sources = this.dataQualityFeedbackService.getSources();\n\n    this.paramsSubscription = this.activateRoute\n      .params\n      .subscribe(params => {\n        this.qParamsSubscription = this.activateRoute.queryParams.subscribe(\n          qParams => {\n            this.isTestfiles = qParams.isTestfiles;\n\n            if (qParams.isTestfiles) {\n              this.validatedIatiService.getIatiDatasetById(params['id']).subscribe(iatiTestDataSet => {\n\n                const theFileId = iatiTestDataSet.fileid.split('.').shift();\n                this.fileName = iatiTestDataSet.filename;\n                this.tmpWorkspaceId = iatiTestDataSet.tmpworkspaceId;\n                this.loadData(theFileId as string, qParams.isTestfiles);\n              });\n            } else {\n              this.loadData(params['id'], qParams.isTestfiles);\n            }\n          }\n        );\n      });\n  }\n\n  ngOnDestroy() {\n    this.loaderSubscription?.unsubscribe();\n    if (this.paramsSubscription) {\n      this.paramsSubscription.unsubscribe();\n\n    }\n    if (this.qParamsSubscription) {\n      this.qParamsSubscription.unsubscribe();\n\n    }\n  }\n\n  loadData(id: string, isTestfiles: boolean) {\n    this.loader.show();\n\n    if (isTestfiles) {\n      this.dataQualityFeedbackService.getTestFilesDataQualityFeedbackById(id).subscribe(data => {\n        this.dataset = data as any;\n          if (this.dataset) {\n            (this.dataset as any)['filename'] = this.fileName;\n          }\n          this.setData(data);\n        },\n        error => {\n          this.logger.error('Error loadActivityData', error);\n          this.loader.hide();\n        }\n      );\n    } else {\n      this.organisationService.getDocument(id).subscribe(documentInfo => {\n        if (documentInfo) {\n          this.documentInfo = documentInfo[0];\n          this.organisationService.getOrganisationById(this.documentInfo.publisher).subscribe(orgInfo => {\n            if (orgInfo) {\n              this.organisationInfo = orgInfo[0];\n              this.dataQualityFeedbackService.getValidationReport(id).subscribe(validationInfo => {\n                if (validationInfo) {\n                  this.validationReport = validationInfo;\n                }\n                this.loader.hide();\n              });\n            }\n          });\n        }\n        // if (iatiDataSet && iatiDataSet.length) {\n        //   this.dataset = iatiDataSet[0];\n        //   this.dataQualityFeedbackService.getDataQualityFeedback(iatiDataSet[0].md5).subscribe(\n        //     data => {\n        //       this.setData(data);\n        //     },\n        //     error => {\n        //       this.logger.error('Error loadActivityData', error);\n        //       this.loader.hide();\n        //     }\n        //   );\n        // } else {\n        //   // FIXME: check if there's a better handle for a \"no dataset\" situation\n        //   this.activityData = undefined;\n        //   this.companyFeedbackData = undefined;\n        //   this.loader.hide();\n\n        // }\n      });\n    }\n  }\n\n  setData(data: any) {\n    this.data = data;\n    this.fileName = this.dataset.filename;\n    if (data.feedback) {\n      this.companyFeedbackData = data.feedback;\n    }\n\n    this.filetype = data.filetype;\n    if (data.filetype === 'iati-activities') {\n      if (data.activities) {\n        this.activityData = data.activities;\n      }\n    }\n\n    if (data.filetype === 'iati-organisations') {\n      if (data.organisations) {\n        this.activityData = data.organisations;\n      }\n    }\n\n    if (this.activityData === undefined && this.companyFeedbackData === undefined) {\n      this.loader.hide();\n      return;\n    }\n    this.loadCategories();\n    this.loadTypeMessages(this.activityData, this.companyFeedbackData);\n    this.filterActivities();\n\n    this.loader.hide();\n  }\n\n  loadCategories() {\n\n    const uniqueCat: { id: string; name: string }[] = [];\n\n    this.activityData.forEach(act => {\n      act.feedback.forEach(fb => {\n        if (uniqueCat.some(u => u.id === fb.category)) {\n          // nothing\n        } else {\n          uniqueCat.push({ id: fb.category, name: fb.label });\n        }\n      });\n    });\n\n    this.companyFeedbackData.forEach(element => {\n      if (uniqueCat.some(u => u.id === element.category)) {\n        // nothing\n      } else {\n        uniqueCat.push({ id: element.category, name: element.label });\n      }\n    });\n\n\n\n    uniqueCat.forEach(u => {\n      this.categories.push({ id: u.id, name: u.name, count: null, order: 0, show: true });\n    });\n  }\n\n  loadTypeMessages(activities: Activity[], inCompanyFeedback: Feedback[]) {\n    const types: { sev: string; id: string; text: string }[] = [];\n    // Get unique messages, with the highest level of severity\n    activities.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages.forEach(mes => {\n          if (!types.some(t => t.id === mes.id)) {\n            const newType: { sev: string; id: string; text: string } = { sev: '', id: '', text: '' };\n            newType.sev = this.getfeedbackSeverity(mes);\n            newType.id = mes.id;\n            newType.text = mes.text;\n            types.push(newType);\n          }\n        });\n      });\n    });\n\n    inCompanyFeedback.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (!types.some(t => t.id === mes.id)) {\n          const newType: { sev: string; id: string; text: string } = { sev: '', id: '', text: '' };\n          newType.sev = this.getfeedbackSeverity(mes);\n          newType.id = mes.id;\n          newType.text = mes.text;\n          types.push(newType);\n        }\n      });\n    });\n\n    // push the messages in the severity it belongs to\n    types.forEach(t => {\n      const sev = this.severities.find(s => s.id === t.sev);\n      if (sev !== undefined) {\n        sev.types.push({ id: t.id, text: t.text, show: true });\n      }\n\n    });\n\n  }\n\n  filterActivities() {\n    this.loader.show();\n    let filtered = JSON.parse(JSON.stringify(this.activityData));\n\n    this.filterCompanyFeedback();\n\n    // Filter feedback category\n    filtered.forEach(act => {\n      act.feedback = act.feedback.filter(this.filterCategory);\n    });\n\n    // Filter messages that are not selected in source\n    filtered.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages.forEach(mes => {\n          mes.rulesets = mes.rulesets.filter(this.filterSource);\n        });\n      });\n    });\n\n    // Filter type messages selected\n    filtered.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages = fb.messages.filter(this.filterTypeMessage);\n      });\n    });\n\n    // Filter messages with severity selected\n    filtered.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages = fb.messages.filter(this.filterSeverity);\n      });\n    });\n\n    // Filter feedback whitout messages\n    filtered.forEach(act => {\n      act.feedback = act.feedback.filter(fb => fb.messages.length > 0);\n    });\n\n    // Filter activities without feedback\n    filtered = filtered.filter(act => act.feedback.length > 0);\n\n    this.activities = filtered;\n    // set count on filter items\n    this.setSeverityCount();\n    this.setSourceCount();\n    this.setCategoryCount();\n    // this.loadTypeMessages(this.activities);\n    this.setTypeMessageCount();\n    this.loader.hide();\n  }\n\n  filterCompanyFeedback() {\n    let filteredFeedback = JSON.parse(JSON.stringify(this.companyFeedbackData));\n\n    // Filter feedback category\n    filteredFeedback = filteredFeedback.filter(this.filterCategory);\n\n    // Filter messages that are not selected in source\n    filteredFeedback.forEach(fb => {\n      fb.messages.forEach(mes => {\n        mes.rulesets = mes.rulesets.filter(this.filterSource);\n      });\n    });\n\n    // Filter type messages selected\n    filteredFeedback.forEach(fb => {\n      fb.messages = fb.messages.filter(this.filterTypeMessage);\n    });\n\n    // Filter messages with severity selected\n    filteredFeedback.forEach(fb => {\n      fb.messages = fb.messages.filter(this.filterSeverity);\n    });\n\n    // Filter feedback without messages\n    filteredFeedback = filteredFeedback.filter(fb => fb.messages.length > 0);\n\n    // Filter activities without feedback\n    this.companyFeedback = filteredFeedback;\n  }\n\n  filterSeverity = (message: Message) =>\n    message.rulesets.some(rs => this.severities.some(sev => sev.show === true && sev.slug === rs.severity));\n\n  filterSource = (ruleset: Ruleset) => this.sources.some(s => s.show === true && s.slug === ruleset.src);\n\n  filterCategory = (feedback: Feedback) => this.categories.some(c => c.show === true && c.id === feedback.category);\n\n  filterTypeMessage = (message: Message) =>\n    // return this.typeMessages.some(t => t.types.some(m => m.show === true && m.id === message.id ) );\n    this.severities.some(t => t.types.some(m => m.show === true && m.id === message.id))\n  ;\n\n  // Set the count of messages to the severity\n  setSeverityCount() {\n    this.severities.forEach(sev => {\n      sev.count = sev.show ? this.getIssueCount(sev.slug) : null;\n    });\n  }\n\n  getIssueCount(severity): number {\n    let count = 0;\n    this.activities.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages.forEach(mes => {\n          if (mes.rulesets.some(r => r.severity === severity)) {\n            count += mes.context.length;\n          }\n        });\n      });\n    });\n\n    this.companyFeedbackData.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (mes.rulesets.some(r => r.severity === severity)) {\n          count += mes.context.length;\n        }\n      });\n    });\n    return count;\n  }\n\n  // Set the count of messages to the sources\n  setSourceCount() {\n    this.sources.forEach(src => {\n      src.count = src.show ? this.getSourceCount(src.slug) : null;\n    });\n  }\n\n  getSourceCount(type): number {\n    let count = 0;\n    this.activities.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages.forEach(mes => {\n          if (mes.rulesets.some(r => r.src === type)) {\n            count += mes.context.length;\n          }\n        });\n      });\n    });\n    this.companyFeedbackData.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (mes.rulesets.some(r => r.src === type)) {\n          count += mes.context.length;\n        }\n      });\n    });\n    return count;\n  }\n\n  setCategoryCount() {\n    this.categories.forEach(cat => {\n      cat.count = cat.show ? this.getCategoryCount(cat.id) : null;\n    });\n  }\n\n  getCategoryCount(id: string): number {\n    let count = 0;\n    this.activities.forEach(act => {\n      act.feedback.forEach(fb => {\n        if (fb.category === id) {\n          fb.messages.forEach(mes => {\n            count += mes.context.length;\n          });\n        }\n      });\n    });\n\n    this.companyFeedbackData.forEach(fb => {\n      if (fb.category === id) {\n        fb.messages.forEach(mes => {\n          count += mes.context.length;\n        });\n      }\n    });\n    return count;\n  }\n\n  // Set the count of the type-messages and sort types by count desc\n  setTypeMessageCount() {\n    this.severities.forEach(t => {\n      t.types.forEach(m => {\n        m.count = m.show ? this.getTypeMessageCount(m.id) : null;\n      });\n    });\n    // Sort Type messages inside severity. Type with more messages on top\n    this.severities.forEach(s => {\n      s.types.sort((a, b) => b.count - a.count);\n    });\n  }\n\n  getTypeMessageCount(typeId: string): number {\n    let count = 0;\n    this.activities.forEach(act => {\n      act.feedback.forEach(fb => {\n        fb.messages.forEach(mes => {\n          if (mes.id === typeId) {\n            count += mes.context.length;\n          }\n        });\n      });\n    });\n\n    this.companyFeedbackData.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (mes.id === typeId) {\n          count += mes.context.length;\n        }\n      });\n    });\n    return count;\n  }\n\n  severitySelectedChanged() {\n    this.filterActivities();\n  }\n\n  sourceSelectedChanged() {\n    this.filterActivities();\n  }\n\n  categorySelectedChanged() {\n    this.filterActivities();\n  }\n\n  typesSelectedChanged() {\n    this.filterActivities();\n  }\n\n  getfeedbackSeverity(message: Message): string {\n    if (message.rulesets.some(x => x.severity === 'danger')) {\n      return 'error';\n    } else if (message.rulesets.some(x => x.severity === 'critical')) {\n      return 'critical';\n    } else if (message.rulesets.some(x => x.severity === 'warning')) {\n      return 'warning';\n    } else if (message.rulesets.some(x => x.severity === 'info')) {\n      return 'improvement';\n    } else if (message.rulesets.some(x => x.severity === 'success')) {\n      return 'notification';\n    } else {\n      return 'other';\n    }\n\n  }\n\n  // addCountContextFunctions() {\n  //   this.dqfs.activities.forEach( act => {\n  //     act.feedback.forEach(fb => {\n\n  //       fb.countContext = function () {\n  //         let count = 0;\n  //         fb.messages.forEach( mes => {\n  //           count += mes.countContext();\n  //         });\n  //         return count;\n  //        } ;\n\n  //       fb.messages.forEach(mes => {\n  //         mes.countContext = function () { return mes.context.length; };\n  //       });\n  //     });\n  //   });\n  // }\n\n  goBack() {\n    this.location.back();\n  }\n\n\n}\n","<div class=\"xml-feedback\">\n\n<div class=\"feedback-heading row\">\n        <div class=\"col title-col\" (click)=\"collapse()\">\n          <h5 class=\"feedback-single-title title d-inline\" >{{title}}</h5>\n          <div class=\"d-inline float-right\" *ngIf=\"feedbackData.length>0\">\n            <!-- <span class=\"identifier-link\"><a href=\"{{getLinkDportal(activity.publisher, cleanIdentifier(activity.identifier))}}\" target=\"_blank\" >{{ cleanIdentifier(activity.identifier)}}</a></span> -->\n            <span class=\"badge badge-critical\" *ngIf=\"getIssueCount('critical')>0\">{{getIssueCount('critical')}}</span>\n            <span class=\"badge badge-danger\" *ngIf=\"getIssueCount('danger')>0\">{{getIssueCount('danger')}}</span>\n            <span class=\"badge badge-warning\" *ngIf=\"getIssueCount('warning')>0\">{{getIssueCount('warning')}}</span>\n            <span class=\"badge badge-info\" *ngIf=\"getIssueCount('info')>0\">{{getIssueCount('info')}}</span>\n            <span class=\"badge badge-success\" *ngIf=\"getIssueCount('success')>0\">{{getIssueCount('success')}}</span>\n          </div>\n        </div>\n        <div class=\"col-auto collapse-col\" (click)=\"collapse()\">\n            <button type=\"button\" class=\"btn btn-outline-secondary collapser\" >\n              <span *ngIf=\"!isCollapsed\"><img src=\"assets/icons/arrow_down_24.svg\" alt=\"icon arrow down\"></span>\n              <span *ngIf=\"isCollapsed\" > <img src=\"assets/icons/arrow_up_24.svg\" alt=\"icon arrow up\"> </span>\n            </button>\n        </div>\n    \n      </div>\n      <div class=\"feedback-items\" [ngbCollapse]=\"isCollapsed\" *ngIf=\"feedbackData.length>0;else noFeedbackData\">\n        <app-feedback-item *ngFor=\"let fb of feedbackData\" [feedback]=\"fb\"></app-feedback-item>\n      </div>\n      </div>\n\n      <ng-template #noFeedbackData>\n        <p>There is no {{item}} file feedback to display</p>\n      </ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Feedback, Dqfs } from '../shared/feedback';\n\n@Component({\n  selector: 'app-single-feedback',\n  templateUrl: './single-feedback.component.html',\n  styleUrls: ['./single-feedback.component.scss']\n})\nexport class SingleFeedbackComponent implements OnInit {\n  @Input() feedbackData: Feedback[] = [];\n  @Input() title = '';\n  @Input() item = 'activity';\n  @Input() items = 'activities';\n  public isCollapsed = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getIssueCount(type: string): number {\n    let count = 0;\n\n    this.feedbackData.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (mes.rulesets.some(r => r.severity === type)) {\n          count += mes.context.length;\n        }\n      });\n    });\n    return count;\n  }\n\n  collapse() {\n    this.isCollapsed = ! this.isCollapsed;\n  }\n}\n","<div class=\"feedback-group\">\n  <div class=\"feedback-heading row\">\n    <div class=\"col title-col\" (click)=\"collapse()\">\n      <div class=\"title-col__title-label\">{{item | titlecase}} title</div>\n      <h5 class=\"feedback-group-title title d-inline\" >{{ activity.title }}</h5>\n      <div class=\"d-inline float-right\">\n        <span class=\"identifier-link\"><a href=\"{{getLinkDportal(activity.publisher, cleanIdentifier(activity.identifier))}}\"\n          title=\"Open this {{item}} in d-portal\" \n          target=\"_blank\" (click)=\"$event.stopPropagation()\">{{ cleanIdentifier(activity.identifier)}}</a></span>\n        <span class=\"badge badge-critical\" *ngIf=\"getIssueCount('critical')>0\">{{getIssueCount('critical')}}</span>\n        <span class=\"badge badge-danger\" *ngIf=\"getIssueCount('danger')>0\">{{getIssueCount('danger')}}</span>\n        <span class=\"badge badge-warning\" *ngIf=\"getIssueCount('warning')>0\">{{getIssueCount('warning')}}</span>\n        <span class=\"badge badge-info\" *ngIf=\"getIssueCount('info')>0\">{{getIssueCount('info')}}</span>\n        <span class=\"badge badge-success\" *ngIf=\"getIssueCount('success')>0\">{{getIssueCount('success')}}</span>\n      </div>\n    </div>\n    <div class=\"col-auto collapse-col\" (click)=\"collapse()\">\n        <button type=\"button\" class=\"btn btn-outline-secondary collapser\" >\n          <span *ngIf=\"!isCollapsed\"><img src=\"assets/icons/arrow_down_24.svg\" alt=\"icon arrow down\"></span>\n          <span *ngIf=\"isCollapsed\" > <img src=\"assets/icons/arrow_up_24.svg\" alt=\"icon arrow up\"> </span>\n        </button>\n    </div>\n\n  </div>\n  <div class=\"feedback-items\" [ngbCollapse]=\"isCollapsed\">\n    <app-feedback-item *ngFor=\"let fb of activity.feedback\" [feedback]=\"fb\" ></app-feedback-item>\n  </div>  \n</div>\n\n\n\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { LogService } from './../../../core/logging/log.service';\nimport { Dqfs, Activity } from './../shared/feedback';\n\n@Component({\n  selector: 'app-feedback-group',\n  templateUrl: './feedback-group.component.html',\n  styleUrls: ['./feedback-group.component.scss']\n})\nexport class FeedbackGroupComponent implements OnInit {\n  @Input() activity: Activity;\n  @Input() item: 'activity' | 'organisation';\n  @Input() items: 'activities' | 'organisations';\n  @Input() dqfs: Dqfs;\n\n  public isCollapsed = false;\n\n  constructor(private logger: LogService) { }\n\n  ngOnInit() {\n  }\n\n  collapse() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n  getLinkDportal(publisher: string, activity: string) {\n    if (this.dqfs && this.dqfs.filetype === 'iati-organisations') {\n      return `http://d-portal.org/ctrack.html?publisher=${encodeURIComponent(publisher)}`;\n    } else {\n      return `http://d-portal.org/ctrack.html?publisher=${encodeURIComponent(publisher)}#view=act&aid=${encodeURIComponent(activity)}`;\n    }\n  }\n\n  getIssueCount(type): number {\n    let count = 0;\n\n    this.activity.feedback.forEach(fb => {\n      fb.messages.forEach(mes => {\n        if (mes.rulesets.some(r => r.severity === type)) {\n          const override = this.overrideGuidanceLink(mes.id);\n\n          if (override != null) {\n            mes.rulesets.forEach(ruleset => {\n              ruleset['href'] = override;\n            });\n          }\n\n          count += mes.context.length;\n        }\n      });\n    });\n    return count;\n  }\n\n  // clean identiefier that contain new line breaks.\n  // Delete the part from and after the line break.\n  cleanIdentifier(identifier: string): string {\n    const newLineFound = identifier.indexOf('\\n');\n    if (newLineFound >= 0) {\n      return identifier.substring(0, newLineFound);\n    } else {\n      return identifier;\n    }\n  }\n\n  // This is a hack to overcome the guidance links being hardcoded into the repos\n  // and then baked into the thousands of reports. Done properly in V2\n  overrideGuidanceLink(code) {\n    const overrides = {\n      '102.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '103.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '106.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-classifications/',\n      '11.1.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '11.1.3': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '11.1.4': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '11.1.5': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '11.2.1': 'https://iatistandard.org/en/guidance/standard-guidance/financial-transactions/',\n      '11.2.2': 'https://iatistandard.org/en/guidance/standard-guidance/financial-transactions/',\n      '11.3.1': 'https://iatistandard.org/en/guidance/standard-guidance/organisation-budgets-spend/',\n      '12.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '12.1.2': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '12.3.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '12.3.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '12.4.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '2.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '2.1.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '2.1.4': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '2.2.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '3.1.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.1.2': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.1.4': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.4.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.4.2': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.4.4': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.6.2': 'https://iatistandard.org/en/guidance/standard-guidance/financial-transactions/',\n      '3.7.1': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '3.7.2': 'https://iatistandard.org/en/guidance/standard-guidance/countries-regions/',\n      '6.1.5': 'https://iatistandard.org/en/guidance/standard-guidance/related-documents/',\n      '6.10.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-participants/',\n      '6.11.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '6.13.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-classifications/',\n      '6.14.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-classifications/',\n      '6.2.1': 'https://iatistandard.org/en/guidance/standard-guidance/activity-dates-status/',\n      '6.2.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '6.6.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '6.7.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-thematic-focus/',\n      '7.5.2': 'https://iatistandard.org/en/guidance/standard-guidance/activity-budgets/',\n      '7.5.3': 'https://iatistandard.org/en/guidance/standard-guidance/activity-budgets/',\n      '8.6.3': 'https://iatistandard.org/en/guidance/standard-guidance/organisation-budgets-spend/'\n    };\n\n    if (code in overrides) {\n      return overrides[code];\n    }\n\n    return null;\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { TypeMessage } from './../shared/type-message';\nimport { TypeSeverity } from './../shared/type-severity';\n\n\n@Component({\n  selector: 'app-filter-type',\n  templateUrl: './filter-type.component.html',\n  styleUrls: ['./filter-type.component.scss']\n})\nexport class FilterTypeComponent implements OnInit {\n  @Input() types: TypeSeverity[] = [];\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  allSelected(): boolean {\n    return this.types.every(x => x.types.every(y => y.show === true) );\n }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.types.forEach(x => x.types.forEach(t => t.show = true ));\n    this.selectionChanged();\n  }\n}\n","<div class=\"filter\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item caption\">\n      <div class=\"title\">Types</div>\n      <span *ngIf=\"allSelected()\" class=\"show-label\">Show/hide</span>\n      <span *ngIf=\"!allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"selectAll()\">Select all</button></span>\n    </li>\n    <app-filter-type-severity *ngFor=\"let item of types\" [type]=\"item\" (selectedChanged)=\"selectionChanged()\"  ></app-filter-type-severity>\n  </ul>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Source } from './../shared/source';\n\n@Component({\n  selector: 'app-filter-source',\n  templateUrl: './filter-source.component.html',\n  styleUrls: ['./filter-source.component.scss']\n})\nexport class FilterSourceComponent implements OnInit {\n  @Input() sources: Source[] = [];\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.sources);\n  }\n\n  allSelected(): boolean {\n    return this.sources.every(x => x.show === true);\n }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.sources.forEach(x => x.show = true);\n    this.selectionChanged();\n  }\n\n}\n","<div class=\"filter\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item caption\">\n      <div class=\"title\">Guidelines</div>\n      <span *ngIf=\"!allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"selectAll()\">Select all</button></span>\n    </li>\n    <li *ngFor=\"let cat of sources\" class=\"list-group-item\">\n      <span class=\"severity-count\">{{cat.count}}</span>\n      <span [ngClass]=\"{'unselected': !cat.show }\">{{ cat.name }}</span>\n      <span class=\"select\">\n        <app-checkbox [(checked)]=\"cat.show\" [name]=\"'filterSrc' + cat.name\" (checkedChange)=\"selectionChanged()\"></app-checkbox>\n      </span>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Category } from './../shared/category';\n\n@Component({\n  selector: 'app-filter-category',\n  templateUrl: './filter-category.component.html',\n  styleUrls: ['./filter-category.component.scss']\n})\nexport class FilterCategoryComponent implements OnInit {\n  @Input() categories: Category[] = [];\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  allSelected(): boolean {\n    return this.categories.every(x => x.show === true);\n }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.categories.forEach(x => x.show = true);\n    this.selectionChanged();\n  }\n\n}\n","<div class=\"filter\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item caption\">\n      <div class=\"title\">View by category</div>\n      <span *ngIf=\"!allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"selectAll()\">Select all</button></span>\n    </li>\n    <li *ngFor=\"let cat of categories\" class=\"list-group-item\">\n      <span class=\"severity-count\">{{cat.count}} x</span>\n      <span [ngClass]=\"{'unselected': !cat.show}\">{{ cat.name }}</span>\n      <span class=\"select\">\n        <app-checkbox [(checked)]=\"cat.show\" [name]=\"'filterCat' + cat.name\" (checkedChange)=\"selectionChanged()\"></app-checkbox>\n      </span>\n    </li>\n  </ul>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { GtagModule } from 'angular-gtag';\n\n\nimport { DataQualityFeedbackService } from './shared/data-quality-feedback.service';\nimport { OrganisationService } from 'src/app/organisation/shared/organisation.service';\nimport { MainComponent } from './main/main.component';\nimport { FilterSeverityComponent } from './filter-severity/filter-severity.component';\nimport { FilterSourceComponent } from './filter-source/filter-source.component';\nimport { FilterTypeComponent } from './filter-type/filter-type.component';\nimport { FeedbackGroupComponent } from './feedback-group/feedback-group.component';\nimport { FeedbackItemComponent } from './feedback-item/feedback-item.component';\nimport { CheckboxComponent } from './shared/checkbox/checkbox.component';\nimport { FilterCategoryComponent } from './filter-category/filter-category.component';\nimport { FilterTypeMessageComponent } from './filter-type-message/filter-type-message.component';\nimport { FilterTypeSeverityComponent } from './filter-type-severity/filter-type-severity.component';\nimport { FilterSeverityItemComponent } from './filter-severity-item/filter-severity-item.component';\nimport { MainReportInfoComponent } from './main-report-info/main-report-info.component';\nimport { SharedModule } from './../../shared/shared.module';\nimport { SingleFeedbackComponent } from './single-feedback/single-feedback.component';\nimport { IatiInfoComponent } from './iati-info/iati-info.component';\nimport { ValidateIatiModule } from '../../validate-iati/validate-iati.module';\nimport { MultiFeedbackComponent } from './multi-feedback/multi-feedback.component';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n  { path: 'files/:id', component: MainComponent },\n  { path: '', redirectTo: '/404dqf' , pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    NgbModule,\n    SharedModule,\n    ValidateIatiModule,\n    GtagModule\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: [\n    MainComponent,\n    // AboutComponent,\n    FilterSeverityComponent,\n    FilterSourceComponent,\n    FilterTypeComponent,\n    FeedbackGroupComponent,\n    FeedbackItemComponent,\n    MultiFeedbackComponent,\n    CheckboxComponent,\n    FilterCategoryComponent,\n    FilterTypeMessageComponent,\n    FilterTypeSeverityComponent,\n    FilterSeverityItemComponent,\n    MainReportInfoComponent,\n    SingleFeedbackComponent,\n    IatiInfoComponent],\n    providers: [DataQualityFeedbackService, OrganisationService]\n})\nexport class DataQualityFeedbackModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Severity } from '../shared/severity';\n\n@Component({\n  selector: 'app-filter-severity',\n  templateUrl: './filter-severity.component.html',\n  styleUrls: ['./filter-severity.component.scss']\n})\nexport class FilterSeverityComponent implements OnInit {\n  @Input() severities: Severity[] = [];\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  allSelected(): boolean {\n    return this.severities.every(x => x.show === true);\n  }\n\n  selectionChanged() {\n    this.selectedChanged.emit('');\n  }\n\n  selectAll(): void {\n    this.severities.forEach(x => x.show = true);\n    this.selectionChanged();\n  }\n\n}\n","<div class=\"filter\">\n  <ul class=\"list-group\">\n    <li class=\"list-group-item caption\">\n      <div class=\"title\">View by message type</div>\n      <span  class=\"show-label text-muted\">Click to show or hide individual message types.</span>\n      <!-- <span *ngIf=\"allSelected()\" class=\"show-label\">Show/hide</span>\n      <span *ngIf=\"!allSelected()\" class=\"show-label\"><button type=\"button\" class=\"btn btn-link\" (click)=\"selectAll()\">Select all</button></span> -->\n    </li>\n    <app-filter-severity-item *ngFor=\"let sev of severities\" [severity]=\"sev\" (selectedChanged)=\"selectionChanged()\"></app-filter-severity-item>\n  </ul>\n</div>\n","import { Organisation } from './../../../shared/organisation';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { LogService } from '../../../core/logging/log.service';\nimport { Source } from './source';\nimport { Severity } from './severity';\nimport { Dqfs } from './feedback';\nimport { IatiDataset } from './../../../organisation/shared/iati-dataset';\nimport { ReportInfo } from './report-info';\n\n\n@Injectable()\nexport class DataQualityFeedbackService {\n  private urlApiIatiFile: string = window.__env.apiDataworkBench + '/iati-files';\n  private urlApiIatiTestFile: string = window.__env.apiDataworkBench + '/iati-testfiles';\n  private urlApiIatiDataSet: string = window.__env.apiDataworkBench + '/iati-datasets';\n  private urlApiOrganisation: string = window.__env.apiDataworkBench + '/iati-publishers';\n  private urlApiValidationReport: string = window.__env.validatorServicesUrl + '/pub/validation/existing';\n\n  constructor(private http: HttpClient,\n    private logger: LogService) { }\n\n  getValidationReport(documentId: string): Observable<any> {\n    const url: string = this.urlApiValidationReport + '?id=' + documentId;\n    return this.http.get<any>(url)\n    .pipe(\n      catchError(this.handleError('getValidationReport', undefined) as any)\n    );\n  }\n  getDataQualityFeedback(md5: string): Observable<Dqfs> {\n    const url: string = this.urlApiIatiFile + '/file/json/' + md5 + '.json';\n    //   /iati-files/{container}/download/{file}\n    return this.http.get<any>(url)\n      .pipe(\n        // tap(_ => this.log(`fetched iati file`)),\n        catchError(this.handleError('getIatiFile', undefined) as any)\n      );\n  }\n\n  getTestFilesDataQualityFeedbackById(inId: string): Observable<Dqfs> {\n    const url: string = this.urlApiIatiTestFile + '/file/json/' + inId + '.json';\n    //   /iati-testfiles/{container}/download/{file}\n    return this.http.get<any>(url)\n      .pipe(\n        // tap(_ => this.log(`fetched iati file`)),\n        catchError(this.handleError('getIatiFile', undefined) as any)\n      );\n  }\n\n  getReportInfo(id: string): Observable<ReportInfo> {\n    const reportInfo: ReportInfo = { organisationName: '', fileName: '', organisationSlug: '' };\n\n    const url: string = this.urlApiIatiDataSet + '/findOne/' + '?filter[where][id]=' + id;\n    this.http.get<IatiDataset>(url)\n      .subscribe(\n        (data: any) => {\n          reportInfo.fileName = data.filename;\n          reportInfo.organisationSlug = data.publisher;\n          const urlPublisher: string = this.urlApiOrganisation + '/findOne/' + '?filter[where][slug]=' + data.publisher;\n          this.http.get<Organisation>(urlPublisher)\n            .subscribe(\n              (datas: any) => {\n                reportInfo.organisationName = datas.name;\n                return of(reportInfo);\n              }\n            );\n        }\n      );\n    return of(reportInfo);\n  }\n\n  getSeverities(): Severity[] {\n    return [\n      {\n        id: 'critical',\n        slug: 'critical',\n        name: 'Critical',\n        description: 'Files with critical errors will not be processed by the datastore',\n        count: null,\n        order: 1,\n        show: true,\n        types: []\n      },\n      {\n        id: 'error',\n        slug: 'danger',\n        name: 'Errors',\n        description: 'Errors make it hard or impossible to use the data.',\n        count: null,\n        order: 2,\n        show: true,\n        types: []\n      },\n      {\n        id: 'warning',\n        slug: 'warning',\n        name: 'Warnings',\n        description: 'Warnings indicate where the data can be more valuable.',\n        count: null,\n        order: 3,\n        show: true,\n        types: []\n      },\n      {\n        id: 'improvement',\n        slug: 'info',\n        name: 'Improvements',\n        description: 'Improvements can make the data more useful.',\n        count: null,\n        order: 4,\n        show: true,\n        types: []\n      },\n      {\n        id: 'notification',\n        slug: 'success',\n        name: 'Notifications',\n        description: 'Notifications are for your information.',\n        count: null,\n        order: 5,\n        show: true,\n        types: []\n      },\n    ];\n  }\n\n  getSources(): Source[] {\n    return [\n      { id: 'iati', slug: 'iati', name: 'IATI Standard', count: null, order: 1, show: true },\n      {\n        id: 'minbuza',\n        slug: 'minbuza',\n        name: 'Netherlands: Ministry of Foreign Affairs additional rules',\n        count: null,\n        order: 2,\n        show: true\n      },\n      {\n        id: 'dfid',\n        slug: 'dfid',\n        name: 'UK: Department for International Development (DFID) additional rules',\n        count: null,\n        order: 3,\n        show: true\n      },\n      { id: 'practice', slug: 'practice', name: 'Common practice', count: null, order: 4, show: true },\n      { id: 'iati-doc', slug: 'iati-doc', name: 'IATI Standard (additional)', count: null, order: 5, show: true },\n    ];\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging\n      this.logger.error(error);\n      // console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nimport { TypeMessage } from './../shared/type-message';\nimport { TypeSeverity } from './../shared/type-severity';\n\n@Component({\n  selector: 'app-filter-type-message',\n  templateUrl: './filter-type-message.component.html',\n  styleUrls: ['./filter-type-message.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilterTypeMessageComponent implements OnInit {\n  @Input() typeMessage: TypeMessage;\n  @Output() selectedChanged = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  selectionChanged() {\n    console.log('typeMessage: ', this.typeMessage);\n    this.selectedChanged.emit('');\n  }\n\n}\n","<li *ngIf=\"typeMessage\" class=\"list-group-item\">\n  <span class=\"severity-count\">{{typeMessage.count}} x</span>\n  <span [ngClass]=\"{'unselected': !typeMessage?.show}\">{{ typeMessage.text}}</span>\n  <span class=\"select\">\n    <app-checkbox [(checked)]=\"typeMessage.show\" [name]=\"'filterTypeMsg' + typeMessage.text + typeMessage.id\" (checkedChange)=\"selectionChanged()\"></app-checkbox>\n  </span>\n</li>\n","import { Component, Input, QueryList, ViewChildren } from '@angular/core';\nimport { FeedbackGroupComponent } from '../feedback-group/feedback-group.component';\nimport { Activity, Dqfs } from '../shared/feedback';\n\n\n@Component({\n  selector: 'app-multi-feedback',\n  templateUrl: './multi-feedback.component.html',\n  styleUrls: ['./multi-feedback.component.scss']\n})\nexport class MultiFeedbackComponent {\n  @Input() activityData: Activity[] = [];\n  @Input() title = '';\n  @Input() item: 'activity' | 'organisation' = 'activity';\n  @Input() items: 'activities' | 'organisations' = 'activities';\n  @Input() dqfs: Dqfs | undefined; // TODO: verify undefined type\n  @ViewChildren(FeedbackGroupComponent) groups: QueryList<FeedbackGroupComponent> | undefined; // TODO: verify undefined type\n  isCollapsed = false;\n\n  constructor() { }\n\n  toggleCollapse() {\n    this.isCollapsed = !this.isCollapsed;\n    this.groups?.forEach(x => x.isCollapsed = this.isCollapsed);\n  }\n}\n","<div class=\"feedback\">\n    <h5 class=\"title feedback-title\">\n        {{title}}\n        <span class=\"toggle-collapse\">\n            <button type=\"button\" class=\"btn btn-link\" (click)=\"toggleCollapse()\">\n                Collapse/expand all {{items}}\n            </button>\n        </span>\n    </h5>\n    <div *ngIf=\"activityData.length>0; else noActivityData\">\n        <app-feedback-group *ngFor=\"let act of activityData\" [activity]=\"act\" [item]=\"item\" [items]=\"items\" [dqfs]=\"dqfs\"></app-feedback-group>\n    </div>\n</div>\n\n<ng-template #noActivityData>\n    <p>There is no feedback to display</p>\n</ng-template>\n"],"sourceRoot":"webpack:///"}