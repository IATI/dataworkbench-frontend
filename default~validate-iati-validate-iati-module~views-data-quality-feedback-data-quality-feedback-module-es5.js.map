{"version":3,"sources":["webpack:///src/app/validate-iati/validate-result/validate-result.component.ts","webpack:///src/app/validate-iati/validate-result/validate-result.component.html","webpack:///src/app/validate-iati/upload-urls/upload-urls.component.ts","webpack:///src/app/validate-iati/upload-urls/upload-urls.component.html","webpack:///src/app/validate-iati/validate/validate.component.html","webpack:///src/app/validate-iati/validate/validate.component.ts","webpack:///src/app/validate-iati/shared/file-upload.service.ts","webpack:///src/app/validate-iati/upload-file/upload-file.component.ts","webpack:///src/app/validate-iati/upload-file/upload-file.component.html","webpack:///src/app/validate-iati/shared/validated-iati.service.ts","webpack:///src/app/validate-iati/validate-iati.ts","webpack:///src/app/validate-iati/validate-iati.module.ts","webpack:///src/app/validate-iati/shared/messages.service.ts"],"names":["ValidateResultComponent","activateRoute","router","validatedIatiService","logger","fb","workspaceId","uploadId","currentUrl","iatiDatasetDatas","md5","environmentUrl","window","__env","baseUrl","source","emailMode","newEmail","control","required","email","newForm","group","form","params","subscribe","subscribeTimer","val","loadData","allDataHasJsonUpdated","debug","unsubscribe","getTmpWorkspace","data","value","setValue","datasets","error","length","every","iatiDatasetData","jsonUpdated","inDataset","sourceUrl","dataset","id","navigationExtras","queryParams","isTestfiles","navigate","_","txtArea","document","createElement","url","style","position","top","left","opacity","body","appendChild","select","successful","execCommand","console","log","err","removeChild","valid","sendEmail","reset","tmpWorkspaceId","copyTextToClipboard","addMoreFiles","UploadUrlsComponent","fileUploadService","setActiveMode","clear","urls","incorrectUrls","fileName","activeStep","requestStatus","parseUrl","$event","target","emit","push","serializedUrls","split","map","trim","correctUrls","filter","validateUrl","join","slice","handleError","checkWorkspaceId","response","parallelUpload","step","includes","test","fetchFileByUrl","setUrl","fetchFiles","validateFile","ValidateComponent","mode","both","FileUploadService","http","urlApiFileUpUpload","apiDataworkBench","urlApiUrlsUpload","urlApiTestWorkspace","req","request","pipe","file","uploadData","FormData","append","name","fileUrl","post","JSON","stringify","headers","responseType","UploadFileComponent","selectedFiles","fileUploaded","fetchUrl","event","local","files","Array","prototype","call","uploadFile","ValidatedIatiService","urlApiIatiDataset","urlApiTmpWorkspace","get","undefined","inUploadId","patch","operation","result","Mode","routes","path","component","ValidateIatiModule","forChild","MessagesService","messages","messagesLocal","message","next"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC8BY;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAGA;;;;;;AAAA;;;;;;AAOF;;AACE;;AAAsD;;AAAiC;;AACzF;;;;;;;;AADwD;;AAAA;;;;;;AAGtD;;AAA8B;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAA9B;;;;;;AAAO;;;;;;;;;;;;;;AAnBjB;;AACE;;AACE;;AAAiB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACf;;AACE;;AAGA;;AAGF;;AACA;;AACE;;;;AACF;;AACA;;AACE;;AAGA;;AAGF;;AACA;;AAA8B;;AAAI;;AACpC;;AACF;;AACF;;;;;;;;;;;;AAvB6E;;AAAA;;AAE9D;;AAAA,oHAAqC,UAArC,EAAqC,GAArC;;AAQP;;AAAA;;AAGO;;AAAA,mHAAoC,UAApC,EAAoC,IAApC;;;;;;AA5BjB;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAEA;;AA0BF;;;;;;AA1B4C;;AAAA;;;;;;;;AA8C1C;;AACE;;AACE;;AACF;;AACA;;AACE;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAC1C;;AAMA;;AAKE;;AACF;;AACF;;AACF;;AACF;;;;;;AAhB6B;;AAAA;;AAGrB;;AAAA;;AAOA;;AAAA;;;;;;;;AAQR;;AACE;;AACE;;AACF;;AACE;;AAA0B;;AAAe;;AACzC;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACJ;;;;;;AAP8B;;AAAA;;;;;;;;AAS9B;;AACE;;AACE;;AACF;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;AAMA;;AAKE;;AACF;;AACA;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;AACA;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACJ;;;;;;AA3B6B;;AAAA;;AAGrB;;AAAA;;AAOA;;AAAA;;;;;;;;UD3GCA,uB;AAsBX,yCACmBC,aADnB,EAEmBC,MAFnB,EAGmBC,oBAHnB,EAImBC,MAJnB,EAKmBC,EALnB,EAKkC;AAAA;;AAAA;;AAJf,eAAAJ,aAAA,GAAAA,aAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,oBAAA,GAAAA,oBAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AA1BnB,eAAAC,WAAA,GAAc,EAAd;AACA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,gBAAA,GAAsC,EAAtC;AACA,eAAAC,GAAA,GAAM,EAAN;AACA,eAAAC,cAAA,GAAiBC,MAAM,CAACC,KAAP,CAAaC,OAA9B;AACA,eAAAC,MAAA,GAAS,mDAAM,GAAN,EAAW,IAAX,CAAT;AAGA,eAAAC,SAAA,GAAwC,OAAxC;AAEA,eAAAC,QAAA,GAAW,KAAKZ,EAAL,CAAQa,OAAR,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,KAAjC,CAApB,CAAX;AACA,eAAAC,OAAA,GAAqB,KAAKhB,EAAL,CAAQiB,KAAR,CAAc;AACjCF,iBAAK,EAAE,KAAKH;AADqB,WAAd,CAArB;AAIA,eAAAG,KAAA,GAAQ,KAAKf,EAAL,CAAQa,OAAR,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,KAAjC,CAApB,CAAR;AACA,eAAAG,IAAA,GAAkB,KAAKlB,EAAL,CAAQiB,KAAR,CAAc;AAC9BF,iBAAK,EAAE,KAAKA;AADkB,WAAd,CAAlB;AAYE,eAAKnB,aAAL,CACGuB,MADH,CAEGC,SAFH,CAEa,UAAAD,MAAM,EAAI;AACnB,iBAAI,CAACjB,QAAL,GAAgBiB,MAAM,CAAC,IAAD,CAAtB;AACD,WAJH;AAMA,eAAKE,cAAL,GAAsB,KAAKX,MAAL,CAAYU,SAAZ,CAAsB,UAAAE,GAAG,EAAI;AACjD,iBAAI,CAACC,QAAL;;AAEA,gBAAI,KAAI,CAACC,qBAAL,EAAJ,EAAkC;AAChCzB,oBAAM,CAAC0B,KAAP,CAAa,aAAb;;AACA,mBAAI,CAACJ,cAAL,CAAoBK,WAApB;AACD;AACF,WAPqB,CAAtB;AAQD;;;;wCAEa;AACZ,iBAAKL,cAAL,CAAoBK,WAApB;AACD;;;qCAEU;AAAA;;AACT,iBAAK5B,oBAAL,CAA0B6B,eAA1B,CAA0C,KAAKzB,QAA/C,EACGkB,SADH,CAEI,UAAAQ,IAAI,EAAI;AACN,kBAAI,CAAC,MAAI,CAACb,KAAL,CAAWc,KAAZ,IAAqBD,IAAI,CAACb,KAA9B,EAAqC;AACnC,sBAAI,CAACA,KAAL,CAAWe,QAAX,CAAoBF,IAAI,CAACb,KAAzB;;AACA,sBAAI,CAACJ,SAAL,GAAiB,OAAjB;AACD,eAJK,CAKN;;;AACA,oBAAI,CAACP,gBAAL,GAAwBwB,IAAI,CAACG,QAA7B;AACD,aATL,EAUI,UAAAC,KAAK;AAAA,qBAAI,MAAI,CAACjC,MAAL,CAAYiC,KAAZ,CAAkB,yBAAlB,EAA6CA,KAA7C,CAAJ;AAAA,aAVT;AAYD;;;kDAEoB;AAAA;;AACnB,gBAAI,CAAC,KAAK5B,gBAAL,CAAsB6B,MAA3B,EAAmC;AACjC,qBAAO,KAAP;AACD,aAFD,MAEO;AACL,qBAAO,KAAK7B,gBAAL,CAAsB8B,KAAtB,CAA4B,UAAAC,eAAe;AAAA,uBAAI,MAAI,CAACC,WAAL,CAAiBD,eAAjB,CAAJ;AAAA,eAA3C,CAAP;AACD;AACF;;;sCAEWE,S,EAA0B;AACpC,mBAAO,CAAC,CAACA,SAAS,CAAC,cAAD,CAAlB;AACD;;;uCAEYA,S,EAA0B;AACrC,mBAAO,CAAC,CAACA,SAAS,CAACC,SAAnB;AACD;;;qCAEUC,O,EAAO;AAChB,mBAAO,KAAKH,WAAL,CAAiBG,OAAjB,IAA4B,qCAA5B,GAAoE,GAA3E;AACD;;;mCAEQA,O,EAA0BC,E,EAAY;AAC7C,gBAAI,KAAKJ,WAAL,CAAiBG,OAAjB,CAAJ,EAA+B;AAC7B,kBAAME,gBAAgB,GAAqB;AACzCC,2BAAW,EAAE;AACXC,6BAAW,EAAE;AADF;AAD4B,eAA3C;AAMA,mBAAK9C,MAAL,CAAY+C,QAAZ,CAAqB,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyBJ,EAAzB,CAArB,EAAmDC,gBAAnD;AACD;AACF;;;8CAEmBI,C,EAAG;AACrB,gBAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;AACA,gBAAMC,GAAG,GAAG,KAAK3C,cAAL,GAAsB,YAAtB,GAAqC,KAAKJ,QAAtD;AACA4C,mBAAO,CAACN,EAAR,GAAa,KAAb;AACAM,mBAAO,CAACI,KAAR,CAAcC,QAAd,GAAyB,OAAzB;AACAL,mBAAO,CAACI,KAAR,CAAcE,GAAd,GAAoB,GAApB;AACAN,mBAAO,CAACI,KAAR,CAAcG,IAAd,GAAqB,GAArB;AACAP,mBAAO,CAACI,KAAR,CAAcI,OAAd,GAAwB,GAAxB;AACAR,mBAAO,CAACjB,KAAR,GAAgBoB,GAAhB;AACAF,oBAAQ,CAACQ,IAAT,CAAcC,WAAd,CAA0BV,OAA1B;AACAA,mBAAO,CAACW,MAAR;;AAEA,gBAAI;AACF,kBAAMC,UAAU,GAAGX,QAAQ,CAACY,WAAT,CAAqB,MAArB,CAAnB;AACAC,qBAAO,CAACC,GAAR,CAAY,8BAA8BZ,GAA1C;;AACA,kBAAIS,UAAJ,EAAgB;AACd,uBAAO,IAAP;AACD;AACF,aAND,CAME,OAAOI,GAAP,EAAY;AACZF,qBAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,aARD,SAQU;AACRd,sBAAQ,CAACQ,IAAT,CAAcQ,WAAd,CAA0BjB,OAA1B;AACD;;AACD,mBAAO,KAAP;AACD;;;6CAEkB;AACjB;AACA,gBAAI,KAAK5B,IAAL,CAAU8C,KAAd,EAAqB;AACnB,mBAAKrD,SAAL,GAAiB,OAAjB;AACA,mBAAKb,oBAAL,CAA0BmE,SAA1B,CAAoC,KAAK/D,QAAzC,EAAmD,KAAKa,KAAL,CAAWc,KAA9D,EAAqET,SAArE;AACD;AACF;;;sCAEW;AACV,iBAAKR,QAAL,CAAckB,QAAd,CAAuB,KAAKf,KAAL,CAAWc,KAAlC;AACA,iBAAKlB,SAAL,GAAiB,MAAjB;AACD;;;wCAEa;AACZ;AACA,gBAAI,KAAKK,OAAL,CAAagD,KAAjB,EAAwB;AACtB,mBAAKjD,KAAL,CAAWe,QAAX,CAAoB,KAAKlB,QAAL,CAAciB,KAAlC;AACA,mBAAK/B,oBAAL,CAA0BmE,SAA1B,CAAoC,KAAK/D,QAAzC,EAAmD,KAAKU,QAAL,CAAciB,KAAjE,EAAwET,SAAxE;AACA,mBAAKR,QAAL,CAAcsD,KAAd;AACA,mBAAKvD,SAAL,GAAiB,OAAjB;AACD;AACF;;;2CAEgB;AACf,iBAAKC,QAAL,CAAcsD,KAAd;AACA,iBAAKvD,SAAL,GAAiB,OAAjB;AACD;;;yCAEc;AACb,iBAAKd,MAAL,CAAY+C,QAAZ,CAAqB,CAAC,WAAD,CAArB,EAAoC;AAClCF,yBAAW,EAAE;AACXyB,8BAAc,EAAE,KAAKjE;AADV;AADqB,aAApC;AAKD;;;wCAEa;AAAA;;AACZ,iBAAKJ,oBAAL,CAA0BmE,SAA1B,CAAoC,KAAK/D,QAAzC,EAAmD,IAAnD,EAAyDkB,SAAzD,CACE,YAAM;AACJ,oBAAI,CAACR,QAAL,CAAcsD,KAAd;;AACA,oBAAI,CAACnD,KAAL,CAAWmD,KAAX;;AACA,oBAAI,CAACvD,SAAL,GAAiB,OAAjB;AACD,aALH;AAOD;;;;;;;yBAvKUhB,uB,EAAuB,+H,EAAA,uH,EAAA,oJ,EAAA,qI,EAAA,2H;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,iB;AAAA,e;AAAA,u2B;AAAA;AAAA;AChBpC;;AACE;;AAAI;;AAAkB;;AAEtB;;AACE;;AACE;;AACA;;AACA;;AAA0C;;AAAsD;;AAChG;;AAA6C;AAAA,qBAAS,IAAAyE,mBAAA,CAAoB,MAApB,CAAT;AAAoC,aAApC;;AAAsC;;AAAgB;;AACrG;;AACA;;AAAG;;AAAoD;;AACvD;;AAAG;;AAAmF;;AACxF;;AAEA;;AAyCA;;AACE;;AACE;;AACF;;AACA;;AAAG;;AAAyH;;AAC5H;;AAEE;AAAA,qBAAS,IAAAC,YAAA,EAAT;AAAuB,aAAvB;;AAEA;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAEF;;AACA;;AAuBA;;AAaA;;AAgCF;;AACF;;;;AAvIS;;AAAA;;AAAuC;;AAAA;;AAOxC;;AAAA;;AA2DW;;AAAA;;AAuBA;;AAAA;;AAaA;;AAAA;;;;;;;;;;;;;;;;;;;;;;AC7GnB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSI;;AAA+D;;AAAiE;;;;;;AAAjE;;AAAA;;;;;;AAkB3D;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;AACE;;AACA;;AACF;;;;AAFe;;AAAA;;;;;;;;;;;;AAbnB;;AAKE;;AACE;;AAGA;;AAGA;;AAIF;;AACF;;;;;;AAdE;;AAEc;;AAAA;;AACG;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;;;;;UDjBVC,mB;AAcX,qCACmBC,iBADnB,EAEmB1E,MAFnB,EAEiC;AAAA;;AADd,eAAA0E,iBAAA,GAAAA,iBAAA;AACA,eAAA1E,MAAA,GAAAA,MAAA;AAfT,eAAA2E,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AACA,eAAAC,KAAA,GAAQ,IAAI,0DAAJ,EAAR;AAIV,eAAAC,IAAA,GAAO,EAAP;AACA,eAAAC,aAAA,GAAgB,EAAhB;AACA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAT,cAAA,GAAiB,EAAjB;AAEA,eAAAU,UAAA,GAAuB,CAAC,GAAD,CAAvB;AACA,eAAAC,aAAA,GAA2D,OAA3D;AAKK;;;;qCAEM;AACT,iBAAKX,cAAL,GAAsB,KAAKtE,MAAL,CAAYkF,QAAZ,CAAqB,KAAKlF,MAAL,CAAYoD,GAAjC,EAAsCP,WAAtC,CAAkDyB,cAAxE;AACD;;;iCAEMa,M,EAAM;AACX,gBAAIA,MAAM,CAACC,MAAP,CAAcpD,KAAd,CAAoBI,MAAxB,EAAgC;AAC9B,mBAAKuC,aAAL,CAAmBU,IAAnB,CAAwB,oDAAKR,IAA7B;AACA,mBAAKG,UAAL,CAAgBM,IAAhB,CAAqB,GAArB;AACD,aAHD,MAGO;AACL,mBAAKR,aAAL,GAAqB,EAArB;AACA,mBAAKF,KAAL,CAAWS,IAAX;AACA,mBAAKL,UAAL,GAAkB,CAAC,GAAD,CAAlB;AACD;;AAED,iBAAKH,IAAL,GAAYM,MAAM,CAACC,MAAP,CAAcpD,KAA1B;AACD;;;uCAEY;AAAA;;AACX,gBAAMuD,cAAc,GAAG,KAAKV,IAAL,CAAUW,KAAV,CAAgB,GAAhB,EAAqBC,GAArB,CAAyB,UAAArC,GAAG;AAAA,qBAAIA,GAAG,CAACsC,IAAJ,EAAJ;AAAA,aAA5B,CAAvB;AACA,gBAAMC,WAAW,GAAGJ,cAAc,CAACK,MAAf,CAAsB,KAAKC,WAA3B,CAApB;AACA,iBAAKf,aAAL,GAAqBS,cAAc,CAACK,MAAf,CAAsB,UAAAxC,GAAG;AAAA,qBAAI,CAAC,MAAI,CAACyC,WAAL,CAAiBzC,GAAjB,CAAL;AAAA,aAAzB,EAAqD0C,IAArD,CAA0D,KAA1D,CAArB;;AAEA,gBAAIH,WAAW,CAACvD,MAAZ,IAAsB,CAAC,KAAK0C,aAAL,CAAmB1C,MAA9C,EAAsD;AACpD,kBAAMyC,IAAI,GAAGc,WAAW,CAACI,KAAZ,EAAb;;AACA,kBAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA7D,KAAK,EAAI;AAC3B4B,uBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB7B,KAAvB;AACA,sBAAI,CAAC8C,aAAL,GAAqB,OAArB;AACD,eAHD;;AAKA,mBAAKA,aAAL,GAAqB,SAArB;AAEA,mBAAKP,iBAAL,CAAuBuB,gBAAvB,CAAwC,KAAK3B,cAA7C,EACG/C,SADH,CAEI,UAAC2E,QAAD,EAAmB;AACjB,oBAAM5B,cAAc,GAAG4B,QAAQ,CAACxC,IAAT,CAAcf,EAArC;;AAEC,sBAAI,CAACwD,cAAL,CAAoBtB,IAApB,EAA0BP,cAA1B,EACE/C,SADF,CAEG,YAAM;AACJ,wBAAI,CAAC+C,cAAL,GAAsBA,cAAtB;AACA,wBAAI,CAACU,UAAL,GAAkB,CAAC,GAAD,CAAlB;AACA,wBAAI,CAACC,aAAL,GAAqB,SAArB;AACD,iBANJ,EAOGe,WAPH;AASF,eAdL,EAeIA,WAfJ;AAiBD;AACF;;;uCAEYI,I,EAAY;AACvB,mBAAO,KAAKpB,UAAL,CAAgBqB,QAAhB,CAAyBD,IAAzB,CAAP;AACD;;;yCAEc;AACb,iBAAKpG,MAAL,CAAY+C,QAAZ,CAAqB,CAAC,UAAD,EAAa,KAAKuB,cAAlB,CAArB;AACD;;;sCAEmBtC,K,EAAO;AACzB;AACA,mBAAO,ycAAycsE,IAAzc,CAA8ctE,KAA9c,CAAP;AACD;;;yCAEsB6C,I,EAAgBP,c,EAAwB;AAAA;;AAC7D,gBAAI,CAACO,IAAI,CAACzC,MAAV,EAAkB;AAChB,qBAAO,gDAAG,MAAH,CAAP;AACD;;AAED,mBAAO,sDAASyC,IAAI,CAACY,GAAL,CAAS,UAAArC,GAAG;AAAA,qBAAI,MAAI,CAACsB,iBAAL,CAAuB6B,cAAvB,CAAsCnD,GAAtC,EAA2CkB,cAA3C,CAAJ;AAAA,aAAZ,CAAT,CAAP;AACD;;;;;;;yBAzFUG,mB,EAAmB,8I,EAAA,uH;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,4hB;AAAA;AAAA;ACbhC;;AACE;;AACE;;AAAuB;;AAA0G;;AACjI;;AACE;AAAA,qBAAU,IAAA+B,MAAA,QAAV;AAAwB,aAAxB;;AADF;;AAMA;;AACF;;AAEA;;AACE;;AAAuB;;AAAoC;;AAC3D;;AAGE;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAEA;;AACF;;AACA;;AAkBF;;AAEA;;AACE;;AAAuB;;AAAmC;;AAC1D;;AAEE;AAAA,qBAAS,IAAAC,YAAA,EAAT;AAAuB,aAAvB;;AAGA;;AACF;;AACF;;AACF;;;;AAnDyB;;AACL;;AAAA;;AAMd;;AAAA;;AAEiC;;AAAA;;AAGnB;;AAAA;;AAId;;AAAA;;AAMC;;AAAA;;AAmBa;;AAAA;;AAKd;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CJ;;AACE;;AAAiD;;AAAiC;;AACpF;;;;;;AADK;;AAAA;;;;UCQMC,iB;AAKX,mCAA6B3G,MAA7B,EAA6C;AAAA;;AAAhB,eAAAA,MAAA,GAAAA,MAAA;AAF7B,eAAAS,cAAA,GAAiBC,MAAM,CAACC,KAAP,CAAaC,OAA9B;AAGE,eAAK0D,cAAL,GAAsB,KAAKtE,MAAL,CAAYkF,QAAZ,CAAqB,KAAKlF,MAAL,CAAYoD,GAAjC,EAAsCP,WAAtC,CAAkDyB,cAAxE;AACD;;;;qCAEgB;;;;;;;;;;;;AAChB;;;wCAEasC,I,EAAY;AACxB,iBAAKA,IAAL,GAAYA,IAAZ;AACD;;;kCAEO;AACN,iBAAKA,IAAL,GAAY,oDAAKC,IAAjB;AACD;;;;;;;yBAlBUF,iB,EAAiB,uH;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,kN;AAAA;AAAA;ADV9B;;AACE;;AAGA;;AAAI;;AAAU;;AAEd;;AACE;;AACE;;AACE;AAAA,qBAAiB,IAAAhC,aAAA,QAAjB;AAAsC,aAAtC,EAAuC,OAAvC,EAAuC;AAAA,qBAC9B,IAAAC,KAAA,EAD8B;AACvB,aADhB;;AAGD;;AACH;;AACA;;AAAuC;;AAAE;;AACzC;;AACE;;AACE;AAAA,qBAAiB,IAAAD,aAAA,QAAjB;AAAsC,aAAtC,EAAuC,OAAvC,EAAuC;AAAA,qBAC9B,IAAAC,KAAA,EAD8B;AACvB,aADhB;;AAGD;;AACH;;AACF;;AAtBF;;;;AAC8B;;AAAA;;AAUtB;;AAAA;;AAQA;;AAAA;;;;;;;;;;;;;;;;;;;;;AEnBR;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMakC,iB;AAMX,mCACmBC,IADnB,EACmC;AAAA;;AAAhB,eAAAA,IAAA,GAAAA,IAAA;AANnB,eAAA3G,WAAA,GAAc,EAAd;AACQ,eAAA4G,kBAAA,GAA6BtG,MAAM,CAACC,KAAP,CAAasG,gBAAb,GAAgC,6BAA7D;AACA,eAAAC,gBAAA,GAA2BxG,MAAM,CAACC,KAAP,CAAasG,gBAAb,GAAgC,4BAA3D;AACA,eAAAE,mBAAA,GAA8BzG,MAAM,CAACC,KAAP,CAAasG,gBAAb,GAAgC,sBAA9D;AAIH;;;;2CAEY3C,c,EAAuB;AACtC,gBAAI,CAACA,cAAL,EAAqB;AACnB;AACA,kBAAM8C,GAAG,GAAG,IAAI,gEAAJ,CAAgB,MAAhB,EAAwB,KAAKD,mBAA7B,EAAkD,IAAlD,CAAZ;AAEA,qBAAO,KAAKJ,IAAL,CAAUM,OAAV,CAAkBD,GAAlB,EAAuBE,IAAvB,CACL,6DADK,EAEL,6DAAM,CAAN,CAFK,CAAP;AAID,aARD,MAQO;AACL;AACA,kBAAMF,IAAG,GAAG,IAAI,gEAAJ,CAAgB,KAAhB,EAAuB,KAAKD,mBAAL,GAA2B,GAA3B,GAAiC7C,cAAxD,CAAZ;;AAEA,qBAAO,KAAKyC,IAAL,CAAUM,OAAV,CAAkBD,IAAlB,EAAuBE,IAAvB,CACL,6DADK,EAEL,6DAAM,CAAN,CAFK,CAAP;AAID;AACF;;;qCAEUC,I,EAAYjD,c,EAAuB;AAC5C,gBAAI,CAACiD,IAAL,EAAW;AACT,qBAAO,IAAP;AACD;;AAED,gBAAMnE,GAAG,GAAGkB,cAAc,aAAM,KAAK6C,mBAAX,cAAkC7C,cAAlC,oBAAiE,KAAK0C,kBAAhG;AACA,gBAAMQ,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,sBAAU,CAACE,MAAX,CAAkB,MAAlB,EAA0BH,IAA1B,EAAgCA,IAAI,CAACI,IAArC;AAEA,gBAAMP,GAAG,GAAG,IAAI,gEAAJ,CAAgB,MAAhB,EAAwBhE,GAAxB,EAA6BoE,UAA7B,CAAZ;AAEA,mBAAO,KAAKT,IAAL,CAAUM,OAAV,CAAkBD,GAAlB,EAAuBE,IAAvB,CACL,6DADK,EAEL,6DAAM,CAAN,CAFK,CAAP;AAID;;;yCAEcM,O,EAAiBtD,c,EAAyB;AACvD,gBAAMlB,GAAG,GAAGkB,cAAc,aAAM,KAAK6C,mBAAX,cAAkC7C,cAAlC,mBAAgE,KAAK4C,gBAA/F;AAEA,mBAAO,KAAKH,IAAL,CAAUc,IAAV,CACLzE,GADK,EAEL0E,IAAI,CAACC,SAAL,CAAe;AAAE3E,iBAAG,EAAEwE;AAAP,aAAf,CAFK,EAGL;AACEI,qBAAO,EAAE;AACP,gCAAgB,kBADT,CAC4B;;AAD5B,eADX;AAIEC,0BAAY,EAAE;AAJhB,aAHK,CAAP;AAUD;;;yCAEctF,E,EAAY;AACzB,iBAAKvC,WAAL,GAAmBuC,EAAnB;AACD;;;;;;;yBAhEUmE,iB,EAAiB,uH;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKQ;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFJ;;AACE;;AAGF;;;;;;AAHsB;;AAAA;;;;;;;;AAMlB;;AACE;;AACE;;AACF;;AACA;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAHF;;AAQF;;;;;;AAHI;;AAAA;;;;;;;;AAKF;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACF;;;;;;AAHE;;;;;;AAnBR;;AACE;;AACE;;AAaA;;AASF;;AACF;;;;;;;;AAvBmB;;AAAA,yGAA6B,UAA7B,EAA6B,GAA7B;;;;;;;;AA6BrB;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACF;;;;;;AAHE;;;;;;AAWE;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;AACE;;AACA;;AACF;;;;AAFe;;AAAA;;;;;;;;;;;;AAbnB;;AAKE;;AACE;;AAGA;;AAGA;;AAIF;;AACF;;;;;;AAdE;;AAEc;;AAAA;;AACG;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;;;;;UD5CVoB,mB;AAeX,qCACmBhI,MADnB,EAEmBF,MAFnB,EAGmB0E,iBAHnB,EAGuD;AAAA;;AAFpC,eAAAxE,MAAA,GAAAA,MAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAA0E,iBAAA,GAAAA,iBAAA;AAjBT,eAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AACA,eAAAC,KAAA,GAAQ,IAAI,0DAAJ,EAAR;AAIV,eAAAuD,aAAA,GAAwB,EAAxB;AACA,eAAA/H,WAAA,GAAc,EAAd;AACA,eAAAkE,cAAA,GAAiB,EAAjB;AACA,eAAA8D,YAAA,GAAe,KAAf;AACA,eAAAnD,aAAA,GAA2D,OAA3D;AACA,eAAAoD,QAAA,GAAW,EAAX;AAEA,eAAArD,UAAA,GAAa,CAAC,GAAD,CAAb;AAMK;;;;qCAEM;AACT,iBAAKV,cAAL,GAAsB,KAAKtE,MAAL,CAAYkF,QAAZ,CAAqB,KAAKlF,MAAL,CAAYoD,GAAjC,EAAsCP,WAAtC,CAAkDyB,cAAxE;AACD;;;wCAEagE,K,EAAO;AACnB,iBAAKrD,aAAL,GAAqB,OAArB;AACA,iBAAKN,aAAL,CAAmBU,IAAnB,CAAwB,oDAAKkD,KAA7B;AACA,iBAAKJ,aAAL,GAAqBG,KAAK,CAAClD,MAAN,CAAaoD,KAAlC;AACA,iBAAKxD,UAAL,CAAgBM,IAAhB,CAAqB,GAArB;AACD;;;uCAES;AAAA;;AACR,gBAAMkD,KAAK,GAAGC,KAAK,CAACC,SAAN,CAAgB3C,KAAhB,CAAsB4C,IAAtB,CAA2B,KAAKR,aAAhC,CAAd;;AACA,gBAAMnC,WAAW,GAAG,SAAdA,WAAc,CAAA7D,KAAK,EAAI;AAC3B;AACA,oBAAI,CAAC8C,aAAL,GAAqB,OAArB;AACD,aAHD;;AAKA,gBAAIuD,KAAK,CAACpG,MAAV,EAAkB;AAChB,mBAAK6C,aAAL,GAAqB,SAArB;AAEA,mBAAKP,iBAAL,CAAuBuB,gBAAvB,CAAwC,KAAK3B,cAA7C,EACG/C,SADH,CAEI,UAAC2E,QAAD,EAAiC;AAC/B,oBAAM5B,cAAc,GAAG4B,QAAQ,CAACxC,IAAT,CAAcf,EAArC;;AAEA,sBAAI,CAACwD,cAAL,CAAoBqC,KAApB,EAA2BlE,cAA3B,EACG/C,SADH,CAEI,YAAM;AACJ,wBAAI,CAAC+C,cAAL,GAAsBA,cAAtB;AACA,wBAAI,CAACU,UAAL,GAAkB,CAAC,GAAD,CAAlB;AACA,wBAAI,CAACC,aAAL,GAAqB,SAArB;AACD,iBANL,EAOIe,WAPJ;AASD,eAdL,EAeIA,WAfJ;AAiBD;AACF;;;yCAEc;AACb,iBAAKhG,MAAL,CAAY+C,QAAZ,CAAqB,CAAC,UAAD,EAAa,KAAKuB,cAAlB,CAArB;AACD;;;uCAEY;AACX,iBAAKM,KAAL,CAAWS,IAAX;AACA,iBAAK8C,aAAL,GAAqB,EAArB;AACA,iBAAKnD,UAAL,GAAkB,CAAC,GAAD,CAAlB;AACD;;;uCAEYoB,I,EAAY;AACvB,mBAAO,KAAKpB,UAAL,CAAgBqB,QAAhB,CAAyBD,IAAzB,CAAP;AACD;;;yCAEsBoC,K,EAAelE,c,EAAwB;AAAA;;AAC5D,gBAAI,CAACkE,KAAK,CAACpG,MAAX,EAAmB;AACjB,qBAAO,gDAAG,MAAH,CAAP;AACD;;AAED,mBAAO,sDAASoG,KAAK,CAAC/C,GAAN,CAAU,UAAA8B,IAAI;AAAA,qBAAI,MAAI,CAAC7C,iBAAL,CAAuBkE,UAAvB,CAAkCrB,IAAlC,EAAwCjD,cAAxC,CAAJ;AAAA,aAAd,CAAT,CAAP;AACD;;;;;;;yBAlFU4D,mB,EAAmB,qI,EAAA,uH,EAAA,8I;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,u3B;AAAA;AAAA;ACfhC;;AAAI;;AAAsD;;AAC1D;;AACE;;AACE;;AAAuB;;AAA+E;;AACtG;;AACE;;AAKA;;AA0BF;;AACF;;AAEA;;AACE;;AAAuB;;AAA8B;;AACrD;;AASA;;AAkBF;;AAEA;;AAIE;;AAAuB;;AAAmC;;AAC1D;;AAEE;AAAA,qBAAS,IAAAxB,YAAA,EAAT;AAAuB,aAAvB;;AAGA;;AACF;;AACF;;AAEF;;;;AAnFK;;AAAA;;AACe;;AAAA;;AAGJ;;AAAA;;AAKK;;AAAA;;AA6BD;;AAAA;;AAGb;;AAAA;;AASA;;AAAA;;AAqBH;;AAAA;;AAME;;AAAA;;;;;;;;;;;;;;;;;;;;;AC5EN;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQamC,oB;AAGX,sCACU3I,MADV,EAEU6G,IAFV,EAE0B;AAAA;;AADhB,eAAA7G,MAAA,GAAAA,MAAA;AACA,eAAA6G,IAAA,GAAAA,IAAA;AAJF,eAAA+B,iBAAA,GAA4BpI,MAAM,CAACC,KAAP,CAAasG,gBAAb,GAAgC,oBAA5D;;AA+CA,eAAA8B,kBAAA,GAAqB,UAACpG,EAAD;AAAA,6BAAmBjC,MAAM,CAACC,KAAP,CAAasG,gBAAhC,kCAAwEtE,EAAxE;AAAA,WAArB;AA1CH;;;;yCAEUvC,W,EAAmB;AAAA;;AAChC,gBAAMgD,GAAG,GAAW,KAAK0F,iBAAL,GAAyB,kCAAzB,GAA8D1I,WAAlF;AAEA,iBAAKF,MAAL,CAAY0B,KAAZ,CAAkBwB,GAAlB;AAEA,mBAAO,KAAK2D,IAAL,CAAUiC,GAAV,CAA+B5F,GAA/B,EACJkE,IADI,CAEH,2DAAI,UAAAtE,CAAC;AAAA,qBAAI,MAAI,CAAC9C,MAAL,CAAY0B,KAAZ,wBAAJ;AAAA,aAAL,CAFG,EAGH,kEAAW,KAAKoE,WAAL,CAAiB,gBAAjB,EAAmCiD,SAAnC,CAAX,CAHG,CAAP;AAKD;;;6CAEkBC,U,EAAkB;AAAA;;AACnC,gBAAM9F,GAAG,GAAW,KAAK0F,iBAAL,GAAyB,GAAzB,GAA+BI,UAAnD;AACA,mBAAO,KAAKnC,IAAL,CAAUiC,GAAV,CAAmB5F,GAAnB,EACJkE,IADI,CAEH,2DAAI,UAAAtE,CAAC;AAAA,qBAAI,OAAI,CAAC9C,MAAL,CAAY0B,KAAZ,wBAAJ;AAAA,aAAL,CAFG,EAGH,kEAAW,KAAKoE,WAAL,CAAiB,gBAAjB,EAAmCiD,SAAnC,CAAX,CAHG,CAAP;AAKD,W,CAED;;;;0CACgB7I,W,EAAmB;AACjC,gBAAMgD,GAAG,GAAW,KAAK2F,kBAAL,CAAwB3I,WAAxB,CAApB;AAEA,mBAAO,KAAK2G,IAAL,CAAUiC,GAAV,CAAc5F,GAAd,EAAmBkE,IAAnB,CACL,kEAAW,KAAKtB,WAAL,CAAiB,iBAAjB,EAAoCiD,SAApC,CAAX,CADK,CAAP;AAID;;;oCAEStG,E,EAAYzB,K,EAAe;AACnC,mBAAO,KAAK6F,IAAL,CAAUoC,KAAV,CAAgB,KAAKJ,kBAAL,CAAwBpG,EAAxB,CAAhB,EAA6C;AAClDzB,mBAAK,EAALA;AADkD,aAA7C,EAEJoG,IAFI,CAGL,kEAAW,KAAKtB,WAAL,CAAiB,WAAjB,EAA8BiD,SAA9B,CAAX,CAHK,CAAP;AAKD;AAKD;;;;;;;;;;wCAO4D;AAAA;;AAAA,gBAArCG,SAAqC,uEAAzB,WAAyB;AAAA,gBAAZC,MAAY;AAC1D,mBAAO,UAAClH,KAAD,EAA+B;AAEpC;AACA,qBAAI,CAACjC,MAAL,CAAYiC,KAAZ,CAAkBA,KAAlB,EAHoC,CAKpC;AACA;AAEA;;;AACA,qBAAO,gDAAGkH,MAAH,CAAP;AACD,aAVD;AAWD;;;;;;;yBArEUR,oB,EAAoB,4H,EAAA,uH;AAAA,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB;;;;;;;;;;;;;;;;;ACVjC;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAYS,IAAZ;;AAAA,iBAAYA,IAAZ,EAAgB;AACd;AACA;AACA;AACD,OAJD,EAAYA,IAAI,KAAJA,IAAI,MAAhB;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,UAAMC,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OADqB,EAErB;AAAED,YAAI,EAAE,KAAR;AAAeC,iBAAS,EAAE;AAA1B,OAFqB,CAAvB;;UAyBaC,kB;;;;;cAAAA;;;;2BAAAA,kB;AAAkB,S;AAAA,mBANlB,CACT,6EADS,EAET,wEAFS,EAGT,mFAHS,C;AAIV,kBAhBQ,CACP,4DADO,EAEP,6DAAaC,QAAb,CAAsBJ,MAAtB,CAFO,EAGP,qEAHO,EAIP,kEAJO,CAgBR;;;;6HAEUG,kB,EAAkB;AAAA,yBAX3B,+EAW2B,EAV3B,sFAU2B,EAT3B,kGAS2B,EAR3B,sFAQ2B;AARR,oBATnB,4DASmB,EATP,4DASO,EAPnB,qEAOmB,EANnB,kEAMmB;AAQQ,S;AAdf,O;;;;;;;;;;;;;;;;;ACzBhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaE,e;AAIX,mCAAc;AAAA;;AAHd,eAAAC,QAAA,GAAW,IAAI,4CAAJ,EAAX;AACA,eAAAC,aAAA,GAA2B,EAA3B;AAEiB;;;;8BAEbC,O,EAAkB;AACpB,iBAAKD,aAAL,CAAmBxE,IAAnB,CAAwByE,OAAxB;AACA,iBAAKF,QAAL,CAAcG,IAAd,CAAmB,KAAKF,aAAL,CAAmB/D,KAAnB,EAAnB;AACD;;;kCAEO;AACN,iBAAK+D,aAAL,GAAqB,EAArB;AACA,iBAAKD,QAAL,CAAcG,IAAd,CAAmB,KAAKF,aAAL,CAAmB/D,KAAnB,EAAnB;AACD;;;;;;;yBAdU6D,e;AAAe,O;;;eAAfA,e;AAAe,iBAAfA,eAAe","file":"default~validate-iati-validate-iati-module~views-data-quality-feedback-data-quality-feedback-module-es5.js","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { Subscription, timer } from 'rxjs';\n\nimport { LogService } from '../../core/logging/log.service';\nimport { IatiTestDataset } from './../shared/iati-testdataset';\nimport { ValidatedIatiService } from './../shared/validated-iati.service';\n\n\n\n@Component({\n  selector: 'app-validate-result',\n  templateUrl: './validate-result.component.html',\n  styleUrls: ['./validate-result.component.scss']\n})\nexport class ValidateResultComponent implements OnDestroy {\n  workspaceId = '';\n  uploadId = '';\n  currentUrl = '';\n  iatiDatasetDatas: IatiTestDataset[] = [];\n  md5 = '';\n  environmentUrl = window.__env.baseUrl;\n  source = timer(100, 2000);\n  subscribeTimer: Subscription;\n  interval: any;\n  emailMode: 'saved' | 'edit' | 'draft' = 'draft';\n\n  newEmail = this.fb.control('', [Validators.required, Validators.email]);\n  newForm: FormGroup = this.fb.group({\n    email: this.newEmail,\n  });\n\n  email = this.fb.control('', [Validators.required, Validators.email]);\n  form: FormGroup = this.fb.group({\n    email: this.email,\n  });\n\n  constructor(\n    private readonly activateRoute: ActivatedRoute,\n    private readonly router: Router,\n    private readonly validatedIatiService: ValidatedIatiService,\n    private readonly logger: LogService,\n    private readonly fb: FormBuilder\n  ) {\n\n    this.activateRoute\n      .params\n      .subscribe(params => {\n        this.uploadId = params['id'];\n      });\n\n    this.subscribeTimer = this.source.subscribe(val => {\n      this.loadData();\n\n      if (this.allDataHasJsonUpdated()) {\n        logger.debug('unsubscribe');\n        this.subscribeTimer.unsubscribe();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscribeTimer.unsubscribe();\n  }\n\n  loadData() {\n    this.validatedIatiService.getTmpWorkspace(this.uploadId)\n      .subscribe(\n        data => {\n          if (!this.email.value && data.email) {\n            this.email.setValue(data.email);\n            this.emailMode = 'saved';\n          }\n          // this;\n          this.iatiDatasetDatas = data.datasets;\n        },\n        error => this.logger.error('Faild to load iati data', error)\n      );\n  }\n\n  allDataHasJsonUpdated(): boolean {\n    if (!this.iatiDatasetDatas.length) {\n      return false;\n    } else {\n      return this.iatiDatasetDatas.every(iatiDatasetData => this.jsonUpdated(iatiDatasetData));\n    }\n  }\n\n  jsonUpdated(inDataset: IatiTestDataset): boolean {\n    return !!inDataset['json-updated'];\n  }\n\n  hasSourceUrl(inDataset: IatiTestDataset): boolean {\n    return !!inDataset.sourceUrl;\n  }\n\n  reportType(dataset): string {\n    return this.jsonUpdated(dataset) ? 'Validation finished (click to view)' : '-';\n  }\n\n  rowClick(dataset: IatiTestDataset, id: string) {\n    if (this.jsonUpdated(dataset)) {\n      const navigationExtras: NavigationExtras = {\n        queryParams: {\n          isTestfiles: true,\n        }\n      };\n\n      this.router.navigate(['view', 'dqf', 'files', id], navigationExtras);\n    }\n  }\n\n  copyTextToClipboard(_) {\n    const txtArea = document.createElement('textarea');\n    const url = this.environmentUrl + '/validate/' + this.uploadId;\n    txtArea.id = 'txt';\n    txtArea.style.position = 'fixed';\n    txtArea.style.top = '0';\n    txtArea.style.left = '0';\n    txtArea.style.opacity = '0';\n    txtArea.value = url;\n    document.body.appendChild(txtArea);\n    txtArea.select();\n\n    try {\n      const successful = document.execCommand('copy');\n      console.log('Copying text command was ' + url);\n      if (successful) {\n        return true;\n      }\n    } catch (err) {\n      console.log('Oops, unable to copy');\n    } finally {\n      document.body.removeChild(txtArea);\n    }\n    return false;\n  }\n\n  saveEmailAddress() {\n    // TODO: added api call\n    if (this.form.valid) {\n      this.emailMode = 'saved';\n      this.validatedIatiService.sendEmail(this.uploadId, this.email.value).subscribe();\n    }\n  }\n\n  editEmail() {\n    this.newEmail.setValue(this.email.value);\n    this.emailMode = 'edit';\n  }\n\n  updateEmail() {\n    // TODO: added api call\n    if (this.newForm.valid) {\n      this.email.setValue(this.newEmail.value);\n      this.validatedIatiService.sendEmail(this.uploadId, this.newEmail.value).subscribe();\n      this.newEmail.reset();\n      this.emailMode = 'saved';\n    }\n  }\n\n  returnViewMode() {\n    this.newEmail.reset();\n    this.emailMode = 'saved';\n  }\n\n  addMoreFiles() {\n    this.router.navigate(['/validate'], {\n      queryParams: {\n        tmpWorkspaceId: this.uploadId,\n      }\n    });\n  }\n\n  removeEmail() {\n    this.validatedIatiService.sendEmail(this.uploadId, null).subscribe(\n      () => {\n        this.newEmail.reset();\n        this.email.reset();\n        this.emailMode = 'draft';\n      }\n    );\n  }\n}\n","<div class=\"container result-validation\">\n  <h1>Validation results</h1>\n\n  <div class=\"content-block\">\n    <p>\n      Your personal workspace is here:\n      <br>\n      <a [routerLink]=\"['/validate', uploadId]\">{{environmentUrl}}/iati-feedback/validate/{{uploadId}}</a>\n      <button class=\"btn btn-outline-primary ml-2\" (click)=\"copyTextToClipboard('text')\">Copy the address</button>\n    </p>\n    <p>This is where you can see your ‘Validation Results’.</p>\n    <p>You can ‘Copy the address’ of your personal workplace and access the results later.</p>\n  </div>\n\n  <div *ngIf=\"iatiDatasetDatas.length\" class=\"files\">\n    <div class=\"row heading\">\n      <div class=\"col-12 col-md\">\n        File name\n      </div>\n      <div class=\"col-12 col-md d-none d-md-block\">\n        Uploaded\n      </div>\n      <div class=\"col-12 col-md d-none d-md-block\">\n        Report status\n      </div>\n    </div>\n\n    <ng-container *ngFor=\"let iatiDatasetData of iatiDatasetDatas\">\n      <div class=\"wrapper\">\n        <div class=\"row\" (click)=\"rowClick(iatiDatasetData, iatiDatasetData.id)\" [ngClass]=\"{'dqf': jsonUpdated(iatiDatasetData)}\"  >\n          <div class=\"col-12 col-md\">\n            <span *ngIf=\"hasSourceUrl(iatiDatasetData); else elseBlock2\" >\n              {{ iatiDatasetData.sourceUrl }}\n            </span>\n            <ng-template #elseBlock2>\n              {{ iatiDatasetData.filename }}\n            </ng-template>\n          </div>\n          <div class=\"col-12 col-md\">\n            {{ iatiDatasetData.uploaded | date:'yyyy-MM-dd HH:mm (z)' }}\n          </div>\n          <div class=\"col-12 col-md\">\n            <span *ngIf=\"jsonUpdated(iatiDatasetData); else elseBlock\" >\n              <button type=\"button\" class=\"btn btn-link dqf-button\">{{ reportType(iatiDatasetData) }}</button>\n            </span>\n            <ng-template #elseBlock>\n              <span *ngIf=\"iatiDatasetData\">{{iatiDatasetData.status}}</span>\n            </ng-template>\n          </div>\n          <div class=\"col-12 d-md-none\"><hr></div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n\n  <div class=\"content-block\">\n    <p>\n      If you want to validate more files, you have the option to do so by clicking “Add more files”.\n    </p>\n    <p>Please note that your personal workspace and the files will be deleted 72 hours after uploading and processing all files.</p>\n    <button\n      class=\"btn btn-success iati-button border-radius-none\"\n      (click)=\"addMoreFiles()\"\n    >\n      Add more files\n    </button>\n  </div>\n\n  <div class=\"content-block\">\n    <p>\n      If you have added multiple files and are processing a large amount of data, this can take some time.\n      You can choose the option below for the validator to send you a notification via email once all the validation reports are ready.\n    </p>\n    <ng-container *ngIf=\"emailMode === 'draft'\">\n      <p>\n        Enter your email below. Your email will not be shared with anyone and will be removed when your personal workspace is deleted.\n      </p>\n      <div class=\"row\">\n        <form class=\"email-form\" [formGroup]=\"form\" (submit)=\"saveEmailAddress()\">\n          <input\n            type=\"email\"\n            [formControl]=\"email\"\n            class=\"urls-input\"\n            placeholder=\"your email address\"\n          />\n          <button\n            class=\"btn btn-success iati-button border-radius-none\"\n            type=\"submit\"\n            [disabled]=\"form.invalid\"\n          >\n            Add email address\n          </button>\n        </form>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"emailMode === 'saved'\">\n      <p>\n        Send a notification to this address:\n      </p>\n        <span class=\"saved-email\">{{email.value}}</span>\n        <button\n          class=\"btn btn-success iati-button border-radius-none\"\n          (click)=\"editEmail()\"\n        >\n          Edit email address\n        </button>\n    </ng-container>\n\n    <ng-container *ngIf=\"emailMode === 'edit'\">\n      <p>\n        Enter your email address to receive a notification\n      </p>\n        <form class=\"email-form\" [formGroup]=\"newForm\" (submit)=\"updateEmail()\">\n          <input\n            type=\"email\"\n            [formControl]=\"newEmail\"\n            class=\"urls-input\"\n            placeholder=\"your email address\"\n          />\n          <button\n            class=\"btn btn-success iati-button border-radius-none\"\n            type=\"submit\"\n            [disabled]=\"newForm.invalid || !newForm.touched\"\n          >\n            Save\n          </button>\n          <button\n            class=\"btn btn-success iati-button border-radius-none\"\n            (click)=\"returnViewMode()\"\n          >\n            Cancel\n          </button>\n        </form>\n        <button\n          class=\"btn btn-success iati-button border-radius-none\"\n          (click)=\"removeEmail()\"\n        >\n          Remove\n        </button>\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { forkJoin, of } from 'rxjs';\n\nimport { Mode } from '../validate-iati';\nimport { FileUploadService } from './../shared/file-upload.service';\n\n\n@Component({\n  selector: 'app-upload-urls',\n  templateUrl: './upload-urls.component.html',\n  styleUrls: ['./upload-urls.component.scss']\n})\nexport class UploadUrlsComponent implements OnInit {\n  @Output() setActiveMode = new EventEmitter<Mode>();\n  @Output() clear = new EventEmitter<void>();\n\n  @Input() mode: Mode;\n\n  urls = '';\n  incorrectUrls = '';\n  fileName = '';\n  tmpWorkspaceId = '';\n\n  activeStep: string[] = ['1'];\n  requestStatus: 'pending' | 'draft' | 'success' | 'error' = 'draft';\n\n  constructor(\n    private readonly fileUploadService: FileUploadService,\n    private readonly router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.tmpWorkspaceId = this.router.parseUrl(this.router.url).queryParams.tmpWorkspaceId;\n  }\n\n  setUrl($event): void {\n    if ($event.target.value.length) {\n      this.setActiveMode.emit(Mode.urls);\n      this.activeStep.push('2');\n    } else {\n      this.incorrectUrls = '';\n      this.clear.emit();\n      this.activeStep = ['1'];\n    }\n\n    this.urls = $event.target.value;\n  }\n\n  fetchFiles() {\n    const serializedUrls = this.urls.split('|').map(url => url.trim());\n    const correctUrls = serializedUrls.filter(this.validateUrl);\n    this.incorrectUrls = serializedUrls.filter(url => !this.validateUrl(url)).join(' | ');\n\n    if (correctUrls.length && !this.incorrectUrls.length) {\n      const urls = correctUrls.slice();\n      const handleError = error => {\n        console.log('error: ', error);\n        this.requestStatus = 'error';\n      };\n\n      this.requestStatus = 'pending';\n\n      this.fileUploadService.checkWorkspaceId(this.tmpWorkspaceId)\n        .subscribe(\n          (response: any) => {\n            const tmpWorkspaceId = response.body.id;\n\n            (this.parallelUpload(urls, tmpWorkspaceId) as any)\n              .subscribe(\n                () => {\n                  this.tmpWorkspaceId = tmpWorkspaceId;\n                  this.activeStep = ['3'];\n                  this.requestStatus = 'success';\n                },\n                handleError\n              );\n          },\n          handleError\n        );\n    }\n  }\n\n  isActiveStep(step: string): boolean {\n    return this.activeStep.includes(step);\n  }\n\n  validateFile() {\n    this.router.navigate(['validate', this.tmpWorkspaceId]);\n  }\n\n  private validateUrl(value) {\n    // eslint-disable-next-line\n    return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n  }\n\n  private parallelUpload(urls: string[], tmpWorkspaceId: string) {\n    if (!urls.length) {\n      return of('skip' as any);\n    }\n\n    return forkJoin(urls.map(url => this.fileUploadService.fetchFileByUrl(url, tmpWorkspaceId)) as any);\n  }\n}\n","<div class=\"urls-upload\" [ngClass]=\"{'disable': mode !== 'both' && mode === 'local'}\">\n  <div class=\"step\" [ngClass]=\"{'next': isActiveStep('1')}\">\n    <h5 class=\"step-title\">Step 1: Add a web address (URL) of your IATI XMLfile. You can add multiple files by seperating them with |</h5>\n    <input\n      (change)=\"setUrl($event)\"\n      class=\"urls-input\"\n      placeholder=\"enter web address\"\n      [disabled]=\"!isActiveStep('1') || mode !== 'both' && mode === 'local'\"\n    />\n    <p class=\"incorrect-urls-warning\" *ngIf=\"incorrectUrls.length\">You have one or more incorrect web addresses: \"{{incorrectUrls}}\"</p>\n  </div>\n\n  <div class=\"step\" [ngClass]=\"{'next': isActiveStep('2')}\">\n    <h5 class=\"step-title\">Step 2: Fetch the files from the web</h5>\n    <button\n      class=\"btn btn-success iati-button border-radius-none\"\n      [disabled]=\"!isActiveStep('2')\"\n      (click)=\"fetchFiles()\"\n    >\n      Fetch\n    </button>\n    <div\n      *ngIf=\"requestStatus !== 'draft'\"\n      class=\"alert alert-info message\"\n      [ngClass]=\"{'alert-danger': requestStatus === 'error'}\"\n    >\n      <ng-container [ngSwitch]=\"requestStatus\">\n        <ng-container *ngSwitchCase=\"'error'\">\n          File(s) uploading failed. Check your files and try again.\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'success'\">\n          File(s) have been uploaded successfully\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <app-spinner [backColor]=\"'white'\"></app-spinner>\n          Your files are uploading now. Large files could uploading more than few minutes.\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n\n  <div class=\"step\" [ngClass]=\"{'next': isActiveStep('3')}\">\n    <h5 class=\"step-title\">Step 3: Start validating your files</h5>\n    <button\n      class=\"btn btn-success iati-button border-radius-none\"\n      (click)=\"validateFile()\"\n      [disabled]=\"!isActiveStep('3')\"\n    >\n      Validate\n    </button>\n  </div>\n</div>\n","<div class=\"container\">\n  <div class=\"content-block\" *ngIf=\"tmpWorkspaceId\">\n    <a [routerLink]=\"['/validate', tmpWorkspaceId]\" >&lt;&lt; Return to your workspace</a>\n  </div>\n  <h1>Check data</h1>\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <app-upload-file\n        (setActiveMode)=\"setActiveMode($event)\"\n        (clear)=\"clear()\"\n        [mode]=\"mode\"\n      ></app-upload-file>\n    </div>\n    <div class=\"\" style=\"margin-top: 5em;\">OR</div>\n    <div class=\"col\">\n      <app-upload-urls\n        (setActiveMode)=\"setActiveMode($event)\"\n        (clear)=\"clear()\"\n        [mode]=\"mode\"\n      ></app-upload-urls>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Mode } from '../validate-iati';\n\n@Component({\n  selector: 'app-validate',\n  templateUrl: './validate.component.html',\n  styleUrls: ['./validate.component.scss']\n})\nexport class ValidateComponent implements OnInit {\n  mode: Mode;\n  tmpWorkspaceId: string;\n  environmentUrl = window.__env.baseUrl;\n\n  constructor(private readonly router: Router) {\n    this.tmpWorkspaceId = this.router.parseUrl(this.router.url).queryParams.tmpWorkspaceId;\n  }\n\n  async ngOnInit() {\n  }\n\n  setActiveMode(mode: Mode) {\n    this.mode = mode;\n  }\n\n  clear() {\n    this.mode = Mode.both;\n  }\n\n}\n","import { HttpClient, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { last, retry } from 'rxjs/operators';\n\n@Injectable()\nexport class FileUploadService {\n  workspaceId = '';\n  private urlApiFileUpUpload: string = window.__env.apiDataworkBench + '/iati-testfiles/file/source';\n  private urlApiUrlsUpload: string = window.__env.apiDataworkBench + '/iati-testfiles/url/source';\n  private urlApiTestWorkspace: string = window.__env.apiDataworkBench + '/iati-testworkspaces';\n\n  constructor(\n    private readonly http: HttpClient,\n  ) { }\n\n  checkWorkspaceId(tmpWorkspaceId?: string): Observable<HttpResponse<any>> {\n    if (!tmpWorkspaceId) {\n      // create a new iati-testworkspace\n      const req = new HttpRequest('POST', this.urlApiTestWorkspace, '{}');\n\n      return this.http.request(req).pipe(\n        last(),\n        retry(3)\n      ) as any;\n    } else {\n      // check existing workspace\n      const req = new HttpRequest('GET', this.urlApiTestWorkspace + '/' + tmpWorkspaceId);\n\n      return this.http.request(req).pipe(\n        last(),\n        retry(3)\n      ) as any;\n    }\n  }\n\n  uploadFile(file: File, tmpWorkspaceId?: string): Observable<HttpResponse<any>> | null {\n    if (!file) {\n      return null;\n    }\n\n    const url = tmpWorkspaceId ? `${this.urlApiTestWorkspace}/${tmpWorkspaceId}/file/source` : this.urlApiFileUpUpload;\n    const uploadData = new FormData();\n    uploadData.append('file', file, file.name);\n\n    const req = new HttpRequest('POST', url, uploadData);\n\n    return this.http.request(req).pipe(\n      last(),\n      retry(3)\n    ) as any;\n  }\n\n  fetchFileByUrl(fileUrl: string, tmpWorkspaceId?: string) {\n    const url = tmpWorkspaceId ? `${this.urlApiTestWorkspace}/${tmpWorkspaceId}/url/source` : this.urlApiUrlsUpload;\n\n    return this.http.post<any>(\n      url,\n      JSON.stringify({ url: fileUrl }),\n      {\n        headers: {\n          'Content-Type': 'application/json' // eslint-disable-line @typescript-eslint/naming-convention\n        },\n        responseType: 'json'\n      }\n    );\n  }\n\n  setWorkspaceId(id: string) {\n    this.workspaceId = id;\n  }\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { forkJoin, of } from 'rxjs';\n\nimport { Mode } from '../validate-iati';\nimport { LogService } from './../../core/logging/log.service';\nimport { FileUploadService } from './../shared/file-upload.service';\n\n\n@Component({\n  selector: 'app-upload-file',\n  templateUrl: './upload-file.component.html',\n  styleUrls: ['./upload-file.component.scss']\n})\nexport class UploadFileComponent implements OnInit {\n  @Output() setActiveMode = new EventEmitter<Mode>();\n  @Output() clear = new EventEmitter<void>();\n\n  @Input() mode: Mode;\n\n  selectedFiles: File[] = [];\n  workspaceId = '';\n  tmpWorkspaceId = '';\n  fileUploaded = false;\n  requestStatus: 'pending' | 'draft' | 'success' | 'error' = 'draft';\n  fetchUrl = '';\n\n  activeStep = ['1'];\n\n  constructor(\n    private readonly logger: LogService,\n    private readonly router: Router,\n    private readonly fileUploadService: FileUploadService,\n  ) { }\n\n  ngOnInit() {\n    this.tmpWorkspaceId = this.router.parseUrl(this.router.url).queryParams.tmpWorkspaceId;\n  }\n\n  onFileChanged(event) {\n    this.requestStatus = 'draft';\n    this.setActiveMode.emit(Mode.local);\n    this.selectedFiles = event.target.files;\n    this.activeStep.push('2');\n  }\n\n  uploadFile(): void {\n    const files = Array.prototype.slice.call(this.selectedFiles);\n    const handleError = error => {\n      // this.logger.debug('Error message component: ', error);\n      this.requestStatus = 'error';\n    };\n\n    if (files.length) {\n      this.requestStatus = 'pending';\n\n      this.fileUploadService.checkWorkspaceId(this.tmpWorkspaceId)\n        .subscribe(\n          (response: HttpResponse<any>) => {\n            const tmpWorkspaceId = response.body.id;\n\n            this.parallelUpload(files, tmpWorkspaceId)\n              .subscribe(\n                () => {\n                  this.tmpWorkspaceId = tmpWorkspaceId;\n                  this.activeStep = ['3'];\n                  this.requestStatus = 'success';\n                },\n                handleError\n              );\n          },\n          handleError\n        );\n    }\n  }\n\n  validateFile() {\n    this.router.navigate(['validate', this.tmpWorkspaceId]);\n  }\n\n  clearFiles() {\n    this.clear.emit();\n    this.selectedFiles = [];\n    this.activeStep = ['1'];\n  }\n\n  isActiveStep(step: string): boolean {\n    return this.activeStep.includes(step);\n  }\n\n  private parallelUpload(files: File[], tmpWorkspaceId: string) {\n    if (!files.length) {\n      return of('skip' as any);\n    }\n\n    return forkJoin(files.map(file => this.fileUploadService.uploadFile(file, tmpWorkspaceId)) as any);\n  }\n}\n","<h4>Upload your IATI file and receive validation feedback.</h4>\n<div [ngClass]=\"{'disable': mode !== 'both' && mode === 'urls'}\">\n  <div class=\"step\" [ngClass]=\"{'next': isActiveStep('1')}\">\n    <h5 class=\"step-title\">Step 1: Select your IATI files. You can select multiple files at the same time.</h5>\n    <div class=\"row\">\n      <section *ngIf=\"selectedFiles.length\" class=\"col selected-files\" >\n        <p *ngFor=\"let file of selectedFiles\" class=\"file-name-p\">\n          {{file.name}}\n        </p>\n      </section>\n      <ng-container *ngIf=\"!isActiveStep('3')\">\n        <section class=\"col\">\n          <ng-container *ngIf=\"!selectedFiles.length; else clearState\">\n            <label class=\"btn btn-success iati-button border-radius-none iati-file-label\" for=\"file-upload\">\n              Browse\n            </label>\n            <input\n              id=\"file-upload\"\n              type=\"file\"\n              (change)=\"onFileChanged($event)\"\n              accept=\".xml\"\n              [disabled]=\"!isActiveStep('1') || mode !== 'both' && mode === 'urls'\"\n              multiple\n            >\n          </ng-container>\n          <ng-template #clearState>\n            <button\n              class=\"btn btn-success iati-button border-radius-none\"\n              (click)=\"clearFiles()\"\n              [disabled]=\"!isActiveStep('1')\"\n            >\n              Clear\n            </button>\n          </ng-template>\n        </section>\n      </ng-container>\n    </div>\n  </div>\n\n  <div class=\"step\" [ngClass]=\"{'next': isActiveStep('2')}\">\n    <h5 class=\"step-title\">Step 2: Upload your IATI files</h5>\n    <button\n      *ngIf=\"!isActiveStep('3')\"\n      class=\"btn btn-success iati-button border-radius-none\"\n      (click)=\"uploadFile()\"\n      [disabled]=\"!isActiveStep('2')\"\n    >\n      Upload\n    </button>\n\n    <div\n      *ngIf=\"requestStatus !== 'draft'\"\n      class=\"alert alert-info message\"\n      [ngClass]=\"{'alert-danger': requestStatus === 'error'}\"\n    >\n      <ng-container [ngSwitch]=\"requestStatus\">\n        <ng-container *ngSwitchCase=\"'error'\">\n          File(s) uploading failed. Check your files and try again.\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'success'\">\n          File(s) have been uploaded successfully\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <app-spinner [backColor]=\"'white'\"></app-spinner>\n          Your files are uploading now. Large files could uploading more than few minutes.\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n\n  <div\n    class=\"step\"\n    [ngClass]=\"{'next': isActiveStep('3')}\"\n  >\n    <h5 class=\"step-title\">Step 3: Start validating your files</h5>\n    <button\n      class=\"btn btn-success iati-button border-radius-none\"\n      (click)=\"validateFile()\"\n      [disabled]=\"!isActiveStep('3')\"\n    >\n      Validate\n    </button>\n  </div>\n\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { LogService } from '../../core/logging/log.service';\nimport { IatiTestDataset } from './iati-testdataset';\n\n\n@Injectable()\nexport class ValidatedIatiService {\n  private urlApiIatiDataset: string = window.__env.apiDataworkBench + '/iati-testdatasets';\n\n  constructor(\n    private logger: LogService,\n    private http: HttpClient\n  ) { }\n\n  getIatiDataset(workspaceId: string): Observable<IatiTestDataset[]> {\n    const url: string = this.urlApiIatiDataset + '/?filter[where][tmpworkspaceId]=' + workspaceId;\n\n    this.logger.debug(url);\n\n    return this.http.get<IatiTestDataset>(url)\n      .pipe(\n        tap(_ => this.logger.debug(`fetched iati dataset`)),\n        catchError(this.handleError('getIatiDataset', undefined))\n      ) as any;\n  }\n\n  getIatiDatasetById(inUploadId: string): Observable<IatiTestDataset> {\n    const url: string = this.urlApiIatiDataset + '/' + inUploadId;\n    return this.http.get<any>(url)\n      .pipe(\n        tap(_ => this.logger.debug(`fetched iati dataset`)),\n        catchError(this.handleError('getIatiDataset', undefined))\n      ) as any;\n  }\n\n  // TODO: replace any\n  getTmpWorkspace(workspaceId: string): any {\n    const url: string = this.urlApiTmpWorkspace(workspaceId);\n\n    return this.http.get(url).pipe(\n      catchError(this.handleError('getTmpWorkspace', undefined))\n    );\n\n  }\n\n  sendEmail(id: string, email: string) {\n    return this.http.patch(this.urlApiTmpWorkspace(id), {\n      email\n    }).pipe(\n      catchError(this.handleError('sendEmail', undefined))\n    );\n  }\n\n\n  private urlApiTmpWorkspace = (id: string) => `${window.__env.apiDataworkBench}/iati-testworkspaces/${id}`;\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging\n      this.logger.error(error);\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","export enum Mode { // eslint-disable-line no-shadow\n  local = 'local',\n  urls = 'urls',\n  both = 'both'\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SharedModule } from './../shared/shared.module';\nimport { FileUploadService } from './shared/file-upload.service';\nimport { MessagesService } from './shared/messages.service';\nimport { ValidatedIatiService } from './shared/validated-iati.service';\nimport { UploadFileComponent } from './upload-file/upload-file.component';\nimport { UploadUrlsComponent } from './upload-urls/upload-urls.component';\nimport { ValidateResultComponent } from './validate-result/validate-result.component';\nimport { ValidateComponent } from './validate/validate.component';\n\n\nconst routes: Routes = [\n  { path: '', component: ValidateComponent },\n  { path: ':id', component: ValidateResultComponent },\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    HttpClientModule,\n    SharedModule\n  ],\n  declarations: [\n    ValidateComponent,\n    UploadFileComponent,\n    ValidateResultComponent,\n    UploadUrlsComponent,\n  ],\n  providers: [\n    FileUploadService,\n    MessagesService,\n    ValidatedIatiService\n  ]\n})\nexport class ValidateIatiModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Message } from './message';\n\n\n@Injectable()\nexport class MessagesService {\n  messages = new Subject<Message[]>();\n  messagesLocal: Message[] = [];\n\n  constructor() { }\n\n  add(message: Message) {\n    this.messagesLocal.push(message);\n    this.messages.next(this.messagesLocal.slice());\n  }\n\n  clear() {\n    this.messagesLocal = [];\n    this.messages.next(this.messagesLocal.slice());\n  }\n\n}\n"]}